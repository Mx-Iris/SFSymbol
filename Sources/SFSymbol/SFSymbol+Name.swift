import Foundation

extension SFSymbol {
    public enum SystemSymbolName: String, CaseIterable, SymbolName {

        /// SF Symbols's name：0.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _0Circle = "0.circle"

        /// SF Symbols's name：0.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _0CircleFill = "0.circle.fill"

        /// SF Symbols's name：0.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _0Square = "0.square"

        /// SF Symbols's name：0.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _0SquareFill = "0.square.fill"

        /// SF Symbols's name：00.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _00Circle = "00.circle"

        /// SF Symbols's name：00.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _00CircleFill = "00.circle.fill"

        /// SF Symbols's name：00.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _00Square = "00.square"

        /// SF Symbols's name：00.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _00SquareFill = "00.square.fill"

        /// SF Symbols's name：01.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _01Circle = "01.circle"

        /// SF Symbols's name：01.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _01CircleFill = "01.circle.fill"

        /// SF Symbols's name：01.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _01Square = "01.square"

        /// SF Symbols's name：01.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _01SquareFill = "01.square.fill"

        /// SF Symbols's name：02.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _02Circle = "02.circle"

        /// SF Symbols's name：02.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _02CircleFill = "02.circle.fill"

        /// SF Symbols's name：02.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _02Square = "02.square"

        /// SF Symbols's name：02.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _02SquareFill = "02.square.fill"

        /// SF Symbols's name：03.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _03Circle = "03.circle"

        /// SF Symbols's name：03.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _03CircleFill = "03.circle.fill"

        /// SF Symbols's name：03.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _03Square = "03.square"

        /// SF Symbols's name：03.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _03SquareFill = "03.square.fill"

        /// SF Symbols's name：04.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _04Circle = "04.circle"

        /// SF Symbols's name：04.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _04CircleFill = "04.circle.fill"

        /// SF Symbols's name：04.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _04Square = "04.square"

        /// SF Symbols's name：04.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _04SquareFill = "04.square.fill"

        /// SF Symbols's name：05.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _05Circle = "05.circle"

        /// SF Symbols's name：05.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _05CircleFill = "05.circle.fill"

        /// SF Symbols's name：05.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _05Square = "05.square"

        /// SF Symbols's name：05.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _05SquareFill = "05.square.fill"

        /// SF Symbols's name：06.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _06Circle = "06.circle"

        /// SF Symbols's name：06.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _06CircleFill = "06.circle.fill"

        /// SF Symbols's name：06.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _06Square = "06.square"

        /// SF Symbols's name：06.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _06SquareFill = "06.square.fill"

        /// SF Symbols's name：07.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _07Circle = "07.circle"

        /// SF Symbols's name：07.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _07CircleFill = "07.circle.fill"

        /// SF Symbols's name：07.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _07Square = "07.square"

        /// SF Symbols's name：07.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _07SquareFill = "07.square.fill"

        /// SF Symbols's name：08.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _08Circle = "08.circle"

        /// SF Symbols's name：08.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _08CircleFill = "08.circle.fill"

        /// SF Symbols's name：08.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _08Square = "08.square"

        /// SF Symbols's name：08.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _08SquareFill = "08.square.fill"

        /// SF Symbols's name：09.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _09Circle = "09.circle"

        /// SF Symbols's name：09.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _09CircleFill = "09.circle.fill"

        /// SF Symbols's name：09.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _09Square = "09.square"

        /// SF Symbols's name：09.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _09SquareFill = "09.square.fill"

        /// SF Symbols's name：1.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _1Circle = "1.circle"

        /// SF Symbols's name：1.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _1CircleFill = "1.circle.fill"

        /// SF Symbols's name：1.magnifyingglass
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _1Magnifyingglass = "1.magnifyingglass"

        /// SF Symbols's name：1.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _1Square = "1.square"

        /// SF Symbols's name：1.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _1SquareFill = "1.square.fill"

        /// SF Symbols's name：10.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _10Circle = "10.circle"

        /// SF Symbols's name：10.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _10CircleFill = "10.circle.fill"

        /// SF Symbols's name：10.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _10Square = "10.square"

        /// SF Symbols's name：10.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _10SquareFill = "10.square.fill"

        /// SF Symbols's name：11.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _11Circle = "11.circle"

        /// SF Symbols's name：11.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _11CircleFill = "11.circle.fill"

        /// SF Symbols's name：11.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _11Square = "11.square"

        /// SF Symbols's name：11.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _11SquareFill = "11.square.fill"

        /// SF Symbols's name：12.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _12Circle = "12.circle"

        /// SF Symbols's name：12.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _12CircleFill = "12.circle.fill"

        /// SF Symbols's name：12.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _12Square = "12.square"

        /// SF Symbols's name：12.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _12SquareFill = "12.square.fill"

        /// SF Symbols's name：13.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _13Circle = "13.circle"

        /// SF Symbols's name：13.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _13CircleFill = "13.circle.fill"

        /// SF Symbols's name：13.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _13Square = "13.square"

        /// SF Symbols's name：13.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _13SquareFill = "13.square.fill"

        /// SF Symbols's name：14.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _14Circle = "14.circle"

        /// SF Symbols's name：14.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _14CircleFill = "14.circle.fill"

        /// SF Symbols's name：14.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _14Square = "14.square"

        /// SF Symbols's name：14.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _14SquareFill = "14.square.fill"

        /// SF Symbols's name：15.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _15Circle = "15.circle"

        /// SF Symbols's name：15.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _15CircleFill = "15.circle.fill"

        /// SF Symbols's name：15.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _15Square = "15.square"

        /// SF Symbols's name：15.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _15SquareFill = "15.square.fill"

        /// SF Symbols's name：16.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _16Circle = "16.circle"

        /// SF Symbols's name：16.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _16CircleFill = "16.circle.fill"

        /// SF Symbols's name：16.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _16Square = "16.square"

        /// SF Symbols's name：16.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _16SquareFill = "16.square.fill"

        /// SF Symbols's name：17.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _17Circle = "17.circle"

        /// SF Symbols's name：17.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _17CircleFill = "17.circle.fill"

        /// SF Symbols's name：17.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _17Square = "17.square"

        /// SF Symbols's name：17.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _17SquareFill = "17.square.fill"

        /// SF Symbols's name：18.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _18Circle = "18.circle"

        /// SF Symbols's name：18.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _18CircleFill = "18.circle.fill"

        /// SF Symbols's name：18.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _18Square = "18.square"

        /// SF Symbols's name：18.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _18SquareFill = "18.square.fill"

        /// SF Symbols's name：19.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _19Circle = "19.circle"

        /// SF Symbols's name：19.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _19CircleFill = "19.circle.fill"

        /// SF Symbols's name：19.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _19Square = "19.square"

        /// SF Symbols's name：19.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _19SquareFill = "19.square.fill"

        /// SF Symbols's name：2.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _2Circle = "2.circle"

        /// SF Symbols's name：2.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _2CircleFill = "2.circle.fill"

        /// SF Symbols's name：2.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _2Square = "2.square"

        /// SF Symbols's name：2.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _2SquareFill = "2.square.fill"

        /// SF Symbols's name：20.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _20Circle = "20.circle"

        /// SF Symbols's name：20.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _20CircleFill = "20.circle.fill"

        /// SF Symbols's name：20.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _20Square = "20.square"

        /// SF Symbols's name：20.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _20SquareFill = "20.square.fill"

        /// SF Symbols's name：21.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _21Circle = "21.circle"

        /// SF Symbols's name：21.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _21CircleFill = "21.circle.fill"

        /// SF Symbols's name：21.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _21Square = "21.square"

        /// SF Symbols's name：21.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _21SquareFill = "21.square.fill"

        /// SF Symbols's name：22.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _22Circle = "22.circle"

        /// SF Symbols's name：22.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _22CircleFill = "22.circle.fill"

        /// SF Symbols's name：22.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _22Square = "22.square"

        /// SF Symbols's name：22.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _22SquareFill = "22.square.fill"

        /// SF Symbols's name：23.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _23Circle = "23.circle"

        /// SF Symbols's name：23.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _23CircleFill = "23.circle.fill"

        /// SF Symbols's name：23.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _23Square = "23.square"

        /// SF Symbols's name：23.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _23SquareFill = "23.square.fill"

        /// SF Symbols's name：24.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _24Circle = "24.circle"

        /// SF Symbols's name：24.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _24CircleFill = "24.circle.fill"

        /// SF Symbols's name：24.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _24Square = "24.square"

        /// SF Symbols's name：24.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _24SquareFill = "24.square.fill"

        /// SF Symbols's name：25.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _25Circle = "25.circle"

        /// SF Symbols's name：25.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _25CircleFill = "25.circle.fill"

        /// SF Symbols's name：25.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _25Square = "25.square"

        /// SF Symbols's name：25.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _25SquareFill = "25.square.fill"

        /// SF Symbols's name：26.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _26Circle = "26.circle"

        /// SF Symbols's name：26.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _26CircleFill = "26.circle.fill"

        /// SF Symbols's name：26.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _26Square = "26.square"

        /// SF Symbols's name：26.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _26SquareFill = "26.square.fill"

        /// SF Symbols's name：27.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _27Circle = "27.circle"

        /// SF Symbols's name：27.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _27CircleFill = "27.circle.fill"

        /// SF Symbols's name：27.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _27Square = "27.square"

        /// SF Symbols's name：27.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _27SquareFill = "27.square.fill"

        /// SF Symbols's name：28.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _28Circle = "28.circle"

        /// SF Symbols's name：28.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _28CircleFill = "28.circle.fill"

        /// SF Symbols's name：28.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _28Square = "28.square"

        /// SF Symbols's name：28.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _28SquareFill = "28.square.fill"

        /// SF Symbols's name：29.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _29Circle = "29.circle"

        /// SF Symbols's name：29.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _29CircleFill = "29.circle.fill"

        /// SF Symbols's name：29.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _29Square = "29.square"

        /// SF Symbols's name：29.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _29SquareFill = "29.square.fill"

        /// SF Symbols's name：3.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _3Circle = "3.circle"

        /// SF Symbols's name：3.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _3CircleFill = "3.circle.fill"

        /// SF Symbols's name：3.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _3Square = "3.square"

        /// SF Symbols's name：3.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _3SquareFill = "3.square.fill"

        /// SF Symbols's name：30.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _30Circle = "30.circle"

        /// SF Symbols's name：30.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _30CircleFill = "30.circle.fill"

        /// SF Symbols's name：30.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _30Square = "30.square"

        /// SF Symbols's name：30.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _30SquareFill = "30.square.fill"

        /// SF Symbols's name：31.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _31Circle = "31.circle"

        /// SF Symbols's name：31.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _31CircleFill = "31.circle.fill"

        /// SF Symbols's name：31.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _31Square = "31.square"

        /// SF Symbols's name：31.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _31SquareFill = "31.square.fill"

        /// SF Symbols's name：32.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _32Circle = "32.circle"

        /// SF Symbols's name：32.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _32CircleFill = "32.circle.fill"

        /// SF Symbols's name：32.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _32Square = "32.square"

        /// SF Symbols's name：32.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _32SquareFill = "32.square.fill"

        /// SF Symbols's name：33.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _33Circle = "33.circle"

        /// SF Symbols's name：33.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _33CircleFill = "33.circle.fill"

        /// SF Symbols's name：33.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _33Square = "33.square"

        /// SF Symbols's name：33.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _33SquareFill = "33.square.fill"

        /// SF Symbols's name：34.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _34Circle = "34.circle"

        /// SF Symbols's name：34.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _34CircleFill = "34.circle.fill"

        /// SF Symbols's name：34.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _34Square = "34.square"

        /// SF Symbols's name：34.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _34SquareFill = "34.square.fill"

        /// SF Symbols's name：35.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _35Circle = "35.circle"

        /// SF Symbols's name：35.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _35CircleFill = "35.circle.fill"

        /// SF Symbols's name：35.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _35Square = "35.square"

        /// SF Symbols's name：35.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _35SquareFill = "35.square.fill"

        /// SF Symbols's name：36.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _36Circle = "36.circle"

        /// SF Symbols's name：36.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _36CircleFill = "36.circle.fill"

        /// SF Symbols's name：36.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _36Square = "36.square"

        /// SF Symbols's name：36.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _36SquareFill = "36.square.fill"

        /// SF Symbols's name：37.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _37Circle = "37.circle"

        /// SF Symbols's name：37.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _37CircleFill = "37.circle.fill"

        /// SF Symbols's name：37.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _37Square = "37.square"

        /// SF Symbols's name：37.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _37SquareFill = "37.square.fill"

        /// SF Symbols's name：38.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _38Circle = "38.circle"

        /// SF Symbols's name：38.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _38CircleFill = "38.circle.fill"

        /// SF Symbols's name：38.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _38Square = "38.square"

        /// SF Symbols's name：38.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _38SquareFill = "38.square.fill"

        /// SF Symbols's name：39.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _39Circle = "39.circle"

        /// SF Symbols's name：39.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _39CircleFill = "39.circle.fill"

        /// SF Symbols's name：39.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _39Square = "39.square"

        /// SF Symbols's name：39.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _39SquareFill = "39.square.fill"

        /// SF Symbols's name：4.alt.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4AltCircle = "4.alt.circle"

        /// SF Symbols's name：4.alt.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4AltCircleFill = "4.alt.circle.fill"

        /// SF Symbols's name：4.alt.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4AltSquare = "4.alt.square"

        /// SF Symbols's name：4.alt.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4AltSquareFill = "4.alt.square.fill"

        /// SF Symbols's name：4.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4Circle = "4.circle"

        /// SF Symbols's name：4.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4CircleFill = "4.circle.fill"

        /// SF Symbols's name：4.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4Square = "4.square"

        /// SF Symbols's name：4.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _4SquareFill = "4.square.fill"

        /// SF Symbols's name：40.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _40Circle = "40.circle"

        /// SF Symbols's name：40.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _40CircleFill = "40.circle.fill"

        /// SF Symbols's name：40.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _40Square = "40.square"

        /// SF Symbols's name：40.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _40SquareFill = "40.square.fill"

        /// SF Symbols's name：41.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _41Circle = "41.circle"

        /// SF Symbols's name：41.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _41CircleFill = "41.circle.fill"

        /// SF Symbols's name：41.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _41Square = "41.square"

        /// SF Symbols's name：41.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _41SquareFill = "41.square.fill"

        /// SF Symbols's name：42.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _42Circle = "42.circle"

        /// SF Symbols's name：42.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _42CircleFill = "42.circle.fill"

        /// SF Symbols's name：42.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _42Square = "42.square"

        /// SF Symbols's name：42.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _42SquareFill = "42.square.fill"

        /// SF Symbols's name：43.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _43Circle = "43.circle"

        /// SF Symbols's name：43.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _43CircleFill = "43.circle.fill"

        /// SF Symbols's name：43.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _43Square = "43.square"

        /// SF Symbols's name：43.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _43SquareFill = "43.square.fill"

        /// SF Symbols's name：44.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _44Circle = "44.circle"

        /// SF Symbols's name：44.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _44CircleFill = "44.circle.fill"

        /// SF Symbols's name：44.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _44Square = "44.square"

        /// SF Symbols's name：44.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _44SquareFill = "44.square.fill"

        /// SF Symbols's name：45.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _45Circle = "45.circle"

        /// SF Symbols's name：45.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _45CircleFill = "45.circle.fill"

        /// SF Symbols's name：45.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _45Square = "45.square"

        /// SF Symbols's name：45.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _45SquareFill = "45.square.fill"

        /// SF Symbols's name：46.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _46Circle = "46.circle"

        /// SF Symbols's name：46.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _46CircleFill = "46.circle.fill"

        /// SF Symbols's name：46.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _46Square = "46.square"

        /// SF Symbols's name：46.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _46SquareFill = "46.square.fill"

        /// SF Symbols's name：47.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _47Circle = "47.circle"

        /// SF Symbols's name：47.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _47CircleFill = "47.circle.fill"

        /// SF Symbols's name：47.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _47Square = "47.square"

        /// SF Symbols's name：47.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _47SquareFill = "47.square.fill"

        /// SF Symbols's name：48.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _48Circle = "48.circle"

        /// SF Symbols's name：48.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _48CircleFill = "48.circle.fill"

        /// SF Symbols's name：48.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _48Square = "48.square"

        /// SF Symbols's name：48.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _48SquareFill = "48.square.fill"

        /// SF Symbols's name：49.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _49Circle = "49.circle"

        /// SF Symbols's name：49.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _49CircleFill = "49.circle.fill"

        /// SF Symbols's name：49.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _49Square = "49.square"

        /// SF Symbols's name：49.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _49SquareFill = "49.square.fill"

        /// SF Symbols's name：5.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _5Circle = "5.circle"

        /// SF Symbols's name：5.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _5CircleFill = "5.circle.fill"

        /// SF Symbols's name：5.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _5Square = "5.square"

        /// SF Symbols's name：5.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _5SquareFill = "5.square.fill"

        /// SF Symbols's name：50.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _50Circle = "50.circle"

        /// SF Symbols's name：50.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _50CircleFill = "50.circle.fill"

        /// SF Symbols's name：50.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _50Square = "50.square"

        /// SF Symbols's name：50.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _50SquareFill = "50.square.fill"

        /// SF Symbols's name：6.alt.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6AltCircle = "6.alt.circle"

        /// SF Symbols's name：6.alt.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6AltCircleFill = "6.alt.circle.fill"

        /// SF Symbols's name：6.alt.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6AltSquare = "6.alt.square"

        /// SF Symbols's name：6.alt.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6AltSquareFill = "6.alt.square.fill"

        /// SF Symbols's name：6.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6Circle = "6.circle"

        /// SF Symbols's name：6.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6CircleFill = "6.circle.fill"

        /// SF Symbols's name：6.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6Square = "6.square"

        /// SF Symbols's name：6.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _6SquareFill = "6.square.fill"

        /// SF Symbols's name：7.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _7Circle = "7.circle"

        /// SF Symbols's name：7.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _7CircleFill = "7.circle.fill"

        /// SF Symbols's name：7.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _7Square = "7.square"

        /// SF Symbols's name：7.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _7SquareFill = "7.square.fill"

        /// SF Symbols's name：8.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _8Circle = "8.circle"

        /// SF Symbols's name：8.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _8CircleFill = "8.circle.fill"

        /// SF Symbols's name：8.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _8Square = "8.square"

        /// SF Symbols's name：8.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _8SquareFill = "8.square.fill"

        /// SF Symbols's name：9.alt.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9AltCircle = "9.alt.circle"

        /// SF Symbols's name：9.alt.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9AltCircleFill = "9.alt.circle.fill"

        /// SF Symbols's name：9.alt.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9AltSquare = "9.alt.square"

        /// SF Symbols's name：9.alt.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9AltSquareFill = "9.alt.square.fill"

        /// SF Symbols's name：9.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9Circle = "9.circle"

        /// SF Symbols's name：9.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9CircleFill = "9.circle.fill"

        /// SF Symbols's name：9.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9Square = "9.square"

        /// SF Symbols's name：9.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case _9SquareFill = "9.square.fill"

        /// SF Symbols's name：a
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case a = "a"

        /// SF Symbols's name：a.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case aCircle = "a.circle"

        /// SF Symbols's name：a.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case aCircleFill = "a.circle.fill"

        /// SF Symbols's name：a.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case aSquare = "a.square"

        /// SF Symbols's name：a.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case aSquareFill = "a.square.fill"

        /// SF Symbols's name：airplane
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case airplane = "airplane"

        /// SF Symbols's name：airplayaudio
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case airplayaudio = "airplayaudio"

        /// SF Symbols's name：airplayvideo
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case airplayvideo = "airplayvideo"

        /// SF Symbols's name：alarm
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case alarm = "alarm"

        /// SF Symbols's name：alarm.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case alarmFill = "alarm.fill"

        /// SF Symbols's name：alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case alt = "alt"

        /// SF Symbols's name：ant
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ant = "ant"

        /// SF Symbols's name：ant.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case antCircle = "ant.circle"

        /// SF Symbols's name：ant.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case antCircleFill = "ant.circle.fill"

        /// SF Symbols's name：ant.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case antFill = "ant.fill"

        /// SF Symbols's name：antenna.radiowaves.left.and.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case antennaRadiowavesLeftAndRight = "antenna.radiowaves.left.and.right"

        /// SF Symbols's name：app
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case app = "app"

        /// SF Symbols's name：app.badge
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case appBadge = "app.badge"

        /// SF Symbols's name：app.badge.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case appBadgeFill = "app.badge.fill"

        /// SF Symbols's name：app.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case appFill = "app.fill"

        /// SF Symbols's name：app.gift
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case appGift = "app.gift"

        /// SF Symbols's name：app.gift.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case appGiftFill = "app.gift.fill"

        /// SF Symbols's name：archivebox
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case archivebox = "archivebox"

        /// SF Symbols's name：archivebox.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case archiveboxFill = "archivebox.fill"

        /// SF Symbols's name：arkit
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arkit = "arkit"

        /// SF Symbols's name：arrow.2.circlepath
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrow2Circlepath = "arrow.2.circlepath"

        /// SF Symbols's name：arrow.2.circlepath.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrow2CirclepathCircle = "arrow.2.circlepath.circle"

        /// SF Symbols's name：arrow.2.circlepath.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrow2CirclepathCircleFill = "arrow.2.circlepath.circle.fill"

        /// SF Symbols's name：arrow.2.squarepath
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrow2Squarepath = "arrow.2.squarepath"

        /// SF Symbols's name：arrow.3.trianglepath
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrow3Trianglepath = "arrow.3.trianglepath"

        /// SF Symbols's name：arrow.branch
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowBranch = "arrow.branch"

        /// SF Symbols's name：arrow.clockwise
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowClockwise = "arrow.clockwise"

        /// SF Symbols's name：arrow.clockwise.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowClockwiseCircle = "arrow.clockwise.circle"

        /// SF Symbols's name：arrow.clockwise.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowClockwiseCircleFill = "arrow.clockwise.circle.fill"

        /// SF Symbols's name：arrow.clockwise.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowClockwiseIcloud = "arrow.clockwise.icloud"

        /// SF Symbols's name：arrow.clockwise.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowClockwiseIcloudFill = "arrow.clockwise.icloud.fill"

        /// SF Symbols's name：arrow.counterclockwise
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowCounterclockwise = "arrow.counterclockwise"

        /// SF Symbols's name：arrow.counterclockwise.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowCounterclockwiseCircle = "arrow.counterclockwise.circle"

        /// SF Symbols's name：arrow.counterclockwise.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowCounterclockwiseCircleFill = "arrow.counterclockwise.circle.fill"

        /// SF Symbols's name：arrow.counterclockwise.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowCounterclockwiseIcloud = "arrow.counterclockwise.icloud"

        /// SF Symbols's name：arrow.counterclockwise.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowCounterclockwiseIcloudFill = "arrow.counterclockwise.icloud.fill"

        /// SF Symbols's name：arrow.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDown = "arrow.down"

        /// SF Symbols's name：arrow.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownCircle = "arrow.down.circle"

        /// SF Symbols's name：arrow.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownCircleFill = "arrow.down.circle.fill"

        /// SF Symbols's name：arrow.down.doc
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownDoc = "arrow.down.doc"

        /// SF Symbols's name：arrow.down.doc.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownDocFill = "arrow.down.doc.fill"

        /// SF Symbols's name：arrow.down.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeft = "arrow.down.left"

        /// SF Symbols's name：arrow.down.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeftCircle = "arrow.down.left.circle"

        /// SF Symbols's name：arrow.down.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeftCircleFill = "arrow.down.left.circle.fill"

        /// SF Symbols's name：arrow.down.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeftSquare = "arrow.down.left.square"

        /// SF Symbols's name：arrow.down.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeftSquareFill = "arrow.down.left.square.fill"

        /// SF Symbols's name：arrow.down.left.video
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeftVideo = "arrow.down.left.video"

        /// SF Symbols's name：arrow.down.left.video.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownLeftVideoFill = "arrow.down.left.video.fill"

        /// SF Symbols's name：arrow.down.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownRight = "arrow.down.right"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownRightAndArrowUpLeft = "arrow.down.right.and.arrow.up.left"

        /// SF Symbols's name：arrow.down.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownRightCircle = "arrow.down.right.circle"

        /// SF Symbols's name：arrow.down.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownRightCircleFill = "arrow.down.right.circle.fill"

        /// SF Symbols's name：arrow.down.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownRightSquare = "arrow.down.right.square"

        /// SF Symbols's name：arrow.down.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownRightSquareFill = "arrow.down.right.square.fill"

        /// SF Symbols's name：arrow.down.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownSquare = "arrow.down.square"

        /// SF Symbols's name：arrow.down.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownSquareFill = "arrow.down.square.fill"

        /// SF Symbols's name：arrow.down.to.line
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownToLine = "arrow.down.to.line"

        /// SF Symbols's name：arrow.down.to.line.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowDownToLineAlt = "arrow.down.to.line.alt"

        /// SF Symbols's name：arrow.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeft = "arrow.left"

        /// SF Symbols's name：arrow.left.and.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftAndRight = "arrow.left.and.right"

        /// SF Symbols's name：arrow.left.and.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftAndRightCircle = "arrow.left.and.right.circle"

        /// SF Symbols's name：arrow.left.and.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftAndRightCircleFill = "arrow.left.and.right.circle.fill"

        /// SF Symbols's name：arrow.left.and.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftAndRightSquare = "arrow.left.and.right.square"

        /// SF Symbols's name：arrow.left.and.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftAndRightSquareFill = "arrow.left.and.right.square.fill"

        /// SF Symbols's name：arrow.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftCircle = "arrow.left.circle"

        /// SF Symbols's name：arrow.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftCircleFill = "arrow.left.circle.fill"

        /// SF Symbols's name：arrow.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftSquare = "arrow.left.square"

        /// SF Symbols's name：arrow.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftSquareFill = "arrow.left.square.fill"

        /// SF Symbols's name：arrow.left.to.line
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftToLine = "arrow.left.to.line"

        /// SF Symbols's name：arrow.left.to.line.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowLeftToLineAlt = "arrow.left.to.line.alt"

        /// SF Symbols's name：arrow.merge
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowMerge = "arrow.merge"

        /// SF Symbols's name：arrow.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRight = "arrow.right"

        /// SF Symbols's name：arrow.right.arrow.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightArrowLeft = "arrow.right.arrow.left"

        /// SF Symbols's name：arrow.right.arrow.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightArrowLeftCircle = "arrow.right.arrow.left.circle"

        /// SF Symbols's name：arrow.right.arrow.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightArrowLeftCircleFill = "arrow.right.arrow.left.circle.fill"

        /// SF Symbols's name：arrow.right.arrow.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightArrowLeftSquare = "arrow.right.arrow.left.square"

        /// SF Symbols's name：arrow.right.arrow.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightArrowLeftSquareFill = "arrow.right.arrow.left.square.fill"

        /// SF Symbols's name：arrow.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightCircle = "arrow.right.circle"

        /// SF Symbols's name：arrow.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightCircleFill = "arrow.right.circle.fill"

        /// SF Symbols's name：arrow.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightSquare = "arrow.right.square"

        /// SF Symbols's name：arrow.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightSquareFill = "arrow.right.square.fill"

        /// SF Symbols's name：arrow.right.to.line
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightToLine = "arrow.right.to.line"

        /// SF Symbols's name：arrow.right.to.line.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowRightToLineAlt = "arrow.right.to.line.alt"

        /// SF Symbols's name：arrow.swap
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowSwap = "arrow.swap"

        /// SF Symbols's name：arrow.turn.down.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnDownLeft = "arrow.turn.down.left"

        /// SF Symbols's name：arrow.turn.down.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnDownRight = "arrow.turn.down.right"

        /// SF Symbols's name：arrow.turn.left.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnLeftDown = "arrow.turn.left.down"

        /// SF Symbols's name：arrow.turn.left.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnLeftUp = "arrow.turn.left.up"

        /// SF Symbols's name：arrow.turn.right.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnRightDown = "arrow.turn.right.down"

        /// SF Symbols's name：arrow.turn.right.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnRightUp = "arrow.turn.right.up"

        /// SF Symbols's name：arrow.turn.up.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnUpLeft = "arrow.turn.up.left"

        /// SF Symbols's name：arrow.turn.up.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowTurnUpRight = "arrow.turn.up.right"

        /// SF Symbols's name：arrow.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUp = "arrow.up"

        /// SF Symbols's name：arrow.up.and.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpAndDown = "arrow.up.and.down"

        /// SF Symbols's name：arrow.up.and.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpAndDownCircle = "arrow.up.and.down.circle"

        /// SF Symbols's name：arrow.up.and.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpAndDownCircleFill = "arrow.up.and.down.circle.fill"

        /// SF Symbols's name：arrow.up.and.down.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpAndDownSquare = "arrow.up.and.down.square"

        /// SF Symbols's name：arrow.up.and.down.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpAndDownSquareFill = "arrow.up.and.down.square.fill"

        /// SF Symbols's name：arrow.up.arrow.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpArrowDown = "arrow.up.arrow.down"

        /// SF Symbols's name：arrow.up.arrow.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpArrowDownCircle = "arrow.up.arrow.down.circle"

        /// SF Symbols's name：arrow.up.arrow.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpArrowDownCircleFill = "arrow.up.arrow.down.circle.fill"

        /// SF Symbols's name：arrow.up.arrow.down.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpArrowDownSquare = "arrow.up.arrow.down.square"

        /// SF Symbols's name：arrow.up.arrow.down.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpArrowDownSquareFill = "arrow.up.arrow.down.square.fill"

        /// SF Symbols's name：arrow.up.bin
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpBin = "arrow.up.bin"

        /// SF Symbols's name：arrow.up.bin.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpBinFill = "arrow.up.bin.fill"

        /// SF Symbols's name：arrow.up.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpCircle = "arrow.up.circle"

        /// SF Symbols's name：arrow.up.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpCircleFill = "arrow.up.circle.fill"

        /// SF Symbols's name：arrow.up.doc
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpDoc = "arrow.up.doc"

        /// SF Symbols's name：arrow.up.doc.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpDocFill = "arrow.up.doc.fill"

        /// SF Symbols's name：arrow.up.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpLeft = "arrow.up.left"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpLeftAndArrowDownRight = "arrow.up.left.and.arrow.down.right"

        /// SF Symbols's name：arrow.up.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpLeftCircle = "arrow.up.left.circle"

        /// SF Symbols's name：arrow.up.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpLeftCircleFill = "arrow.up.left.circle.fill"

        /// SF Symbols's name：arrow.up.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpLeftSquare = "arrow.up.left.square"

        /// SF Symbols's name：arrow.up.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpLeftSquareFill = "arrow.up.left.square.fill"

        /// SF Symbols's name：arrow.up.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRight = "arrow.up.right"

        /// SF Symbols's name：arrow.up.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightCircle = "arrow.up.right.circle"

        /// SF Symbols's name：arrow.up.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightCircleFill = "arrow.up.right.circle.fill"

        /// SF Symbols's name：arrow.up.right.diamond
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightDiamond = "arrow.up.right.diamond"

        /// SF Symbols's name：arrow.up.right.diamond.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightDiamondFill = "arrow.up.right.diamond.fill"

        /// SF Symbols's name：arrow.up.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightSquare = "arrow.up.right.square"

        /// SF Symbols's name：arrow.up.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightSquareFill = "arrow.up.right.square.fill"

        /// SF Symbols's name：arrow.up.right.video
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightVideo = "arrow.up.right.video"

        /// SF Symbols's name：arrow.up.right.video.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpRightVideoFill = "arrow.up.right.video.fill"

        /// SF Symbols's name：arrow.up.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpSquare = "arrow.up.square"

        /// SF Symbols's name：arrow.up.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpSquareFill = "arrow.up.square.fill"

        /// SF Symbols's name：arrow.up.to.line
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpToLine = "arrow.up.to.line"

        /// SF Symbols's name：arrow.up.to.line.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUpToLineAlt = "arrow.up.to.line.alt"

        /// SF Symbols's name：arrow.uturn.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnDown = "arrow.uturn.down"

        /// SF Symbols's name：arrow.uturn.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnDownCircle = "arrow.uturn.down.circle"

        /// SF Symbols's name：arrow.uturn.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnDownCircleFill = "arrow.uturn.down.circle.fill"

        /// SF Symbols's name：arrow.uturn.down.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnDownSquare = "arrow.uturn.down.square"

        /// SF Symbols's name：arrow.uturn.down.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnDownSquareFill = "arrow.uturn.down.square.fill"

        /// SF Symbols's name：arrow.uturn.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnLeft = "arrow.uturn.left"

        /// SF Symbols's name：arrow.uturn.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnLeftCircle = "arrow.uturn.left.circle"

        /// SF Symbols's name：arrow.uturn.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnLeftCircleFill = "arrow.uturn.left.circle.fill"

        /// SF Symbols's name：arrow.uturn.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnLeftSquare = "arrow.uturn.left.square"

        /// SF Symbols's name：arrow.uturn.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnLeftSquareFill = "arrow.uturn.left.square.fill"

        /// SF Symbols's name：arrow.uturn.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnRight = "arrow.uturn.right"

        /// SF Symbols's name：arrow.uturn.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnRightCircle = "arrow.uturn.right.circle"

        /// SF Symbols's name：arrow.uturn.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnRightCircleFill = "arrow.uturn.right.circle.fill"

        /// SF Symbols's name：arrow.uturn.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnRightSquare = "arrow.uturn.right.square"

        /// SF Symbols's name：arrow.uturn.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnRightSquareFill = "arrow.uturn.right.square.fill"

        /// SF Symbols's name：arrow.uturn.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnUp = "arrow.uturn.up"

        /// SF Symbols's name：arrow.uturn.up.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnUpCircle = "arrow.uturn.up.circle"

        /// SF Symbols's name：arrow.uturn.up.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnUpCircleFill = "arrow.uturn.up.circle.fill"

        /// SF Symbols's name：arrow.uturn.up.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnUpSquare = "arrow.uturn.up.square"

        /// SF Symbols's name：arrow.uturn.up.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowUturnUpSquareFill = "arrow.uturn.up.square.fill"

        /// SF Symbols's name：arrowshape.turn.up.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpLeft = "arrowshape.turn.up.left"

        /// SF Symbols's name：arrowshape.turn.up.left.2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpLeft2 = "arrowshape.turn.up.left.2"

        /// SF Symbols's name：arrowshape.turn.up.left.2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpLeft2Fill = "arrowshape.turn.up.left.2.fill"

        /// SF Symbols's name：arrowshape.turn.up.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpLeftCircle = "arrowshape.turn.up.left.circle"

        /// SF Symbols's name：arrowshape.turn.up.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpLeftCircleFill = "arrowshape.turn.up.left.circle.fill"

        /// SF Symbols's name：arrowshape.turn.up.left.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpLeftFill = "arrowshape.turn.up.left.fill"

        /// SF Symbols's name：arrowshape.turn.up.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpRight = "arrowshape.turn.up.right"

        /// SF Symbols's name：arrowshape.turn.up.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpRightCircle = "arrowshape.turn.up.right.circle"

        /// SF Symbols's name：arrowshape.turn.up.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpRightCircleFill = "arrowshape.turn.up.right.circle.fill"

        /// SF Symbols's name：arrowshape.turn.up.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowshapeTurnUpRightFill = "arrowshape.turn.up.right.fill"

        /// SF Symbols's name：arrowtriangle.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleDown = "arrowtriangle.down"

        /// SF Symbols's name：arrowtriangle.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleDownCircle = "arrowtriangle.down.circle"

        /// SF Symbols's name：arrowtriangle.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleDownCircleFill = "arrowtriangle.down.circle.fill"

        /// SF Symbols's name：arrowtriangle.down.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleDownFill = "arrowtriangle.down.fill"

        /// SF Symbols's name：arrowtriangle.down.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleDownSquare = "arrowtriangle.down.square"

        /// SF Symbols's name：arrowtriangle.down.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleDownSquareFill = "arrowtriangle.down.square.fill"

        /// SF Symbols's name：arrowtriangle.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleLeft = "arrowtriangle.left"

        /// SF Symbols's name：arrowtriangle.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleLeftCircle = "arrowtriangle.left.circle"

        /// SF Symbols's name：arrowtriangle.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleLeftCircleFill = "arrowtriangle.left.circle.fill"

        /// SF Symbols's name：arrowtriangle.left.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleLeftFill = "arrowtriangle.left.fill"

        /// SF Symbols's name：arrowtriangle.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleLeftSquare = "arrowtriangle.left.square"

        /// SF Symbols's name：arrowtriangle.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleLeftSquareFill = "arrowtriangle.left.square.fill"

        /// SF Symbols's name：arrowtriangle.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleRight = "arrowtriangle.right"

        /// SF Symbols's name：arrowtriangle.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleRightCircle = "arrowtriangle.right.circle"

        /// SF Symbols's name：arrowtriangle.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleRightCircleFill = "arrowtriangle.right.circle.fill"

        /// SF Symbols's name：arrowtriangle.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleRightFill = "arrowtriangle.right.fill"

        /// SF Symbols's name：arrowtriangle.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleRightSquare = "arrowtriangle.right.square"

        /// SF Symbols's name：arrowtriangle.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleRightSquareFill = "arrowtriangle.right.square.fill"

        /// SF Symbols's name：arrowtriangle.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleUp = "arrowtriangle.up"

        /// SF Symbols's name：arrowtriangle.up.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleUpCircle = "arrowtriangle.up.circle"

        /// SF Symbols's name：arrowtriangle.up.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleUpCircleFill = "arrowtriangle.up.circle.fill"

        /// SF Symbols's name：arrowtriangle.up.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleUpFill = "arrowtriangle.up.fill"

        /// SF Symbols's name：arrowtriangle.up.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleUpSquare = "arrowtriangle.up.square"

        /// SF Symbols's name：arrowtriangle.up.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case arrowtriangleUpSquareFill = "arrowtriangle.up.square.fill"

        /// SF Symbols's name：asterisk.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case asteriskCircle = "asterisk.circle"

        /// SF Symbols's name：asterisk.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case asteriskCircleFill = "asterisk.circle.fill"

        /// SF Symbols's name：at
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case at = "at"

        /// SF Symbols's name：at.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case atBadgeMinus = "at.badge.minus"

        /// SF Symbols's name：at.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case atBadgePlus = "at.badge.plus"

        /// SF Symbols's name：australsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case australsignCircle = "australsign.circle"

        /// SF Symbols's name：australsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case australsignCircleFill = "australsign.circle.fill"

        /// SF Symbols's name：australsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case australsignSquare = "australsign.square"

        /// SF Symbols's name：australsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case australsignSquareFill = "australsign.square.fill"

        /// SF Symbols's name：b.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bCircle = "b.circle"

        /// SF Symbols's name：b.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bCircleFill = "b.circle.fill"

        /// SF Symbols's name：b.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bSquare = "b.square"

        /// SF Symbols's name：b.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bSquareFill = "b.square.fill"

        /// SF Symbols's name：backward
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case backward = "backward"

        /// SF Symbols's name：backward.end
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case backwardEnd = "backward.end"

        /// SF Symbols's name：backward.end.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case backwardEndAlt = "backward.end.alt"

        /// SF Symbols's name：backward.end.alt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case backwardEndAltFill = "backward.end.alt.fill"

        /// SF Symbols's name：backward.end.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case backwardEndFill = "backward.end.fill"

        /// SF Symbols's name：backward.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case backwardFill = "backward.fill"

        /// SF Symbols's name：badge.plus.radiowaves.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case badgePlusRadiowavesRight = "badge.plus.radiowaves.right"

        /// SF Symbols's name：bag
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bag = "bag"

        /// SF Symbols's name：bag.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bagBadgeMinus = "bag.badge.minus"

        /// SF Symbols's name：bag.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bagBadgePlus = "bag.badge.plus"

        /// SF Symbols's name：bag.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bagFill = "bag.fill"

        /// SF Symbols's name：bag.fill.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bagFillBadgeMinus = "bag.fill.badge.minus"

        /// SF Symbols's name：bag.fill.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bagFillBadgePlus = "bag.fill.badge.plus"

        /// SF Symbols's name：bahtsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bahtsignCircle = "bahtsign.circle"

        /// SF Symbols's name：bahtsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bahtsignCircleFill = "bahtsign.circle.fill"

        /// SF Symbols's name：bahtsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bahtsignSquare = "bahtsign.square"

        /// SF Symbols's name：bahtsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bahtsignSquareFill = "bahtsign.square.fill"

        /// SF Symbols's name：bandage
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bandage = "bandage"

        /// SF Symbols's name：bandage.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bandageFill = "bandage.fill"

        /// SF Symbols's name：barcode
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case barcode = "barcode"

        /// SF Symbols's name：barcode.viewfinder
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case barcodeViewfinder = "barcode.viewfinder"

        /// SF Symbols's name：battery.0
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case battery0 = "battery.0"

        /// SF Symbols's name：battery.100
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case battery100 = "battery.100"

        /// SF Symbols's name：battery.25
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case battery25 = "battery.25"

        /// SF Symbols's name：bed.double
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bedDouble = "bed.double"

        /// SF Symbols's name：bed.double.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bedDoubleFill = "bed.double.fill"

        /// SF Symbols's name：bell
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bell = "bell"

        /// SF Symbols's name：bell.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bellCircle = "bell.circle"

        /// SF Symbols's name：bell.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bellCircleFill = "bell.circle.fill"

        /// SF Symbols's name：bell.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bellFill = "bell.fill"

        /// SF Symbols's name：bell.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bellSlash = "bell.slash"

        /// SF Symbols's name：bell.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bellSlashFill = "bell.slash.fill"

        /// SF Symbols's name：bin.xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case binXmark = "bin.xmark"

        /// SF Symbols's name：bin.xmark.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case binXmarkFill = "bin.xmark.fill"

        /// SF Symbols's name：bitcoinsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bitcoinsignCircle = "bitcoinsign.circle"

        /// SF Symbols's name：bitcoinsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bitcoinsignCircleFill = "bitcoinsign.circle.fill"

        /// SF Symbols's name：bitcoinsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bitcoinsignSquare = "bitcoinsign.square"

        /// SF Symbols's name：bitcoinsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bitcoinsignSquareFill = "bitcoinsign.square.fill"

        /// SF Symbols's name：bold
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bold = "bold"

        /// SF Symbols's name：bold.italic.underline
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boldItalicUnderline = "bold.italic.underline"

        /// SF Symbols's name：bold.underline
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boldUnderline = "bold.underline"

        /// SF Symbols's name：bolt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bolt = "bolt"

        /// SF Symbols's name：bolt.badge.a
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltBadgeA = "bolt.badge.a"

        /// SF Symbols's name：bolt.badge.a.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltBadgeAFill = "bolt.badge.a.fill"

        /// SF Symbols's name：bolt.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltCircle = "bolt.circle"

        /// SF Symbols's name：bolt.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltCircleFill = "bolt.circle.fill"

        /// SF Symbols's name：bolt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltFill = "bolt.fill"

        /// SF Symbols's name：bolt.horizontal
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltHorizontal = "bolt.horizontal"

        /// SF Symbols's name：bolt.horizontal.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltHorizontalCircle = "bolt.horizontal.circle"

        /// SF Symbols's name：bolt.horizontal.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltHorizontalCircleFill = "bolt.horizontal.circle.fill"

        /// SF Symbols's name：bolt.horizontal.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltHorizontalFill = "bolt.horizontal.fill"

        /// SF Symbols's name：bolt.horizontal.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltHorizontalIcloud = "bolt.horizontal.icloud"

        /// SF Symbols's name：bolt.horizontal.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltHorizontalIcloudFill = "bolt.horizontal.icloud.fill"

        /// SF Symbols's name：bolt.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltSlash = "bolt.slash"

        /// SF Symbols's name：bolt.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case boltSlashFill = "bolt.slash.fill"

        /// SF Symbols's name：book
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case book = "book"

        /// SF Symbols's name：book.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bookCircle = "book.circle"

        /// SF Symbols's name：book.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bookCircleFill = "book.circle.fill"

        /// SF Symbols's name：book.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bookFill = "book.fill"

        /// SF Symbols's name：bookmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bookmark = "bookmark"

        /// SF Symbols's name：bookmark.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bookmarkFill = "bookmark.fill"

        /// SF Symbols's name：briefcase
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case briefcase = "briefcase"

        /// SF Symbols's name：briefcase.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case briefcaseFill = "briefcase.fill"

        /// SF Symbols's name：bubble.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleLeft = "bubble.left"

        /// SF Symbols's name：bubble.left.and.bubble.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleLeftAndBubbleRight = "bubble.left.and.bubble.right"

        /// SF Symbols's name：bubble.left.and.bubble.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleLeftAndBubbleRightFill = "bubble.left.and.bubble.right.fill"

        /// SF Symbols's name：bubble.left.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleLeftFill = "bubble.left.fill"

        /// SF Symbols's name：bubble.middle.bottom
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleMiddleBottom = "bubble.middle.bottom"

        /// SF Symbols's name：bubble.middle.bottom.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleMiddleBottomFill = "bubble.middle.bottom.fill"

        /// SF Symbols's name：bubble.middle.top
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleMiddleTop = "bubble.middle.top"

        /// SF Symbols's name：bubble.middle.top.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleMiddleTopFill = "bubble.middle.top.fill"

        /// SF Symbols's name：bubble.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleRight = "bubble.right"

        /// SF Symbols's name：bubble.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case bubbleRightFill = "bubble.right.fill"

        /// SF Symbols's name：burn
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case burn = "burn"

        /// SF Symbols's name：burst
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case burst = "burst"

        /// SF Symbols's name：burst.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case burstFill = "burst.fill"

        /// SF Symbols's name：c.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cCircle = "c.circle"

        /// SF Symbols's name：c.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cCircleFill = "c.circle.fill"

        /// SF Symbols's name：c.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cSquare = "c.square"

        /// SF Symbols's name：c.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cSquareFill = "c.square.fill"

        /// SF Symbols's name：calendar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case calendar = "calendar"

        /// SF Symbols's name：calendar.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case calendarBadgeMinus = "calendar.badge.minus"

        /// SF Symbols's name：calendar.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case calendarBadgePlus = "calendar.badge.plus"

        /// SF Symbols's name：calendar.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case calendarCircle = "calendar.circle"

        /// SF Symbols's name：calendar.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case calendarCircleFill = "calendar.circle.fill"

        /// SF Symbols's name：camera
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case camera = "camera"

        /// SF Symbols's name：camera.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraCircle = "camera.circle"

        /// SF Symbols's name：camera.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraCircleFill = "camera.circle.fill"

        /// SF Symbols's name：camera.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraFill = "camera.fill"

        /// SF Symbols's name：camera.on.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraOnRectangle = "camera.on.rectangle"

        /// SF Symbols's name：camera.on.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraOnRectangleFill = "camera.on.rectangle.fill"

        /// SF Symbols's name：camera.rotate
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraRotate = "camera.rotate"

        /// SF Symbols's name：camera.rotate.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraRotateFill = "camera.rotate.fill"

        /// SF Symbols's name：camera.viewfinder
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cameraViewfinder = "camera.viewfinder"

        /// SF Symbols's name：capslock
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case capslock = "capslock"

        /// SF Symbols's name：capslock.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case capslockFill = "capslock.fill"

        /// SF Symbols's name：capsule
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case capsule = "capsule"

        /// SF Symbols's name：capsule.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case capsuleFill = "capsule.fill"

        /// SF Symbols's name：captions.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case captionsBubble = "captions.bubble"

        /// SF Symbols's name：captions.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case captionsBubbleFill = "captions.bubble.fill"

        /// SF Symbols's name：car.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case carFill = "car.fill"

        /// SF Symbols's name：cart
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cart = "cart"

        /// SF Symbols's name：cart.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cartBadgeMinus = "cart.badge.minus"

        /// SF Symbols's name：cart.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cartBadgePlus = "cart.badge.plus"

        /// SF Symbols's name：cart.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cartFill = "cart.fill"

        /// SF Symbols's name：cart.fill.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cartFillBadgeMinus = "cart.fill.badge.minus"

        /// SF Symbols's name：cart.fill.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cartFillBadgePlus = "cart.fill.badge.plus"

        /// SF Symbols's name：cedisign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cedisignCircle = "cedisign.circle"

        /// SF Symbols's name：cedisign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cedisignCircleFill = "cedisign.circle.fill"

        /// SF Symbols's name：cedisign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cedisignSquare = "cedisign.square"

        /// SF Symbols's name：cedisign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cedisignSquareFill = "cedisign.square.fill"

        /// SF Symbols's name：centsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case centsignCircle = "centsign.circle"

        /// SF Symbols's name：centsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case centsignCircleFill = "centsign.circle.fill"

        /// SF Symbols's name：centsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case centsignSquare = "centsign.square"

        /// SF Symbols's name：centsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case centsignSquareFill = "centsign.square.fill"

        /// SF Symbols's name：chart.bar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chartBar = "chart.bar"

        /// SF Symbols's name：chart.bar.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chartBarFill = "chart.bar.fill"

        /// SF Symbols's name：chart.pie
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chartPie = "chart.pie"

        /// SF Symbols's name：chart.pie.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chartPieFill = "chart.pie.fill"

        /// SF Symbols's name：checkmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmark = "checkmark"

        /// SF Symbols's name：checkmark.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkCircle = "checkmark.circle"

        /// SF Symbols's name：checkmark.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkCircleFill = "checkmark.circle.fill"

        /// SF Symbols's name：checkmark.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkRectangle = "checkmark.rectangle"

        /// SF Symbols's name：checkmark.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkRectangleFill = "checkmark.rectangle.fill"

        /// SF Symbols's name：checkmark.seal
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkSeal = "checkmark.seal"

        /// SF Symbols's name：checkmark.seal.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkSealFill = "checkmark.seal.fill"

        /// SF Symbols's name：checkmark.shield
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkShield = "checkmark.shield"

        /// SF Symbols's name：checkmark.shield.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkShieldFill = "checkmark.shield.fill"

        /// SF Symbols's name：checkmark.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkSquare = "checkmark.square"

        /// SF Symbols's name：checkmark.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case checkmarkSquareFill = "checkmark.square.fill"

        /// SF Symbols's name：chevron.compact.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronCompactDown = "chevron.compact.down"

        /// SF Symbols's name：chevron.compact.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronCompactLeft = "chevron.compact.left"

        /// SF Symbols's name：chevron.compact.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronCompactRight = "chevron.compact.right"

        /// SF Symbols's name：chevron.compact.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronCompactUp = "chevron.compact.up"

        /// SF Symbols's name：chevron.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronDown = "chevron.down"

        /// SF Symbols's name：chevron.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronDownCircle = "chevron.down.circle"

        /// SF Symbols's name：chevron.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronDownCircleFill = "chevron.down.circle.fill"

        /// SF Symbols's name：chevron.down.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronDownSquare = "chevron.down.square"

        /// SF Symbols's name：chevron.down.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronDownSquareFill = "chevron.down.square.fill"

        /// SF Symbols's name：chevron.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeft = "chevron.left"

        /// SF Symbols's name：chevron.left.2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeft2 = "chevron.left.2"

        /// SF Symbols's name：chevron.left.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeftCircle = "chevron.left.circle"

        /// SF Symbols's name：chevron.left.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeftCircleFill = "chevron.left.circle.fill"

        /// SF Symbols's name：chevron.left.slash.chevron.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeftSlashChevronRight = "chevron.left.slash.chevron.right"

        /// SF Symbols's name：chevron.left.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeftSquare = "chevron.left.square"

        /// SF Symbols's name：chevron.left.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronLeftSquareFill = "chevron.left.square.fill"

        /// SF Symbols's name：chevron.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronRight = "chevron.right"

        /// SF Symbols's name：chevron.right.2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronRight2 = "chevron.right.2"

        /// SF Symbols's name：chevron.right.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronRightCircle = "chevron.right.circle"

        /// SF Symbols's name：chevron.right.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronRightCircleFill = "chevron.right.circle.fill"

        /// SF Symbols's name：chevron.right.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronRightSquare = "chevron.right.square"

        /// SF Symbols's name：chevron.right.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronRightSquareFill = "chevron.right.square.fill"

        /// SF Symbols's name：chevron.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronUp = "chevron.up"

        /// SF Symbols's name：chevron.up.chevron.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronUpChevronDown = "chevron.up.chevron.down"

        /// SF Symbols's name：chevron.up.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronUpCircle = "chevron.up.circle"

        /// SF Symbols's name：chevron.up.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronUpCircleFill = "chevron.up.circle.fill"

        /// SF Symbols's name：chevron.up.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronUpSquare = "chevron.up.square"

        /// SF Symbols's name：chevron.up.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case chevronUpSquareFill = "chevron.up.square.fill"

        /// SF Symbols's name：circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circle = "circle"

        /// SF Symbols's name：circle.bottomthird.split
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleBottomthirdSplit = "circle.bottomthird.split"

        /// SF Symbols's name：circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleFill = "circle.fill"

        /// SF Symbols's name：circle.grid.3x3
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleGrid3x3 = "circle.grid.3x3"

        /// SF Symbols's name：circle.grid.3x3.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleGrid3x3Fill = "circle.grid.3x3.fill"

        /// SF Symbols's name：circle.grid.hex
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleGridHex = "circle.grid.hex"

        /// SF Symbols's name：circle.grid.hex.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleGridHexFill = "circle.grid.hex.fill"

        /// SF Symbols's name：circle.lefthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleLefthalfFill = "circle.lefthalf.fill"

        /// SF Symbols's name：circle.righthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case circleRighthalfFill = "circle.righthalf.fill"

        /// SF Symbols's name：clear
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case clear = "clear"

        /// SF Symbols's name：clear.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case clearFill = "clear.fill"

        /// SF Symbols's name：clock
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case clock = "clock"

        /// SF Symbols's name：clock.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case clockFill = "clock.fill"

        /// SF Symbols's name：cloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloud = "cloud"

        /// SF Symbols's name：cloud.bolt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudBolt = "cloud.bolt"

        /// SF Symbols's name：cloud.bolt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudBoltFill = "cloud.bolt.fill"

        /// SF Symbols's name：cloud.bolt.rain
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudBoltRain = "cloud.bolt.rain"

        /// SF Symbols's name：cloud.bolt.rain.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudBoltRainFill = "cloud.bolt.rain.fill"

        /// SF Symbols's name：cloud.drizzle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudDrizzle = "cloud.drizzle"

        /// SF Symbols's name：cloud.drizzle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudDrizzleFill = "cloud.drizzle.fill"

        /// SF Symbols's name：cloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudFill = "cloud.fill"

        /// SF Symbols's name：cloud.fog
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudFog = "cloud.fog"

        /// SF Symbols's name：cloud.fog.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudFogFill = "cloud.fog.fill"

        /// SF Symbols's name：cloud.hail
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudHail = "cloud.hail"

        /// SF Symbols's name：cloud.hail.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudHailFill = "cloud.hail.fill"

        /// SF Symbols's name：cloud.heavyrain
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudHeavyrain = "cloud.heavyrain"

        /// SF Symbols's name：cloud.heavyrain.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudHeavyrainFill = "cloud.heavyrain.fill"

        /// SF Symbols's name：cloud.moon
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudMoon = "cloud.moon"

        /// SF Symbols's name：cloud.moon.bolt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudMoonBolt = "cloud.moon.bolt"

        /// SF Symbols's name：cloud.moon.bolt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudMoonBoltFill = "cloud.moon.bolt.fill"

        /// SF Symbols's name：cloud.moon.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudMoonFill = "cloud.moon.fill"

        /// SF Symbols's name：cloud.moon.rain
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudMoonRain = "cloud.moon.rain"

        /// SF Symbols's name：cloud.moon.rain.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudMoonRainFill = "cloud.moon.rain.fill"

        /// SF Symbols's name：cloud.rain
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudRain = "cloud.rain"

        /// SF Symbols's name：cloud.rain.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudRainFill = "cloud.rain.fill"

        /// SF Symbols's name：cloud.sleet
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSleet = "cloud.sleet"

        /// SF Symbols's name：cloud.sleet.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSleetFill = "cloud.sleet.fill"

        /// SF Symbols's name：cloud.snow
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSnow = "cloud.snow"

        /// SF Symbols's name：cloud.snow.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSnowFill = "cloud.snow.fill"

        /// SF Symbols's name：cloud.sun
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSun = "cloud.sun"

        /// SF Symbols's name：cloud.sun.bolt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSunBolt = "cloud.sun.bolt"

        /// SF Symbols's name：cloud.sun.bolt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSunBoltFill = "cloud.sun.bolt.fill"

        /// SF Symbols's name：cloud.sun.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSunFill = "cloud.sun.fill"

        /// SF Symbols's name：cloud.sun.rain
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSunRain = "cloud.sun.rain"

        /// SF Symbols's name：cloud.sun.rain.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cloudSunRainFill = "cloud.sun.rain.fill"

        /// SF Symbols's name：coloncurrencysign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case coloncurrencysignCircle = "coloncurrencysign.circle"

        /// SF Symbols's name：coloncurrencysign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case coloncurrencysignCircleFill = "coloncurrencysign.circle.fill"

        /// SF Symbols's name：coloncurrencysign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case coloncurrencysignSquare = "coloncurrencysign.square"

        /// SF Symbols's name：coloncurrencysign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case coloncurrencysignSquareFill = "coloncurrencysign.square.fill"

        /// SF Symbols's name：command
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case command = "command"

        /// SF Symbols's name：control
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case control = "control"

        /// SF Symbols's name：creditcard
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case creditcard = "creditcard"

        /// SF Symbols's name：creditcard.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case creditcardFill = "creditcard.fill"

        /// SF Symbols's name：crop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case crop = "crop"

        /// SF Symbols's name：crop.rotate
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cropRotate = "crop.rotate"

        /// SF Symbols's name：cruzeirosign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cruzeirosignCircle = "cruzeirosign.circle"

        /// SF Symbols's name：cruzeirosign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cruzeirosignCircleFill = "cruzeirosign.circle.fill"

        /// SF Symbols's name：cruzeirosign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cruzeirosignSquare = "cruzeirosign.square"

        /// SF Symbols's name：cruzeirosign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cruzeirosignSquareFill = "cruzeirosign.square.fill"

        /// SF Symbols's name：cube
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cube = "cube"

        /// SF Symbols's name：cube.box
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cubeBox = "cube.box"

        /// SF Symbols's name：cube.box.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cubeBoxFill = "cube.box.fill"

        /// SF Symbols's name：cube.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cubeFill = "cube.fill"

        /// SF Symbols's name：cursor.rays
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case cursorRays = "cursor.rays"

        /// SF Symbols's name：d.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dCircle = "d.circle"

        /// SF Symbols's name：d.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dCircleFill = "d.circle.fill"

        /// SF Symbols's name：d.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dSquare = "d.square"

        /// SF Symbols's name：d.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dSquareFill = "d.square.fill"

        /// SF Symbols's name：decrease.indent
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case decreaseIndent = "decrease.indent"

        /// SF Symbols's name：decrease.quotelevel
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case decreaseQuotelevel = "decrease.quotelevel"

        /// SF Symbols's name：delete.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case deleteLeft = "delete.left"

        /// SF Symbols's name：delete.left.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case deleteLeftFill = "delete.left.fill"

        /// SF Symbols's name：delete.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case deleteRight = "delete.right"

        /// SF Symbols's name：delete.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case deleteRightFill = "delete.right.fill"

        /// SF Symbols's name：desktopcomputer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case desktopcomputer = "desktopcomputer"

        /// SF Symbols's name：dial
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dial = "dial"

        /// SF Symbols's name：dial.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dialFill = "dial.fill"

        /// SF Symbols's name：divide
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case divide = "divide"

        /// SF Symbols's name：divide.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case divideCircle = "divide.circle"

        /// SF Symbols's name：divide.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case divideCircleFill = "divide.circle.fill"

        /// SF Symbols's name：divide.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case divideSquare = "divide.square"

        /// SF Symbols's name：divide.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case divideSquareFill = "divide.square.fill"

        /// SF Symbols's name：doc
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case doc = "doc"

        /// SF Symbols's name：doc.append
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docAppend = "doc.append"

        /// SF Symbols's name：doc.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docCircle = "doc.circle"

        /// SF Symbols's name：doc.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docCircleFill = "doc.circle.fill"

        /// SF Symbols's name：doc.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docFill = "doc.fill"

        /// SF Symbols's name：doc.on.clipboard
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docOnClipboard = "doc.on.clipboard"

        /// SF Symbols's name：doc.on.clipboard.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docOnClipboardFill = "doc.on.clipboard.fill"

        /// SF Symbols's name：doc.on.doc
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docOnDoc = "doc.on.doc"

        /// SF Symbols's name：doc.on.doc.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docOnDocFill = "doc.on.doc.fill"

        /// SF Symbols's name：doc.plaintext
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docPlaintext = "doc.plaintext"

        /// SF Symbols's name：doc.richtext
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docRichtext = "doc.richtext"

        /// SF Symbols's name：doc.text
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docText = "doc.text"

        /// SF Symbols's name：doc.text.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docTextFill = "doc.text.fill"

        /// SF Symbols's name：doc.text.magnifyingglass
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docTextMagnifyingglass = "doc.text.magnifyingglass"

        /// SF Symbols's name：doc.text.viewfinder
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case docTextViewfinder = "doc.text.viewfinder"

        /// SF Symbols's name：dollarsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dollarsignCircle = "dollarsign.circle"

        /// SF Symbols's name：dollarsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dollarsignCircleFill = "dollarsign.circle.fill"

        /// SF Symbols's name：dollarsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dollarsignSquare = "dollarsign.square"

        /// SF Symbols's name：dollarsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dollarsignSquareFill = "dollarsign.square.fill"

        /// SF Symbols's name：dongsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dongsignCircle = "dongsign.circle"

        /// SF Symbols's name：dongsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dongsignCircleFill = "dongsign.circle.fill"

        /// SF Symbols's name：dongsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dongsignSquare = "dongsign.square"

        /// SF Symbols's name：dongsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dongsignSquareFill = "dongsign.square.fill"

        /// SF Symbols's name：dot.radiowaves.left.and.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dotRadiowavesLeftAndRight = "dot.radiowaves.left.and.right"

        /// SF Symbols's name：dot.radiowaves.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dotRadiowavesRight = "dot.radiowaves.right"

        /// SF Symbols's name：dot.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dotSquare = "dot.square"

        /// SF Symbols's name：dot.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dotSquareFill = "dot.square.fill"

        /// SF Symbols's name：drop.triangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dropTriangle = "drop.triangle"

        /// SF Symbols's name：drop.triangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case dropTriangleFill = "drop.triangle.fill"

        /// SF Symbols's name：e.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eCircle = "e.circle"

        /// SF Symbols's name：e.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eCircleFill = "e.circle.fill"

        /// SF Symbols's name：e.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eSquare = "e.square"

        /// SF Symbols's name：e.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eSquareFill = "e.square.fill"

        /// SF Symbols's name：ear
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ear = "ear"

        /// SF Symbols's name：eject
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eject = "eject"

        /// SF Symbols's name：eject.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ejectFill = "eject.fill"

        /// SF Symbols's name：ellipses.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ellipsesBubble = "ellipses.bubble"

        /// SF Symbols's name：ellipses.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ellipsesBubbleFill = "ellipses.bubble.fill"

        /// SF Symbols's name：ellipsis
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ellipsis = "ellipsis"

        /// SF Symbols's name：ellipsis.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ellipsisCircle = "ellipsis.circle"

        /// SF Symbols's name：ellipsis.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ellipsisCircleFill = "ellipsis.circle.fill"

        /// SF Symbols's name：envelope
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelope = "envelope"

        /// SF Symbols's name：envelope.badge
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeBadge = "envelope.badge"

        /// SF Symbols's name：envelope.badge.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeBadgeFill = "envelope.badge.fill"

        /// SF Symbols's name：envelope.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeCircle = "envelope.circle"

        /// SF Symbols's name：envelope.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeCircleFill = "envelope.circle.fill"

        /// SF Symbols's name：envelope.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeFill = "envelope.fill"

        /// SF Symbols's name：envelope.open
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeOpen = "envelope.open"

        /// SF Symbols's name：envelope.open.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case envelopeOpenFill = "envelope.open.fill"

        /// SF Symbols's name：equal
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case equal = "equal"

        /// SF Symbols's name：equal.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case equalCircle = "equal.circle"

        /// SF Symbols's name：equal.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case equalCircleFill = "equal.circle.fill"

        /// SF Symbols's name：equal.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case equalSquare = "equal.square"

        /// SF Symbols's name：equal.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case equalSquareFill = "equal.square.fill"

        /// SF Symbols's name：escape
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case escape = "escape"

        /// SF Symbols's name：eurosign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eurosignCircle = "eurosign.circle"

        /// SF Symbols's name：eurosign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eurosignCircleFill = "eurosign.circle.fill"

        /// SF Symbols's name：eurosign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eurosignSquare = "eurosign.square"

        /// SF Symbols's name：eurosign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eurosignSquareFill = "eurosign.square.fill"

        /// SF Symbols's name：exclamationmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmark = "exclamationmark"

        /// SF Symbols's name：exclamationmark.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkBubble = "exclamationmark.bubble"

        /// SF Symbols's name：exclamationmark.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkBubbleFill = "exclamationmark.bubble.fill"

        /// SF Symbols's name：exclamationmark.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkCircle = "exclamationmark.circle"

        /// SF Symbols's name：exclamationmark.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkCircleFill = "exclamationmark.circle.fill"

        /// SF Symbols's name：exclamationmark.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkIcloud = "exclamationmark.icloud"

        /// SF Symbols's name：exclamationmark.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkIcloudFill = "exclamationmark.icloud.fill"

        /// SF Symbols's name：exclamationmark.octagon
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkOctagon = "exclamationmark.octagon"

        /// SF Symbols's name：exclamationmark.octagon.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkOctagonFill = "exclamationmark.octagon.fill"

        /// SF Symbols's name：exclamationmark.shield
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkShield = "exclamationmark.shield"

        /// SF Symbols's name：exclamationmark.shield.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkShieldFill = "exclamationmark.shield.fill"

        /// SF Symbols's name：exclamationmark.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkSquare = "exclamationmark.square"

        /// SF Symbols's name：exclamationmark.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkSquareFill = "exclamationmark.square.fill"

        /// SF Symbols's name：exclamationmark.triangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkTriangle = "exclamationmark.triangle"

        /// SF Symbols's name：exclamationmark.triangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case exclamationmarkTriangleFill = "exclamationmark.triangle.fill"

        /// SF Symbols's name：eye
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eye = "eye"

        /// SF Symbols's name：eye.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyeFill = "eye.fill"

        /// SF Symbols's name：eye.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyeSlash = "eye.slash"

        /// SF Symbols's name：eye.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyeSlashFill = "eye.slash.fill"

        /// SF Symbols's name：eyedropper
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyedropper = "eyedropper"

        /// SF Symbols's name：eyedropper.full
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyedropperFull = "eyedropper.full"

        /// SF Symbols's name：eyedropper.halffull
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyedropperHalffull = "eyedropper.halffull"

        /// SF Symbols's name：eyeglasses
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case eyeglasses = "eyeglasses"

        /// SF Symbols's name：f.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fCircle = "f.circle"

        /// SF Symbols's name：f.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fCircleFill = "f.circle.fill"

        /// SF Symbols's name：f.cursive
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fCursive = "f.cursive"

        /// SF Symbols's name：f.cursive.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fCursiveCircle = "f.cursive.circle"

        /// SF Symbols's name：f.cursive.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fCursiveCircleFill = "f.cursive.circle.fill"

        /// SF Symbols's name：f.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fSquare = "f.square"

        /// SF Symbols's name：f.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fSquareFill = "f.square.fill"

        /// SF Symbols's name：faceid
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case faceid = "faceid"

        /// SF Symbols's name：film
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case film = "film"

        /// SF Symbols's name：film.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case filmFill = "film.fill"

        /// SF Symbols's name：flag
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flag = "flag"

        /// SF Symbols's name：flag.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flagCircle = "flag.circle"

        /// SF Symbols's name：flag.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flagCircleFill = "flag.circle.fill"

        /// SF Symbols's name：flag.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flagFill = "flag.fill"

        /// SF Symbols's name：flag.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flagSlash = "flag.slash"

        /// SF Symbols's name：flag.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flagSlashFill = "flag.slash.fill"

        /// SF Symbols's name：flame
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flame = "flame"

        /// SF Symbols's name：flame.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flameFill = "flame.fill"

        /// SF Symbols's name：florinsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case florinsignCircle = "florinsign.circle"

        /// SF Symbols's name：florinsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case florinsignCircleFill = "florinsign.circle.fill"

        /// SF Symbols's name：florinsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case florinsignSquare = "florinsign.square"

        /// SF Symbols's name：florinsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case florinsignSquareFill = "florinsign.square.fill"

        /// SF Symbols's name：flowchart
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flowchart = "flowchart"

        /// SF Symbols's name：flowchart.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case flowchartFill = "flowchart.fill"

        /// SF Symbols's name：folder
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folder = "folder"

        /// SF Symbols's name：folder.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderBadgeMinus = "folder.badge.minus"

        /// SF Symbols's name：folder.badge.person.crop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderBadgePersonCrop = "folder.badge.person.crop"

        /// SF Symbols's name：folder.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderBadgePlus = "folder.badge.plus"

        /// SF Symbols's name：folder.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderCircle = "folder.circle"

        /// SF Symbols's name：folder.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderCircleFill = "folder.circle.fill"

        /// SF Symbols's name：folder.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderFill = "folder.fill"

        /// SF Symbols's name：folder.fill.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderFillBadgeMinus = "folder.fill.badge.minus"

        /// SF Symbols's name：folder.fill.badge.person.crop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderFillBadgePersonCrop = "folder.fill.badge.person.crop"

        /// SF Symbols's name：folder.fill.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case folderFillBadgePlus = "folder.fill.badge.plus"

        /// SF Symbols's name：forward
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case forward = "forward"

        /// SF Symbols's name：forward.end
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case forwardEnd = "forward.end"

        /// SF Symbols's name：forward.end.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case forwardEndAlt = "forward.end.alt"

        /// SF Symbols's name：forward.end.alt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case forwardEndAltFill = "forward.end.alt.fill"

        /// SF Symbols's name：forward.end.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case forwardEndFill = "forward.end.fill"

        /// SF Symbols's name：forward.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case forwardFill = "forward.fill"

        /// SF Symbols's name：francsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case francsignCircle = "francsign.circle"

        /// SF Symbols's name：francsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case francsignCircleFill = "francsign.circle.fill"

        /// SF Symbols's name：francsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case francsignSquare = "francsign.square"

        /// SF Symbols's name：francsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case francsignSquareFill = "francsign.square.fill"

        /// SF Symbols's name：function
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case function = "function"

        /// SF Symbols's name：fx
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case fx = "fx"

        /// SF Symbols's name：g.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gCircle = "g.circle"

        /// SF Symbols's name：g.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gCircleFill = "g.circle.fill"

        /// SF Symbols's name：g.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gSquare = "g.square"

        /// SF Symbols's name：g.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gSquareFill = "g.square.fill"

        /// SF Symbols's name：gamecontroller
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gamecontroller = "gamecontroller"

        /// SF Symbols's name：gamecontroller.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gamecontrollerFill = "gamecontroller.fill"

        /// SF Symbols's name：gauge
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gauge = "gauge"

        /// SF Symbols's name：gauge.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gaugeBadgeMinus = "gauge.badge.minus"

        /// SF Symbols's name：gauge.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gaugeBadgePlus = "gauge.badge.plus"

        /// SF Symbols's name：gear
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gear = "gear"

        /// SF Symbols's name：gift
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gift = "gift"

        /// SF Symbols's name：gift.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case giftFill = "gift.fill"

        /// SF Symbols's name：globe
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case globe = "globe"

        /// SF Symbols's name：gobackward
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward = "gobackward"

        /// SF Symbols's name：gobackward.10
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward10 = "gobackward.10"

        /// SF Symbols's name：gobackward.10.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward10Ar = "gobackward.10.ar"

        /// SF Symbols's name：gobackward.10.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward10Hi = "gobackward.10.hi"

        /// SF Symbols's name：gobackward.15
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward15 = "gobackward.15"

        /// SF Symbols's name：gobackward.15.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward15Ar = "gobackward.15.ar"

        /// SF Symbols's name：gobackward.15.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward15Hi = "gobackward.15.hi"

        /// SF Symbols's name：gobackward.30
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward30 = "gobackward.30"

        /// SF Symbols's name：gobackward.30.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward30Ar = "gobackward.30.ar"

        /// SF Symbols's name：gobackward.30.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward30Hi = "gobackward.30.hi"

        /// SF Symbols's name：gobackward.45
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward45 = "gobackward.45"

        /// SF Symbols's name：gobackward.45.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward45Ar = "gobackward.45.ar"

        /// SF Symbols's name：gobackward.45.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward45Hi = "gobackward.45.hi"

        /// SF Symbols's name：gobackward.60
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward60 = "gobackward.60"

        /// SF Symbols's name：gobackward.60.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward60Ar = "gobackward.60.ar"

        /// SF Symbols's name：gobackward.60.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward60Hi = "gobackward.60.hi"

        /// SF Symbols's name：gobackward.75
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward75 = "gobackward.75"

        /// SF Symbols's name：gobackward.75.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward75Ar = "gobackward.75.ar"

        /// SF Symbols's name：gobackward.75.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward75Hi = "gobackward.75.hi"

        /// SF Symbols's name：gobackward.90
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward90 = "gobackward.90"

        /// SF Symbols's name：gobackward.90.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward90Ar = "gobackward.90.ar"

        /// SF Symbols's name：gobackward.90.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackward90Hi = "gobackward.90.hi"

        /// SF Symbols's name：gobackward.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gobackwardMinus = "gobackward.minus"

        /// SF Symbols's name：goforward
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward = "goforward"

        /// SF Symbols's name：goforward.10
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward10 = "goforward.10"

        /// SF Symbols's name：goforward.10.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward10Ar = "goforward.10.ar"

        /// SF Symbols's name：goforward.10.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward10Hi = "goforward.10.hi"

        /// SF Symbols's name：goforward.15
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward15 = "goforward.15"

        /// SF Symbols's name：goforward.15.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward15Ar = "goforward.15.ar"

        /// SF Symbols's name：goforward.15.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward15Hi = "goforward.15.hi"

        /// SF Symbols's name：goforward.30
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward30 = "goforward.30"

        /// SF Symbols's name：goforward.30.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward30Ar = "goforward.30.ar"

        /// SF Symbols's name：goforward.30.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward30Hi = "goforward.30.hi"

        /// SF Symbols's name：goforward.45
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward45 = "goforward.45"

        /// SF Symbols's name：goforward.45.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward45Ar = "goforward.45.ar"

        /// SF Symbols's name：goforward.45.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward45Hi = "goforward.45.hi"

        /// SF Symbols's name：goforward.60
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward60 = "goforward.60"

        /// SF Symbols's name：goforward.60.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward60Ar = "goforward.60.ar"

        /// SF Symbols's name：goforward.60.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward60Hi = "goforward.60.hi"

        /// SF Symbols's name：goforward.75
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward75 = "goforward.75"

        /// SF Symbols's name：goforward.75.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward75Ar = "goforward.75.ar"

        /// SF Symbols's name：goforward.75.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward75Hi = "goforward.75.hi"

        /// SF Symbols's name：goforward.90
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward90 = "goforward.90"

        /// SF Symbols's name：goforward.90.ar
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward90Ar = "goforward.90.ar"

        /// SF Symbols's name：goforward.90.hi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforward90Hi = "goforward.90.hi"

        /// SF Symbols's name：goforward.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case goforwardPlus = "goforward.plus"

        /// SF Symbols's name：greaterthan
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case greaterthan = "greaterthan"

        /// SF Symbols's name：greaterthan.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case greaterthanCircle = "greaterthan.circle"

        /// SF Symbols's name：greaterthan.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case greaterthanCircleFill = "greaterthan.circle.fill"

        /// SF Symbols's name：greaterthan.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case greaterthanSquare = "greaterthan.square"

        /// SF Symbols's name：greaterthan.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case greaterthanSquareFill = "greaterthan.square.fill"

        /// SF Symbols's name：grid
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case grid = "grid"

        /// SF Symbols's name：grid.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gridCircle = "grid.circle"

        /// SF Symbols's name：grid.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case gridCircleFill = "grid.circle.fill"

        /// SF Symbols's name：guaranisign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case guaranisignCircle = "guaranisign.circle"

        /// SF Symbols's name：guaranisign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case guaranisignCircleFill = "guaranisign.circle.fill"

        /// SF Symbols's name：guaranisign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case guaranisignSquare = "guaranisign.square"

        /// SF Symbols's name：guaranisign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case guaranisignSquareFill = "guaranisign.square.fill"

        /// SF Symbols's name：guitars
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case guitars = "guitars"

        /// SF Symbols's name：h.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hCircle = "h.circle"

        /// SF Symbols's name：h.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hCircleFill = "h.circle.fill"

        /// SF Symbols's name：h.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hSquare = "h.square"

        /// SF Symbols's name：h.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hSquareFill = "h.square.fill"

        /// SF Symbols's name：hammer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hammer = "hammer"

        /// SF Symbols's name：hammer.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hammerFill = "hammer.fill"

        /// SF Symbols's name：hand.draw
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handDraw = "hand.draw"

        /// SF Symbols's name：hand.draw.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handDrawFill = "hand.draw.fill"

        /// SF Symbols's name：hand.point.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handPointLeft = "hand.point.left"

        /// SF Symbols's name：hand.point.left.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handPointLeftFill = "hand.point.left.fill"

        /// SF Symbols's name：hand.point.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handPointRight = "hand.point.right"

        /// SF Symbols's name：hand.point.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handPointRightFill = "hand.point.right.fill"

        /// SF Symbols's name：hand.raised
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handRaised = "hand.raised"

        /// SF Symbols's name：hand.raised.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handRaisedFill = "hand.raised.fill"

        /// SF Symbols's name：hand.raised.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handRaisedSlash = "hand.raised.slash"

        /// SF Symbols's name：hand.raised.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handRaisedSlashFill = "hand.raised.slash.fill"

        /// SF Symbols's name：hand.thumbsdown
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handThumbsdown = "hand.thumbsdown"

        /// SF Symbols's name：hand.thumbsdown.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handThumbsdownFill = "hand.thumbsdown.fill"

        /// SF Symbols's name：hand.thumbsup
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handThumbsup = "hand.thumbsup"

        /// SF Symbols's name：hand.thumbsup.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case handThumbsupFill = "hand.thumbsup.fill"

        /// SF Symbols's name：hare
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hare = "hare"

        /// SF Symbols's name：hare.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hareFill = "hare.fill"

        /// SF Symbols's name：headphones
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case headphones = "headphones"

        /// SF Symbols's name：heart
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heart = "heart"

        /// SF Symbols's name：heart.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartCircle = "heart.circle"

        /// SF Symbols's name：heart.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartCircleFill = "heart.circle.fill"

        /// SF Symbols's name：heart.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartFill = "heart.fill"

        /// SF Symbols's name：heart.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartSlash = "heart.slash"

        /// SF Symbols's name：heart.slash.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartSlashCircle = "heart.slash.circle"

        /// SF Symbols's name：heart.slash.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartSlashCircleFill = "heart.slash.circle.fill"

        /// SF Symbols's name：heart.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case heartSlashFill = "heart.slash.fill"

        /// SF Symbols's name：helm
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case helm = "helm"

        /// SF Symbols's name：hexagon
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hexagon = "hexagon"

        /// SF Symbols's name：hexagon.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hexagonFill = "hexagon.fill"

        /// SF Symbols's name：hifispeaker
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hifispeaker = "hifispeaker"

        /// SF Symbols's name：hifispeaker.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hifispeakerFill = "hifispeaker.fill"

        /// SF Symbols's name：hourglass
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hourglass = "hourglass"

        /// SF Symbols's name：hourglass.bottomhalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hourglassBottomhalfFill = "hourglass.bottomhalf.fill"

        /// SF Symbols's name：hourglass.tophalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hourglassTophalfFill = "hourglass.tophalf.fill"

        /// SF Symbols's name：house
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case house = "house"

        /// SF Symbols's name：house.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case houseFill = "house.fill"

        /// SF Symbols's name：hryvniasign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hryvniasignCircle = "hryvniasign.circle"

        /// SF Symbols's name：hryvniasign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hryvniasignCircleFill = "hryvniasign.circle.fill"

        /// SF Symbols's name：hryvniasign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hryvniasignSquare = "hryvniasign.square"

        /// SF Symbols's name：hryvniasign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hryvniasignSquareFill = "hryvniasign.square.fill"

        /// SF Symbols's name：hurricane
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case hurricane = "hurricane"

        /// SF Symbols's name：i.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case iCircle = "i.circle"

        /// SF Symbols's name：i.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case iCircleFill = "i.circle.fill"

        /// SF Symbols's name：i.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case iSquare = "i.square"

        /// SF Symbols's name：i.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case iSquareFill = "i.square.fill"

        /// SF Symbols's name：icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloud = "icloud"

        /// SF Symbols's name：icloud.and.arrow.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudAndArrowDown = "icloud.and.arrow.down"

        /// SF Symbols's name：icloud.and.arrow.down.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudAndArrowDownFill = "icloud.and.arrow.down.fill"

        /// SF Symbols's name：icloud.and.arrow.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudAndArrowUp = "icloud.and.arrow.up"

        /// SF Symbols's name：icloud.and.arrow.up.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudAndArrowUpFill = "icloud.and.arrow.up.fill"

        /// SF Symbols's name：icloud.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudCircle = "icloud.circle"

        /// SF Symbols's name：icloud.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudCircleFill = "icloud.circle.fill"

        /// SF Symbols's name：icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudFill = "icloud.fill"

        /// SF Symbols's name：icloud.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudSlash = "icloud.slash"

        /// SF Symbols's name：icloud.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case icloudSlashFill = "icloud.slash.fill"

        /// SF Symbols's name：increase.indent
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case increaseIndent = "increase.indent"

        /// SF Symbols's name：increase.quotelevel
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case increaseQuotelevel = "increase.quotelevel"

        /// SF Symbols's name：indianrupeesign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case indianrupeesignCircle = "indianrupeesign.circle"

        /// SF Symbols's name：indianrupeesign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case indianrupeesignCircleFill = "indianrupeesign.circle.fill"

        /// SF Symbols's name：indianrupeesign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case indianrupeesignSquare = "indianrupeesign.square"

        /// SF Symbols's name：indianrupeesign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case indianrupeesignSquareFill = "indianrupeesign.square.fill"

        /// SF Symbols's name：info
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case info = "info"

        /// SF Symbols's name：info.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case infoCircle = "info.circle"

        /// SF Symbols's name：info.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case infoCircleFill = "info.circle.fill"

        /// SF Symbols's name：italic
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case italic = "italic"

        /// SF Symbols's name：j.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case jCircle = "j.circle"

        /// SF Symbols's name：j.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case jCircleFill = "j.circle.fill"

        /// SF Symbols's name：j.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case jSquare = "j.square"

        /// SF Symbols's name：j.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case jSquareFill = "j.square.fill"

        /// SF Symbols's name：k.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kCircle = "k.circle"

        /// SF Symbols's name：k.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kCircleFill = "k.circle.fill"

        /// SF Symbols's name：k.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kSquare = "k.square"

        /// SF Symbols's name：k.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kSquareFill = "k.square.fill"

        /// SF Symbols's name：keyboard
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case keyboard = "keyboard"

        /// SF Symbols's name：keyboard.chevron.compact.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case keyboardChevronCompactDown = "keyboard.chevron.compact.down"

        /// SF Symbols's name：kipsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kipsignCircle = "kipsign.circle"

        /// SF Symbols's name：kipsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kipsignCircleFill = "kipsign.circle.fill"

        /// SF Symbols's name：kipsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kipsignSquare = "kipsign.square"

        /// SF Symbols's name：kipsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case kipsignSquareFill = "kipsign.square.fill"

        /// SF Symbols's name：l.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lCircle = "l.circle"

        /// SF Symbols's name：l.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lCircleFill = "l.circle.fill"

        /// SF Symbols's name：l.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lSquare = "l.square"

        /// SF Symbols's name：l.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lSquareFill = "l.square.fill"

        /// SF Symbols's name：largecircle.fill.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case largecircleFillCircle = "largecircle.fill.circle"

        /// SF Symbols's name：larisign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case larisignCircle = "larisign.circle"

        /// SF Symbols's name：larisign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case larisignCircleFill = "larisign.circle.fill"

        /// SF Symbols's name：larisign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case larisignSquare = "larisign.square"

        /// SF Symbols's name：larisign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case larisignSquareFill = "larisign.square.fill"

        /// SF Symbols's name：lasso
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lasso = "lasso"

        /// SF Symbols's name：leaf.arrow.circlepath
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case leafArrowCirclepath = "leaf.arrow.circlepath"

        /// SF Symbols's name：lessthan
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lessthan = "lessthan"

        /// SF Symbols's name：lessthan.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lessthanCircle = "lessthan.circle"

        /// SF Symbols's name：lessthan.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lessthanCircleFill = "lessthan.circle.fill"

        /// SF Symbols's name：lessthan.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lessthanSquare = "lessthan.square"

        /// SF Symbols's name：lessthan.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lessthanSquareFill = "lessthan.square.fill"

        /// SF Symbols's name：light.max
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lightMax = "light.max"

        /// SF Symbols's name：light.min
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lightMin = "light.min"

        /// SF Symbols's name：lightbulb
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lightbulb = "lightbulb"

        /// SF Symbols's name：lightbulb.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lightbulbFill = "lightbulb.fill"

        /// SF Symbols's name：lightbulb.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lightbulbSlash = "lightbulb.slash"

        /// SF Symbols's name：lightbulb.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lightbulbSlashFill = "lightbulb.slash.fill"

        /// SF Symbols's name：line.horizontal.3
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lineHorizontal3 = "line.horizontal.3"

        /// SF Symbols's name：line.horizontal.3.decrease
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lineHorizontal3Decrease = "line.horizontal.3.decrease"

        /// SF Symbols's name：line.horizontal.3.decrease.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lineHorizontal3DecreaseCircle = "line.horizontal.3.decrease.circle"

        /// SF Symbols's name：line.horizontal.3.decrease.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lineHorizontal3DecreaseCircleFill = "line.horizontal.3.decrease.circle.fill"

        /// SF Symbols's name：link
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case link = "link"

        /// SF Symbols's name：link.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case linkCircle = "link.circle"

        /// SF Symbols's name：link.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case linkCircleFill = "link.circle.fill"

        /// SF Symbols's name：link.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case linkIcloud = "link.icloud"

        /// SF Symbols's name：link.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case linkIcloudFill = "link.icloud.fill"

        /// SF Symbols's name：lirasign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lirasignCircle = "lirasign.circle"

        /// SF Symbols's name：lirasign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lirasignCircleFill = "lirasign.circle.fill"

        /// SF Symbols's name：lirasign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lirasignSquare = "lirasign.square"

        /// SF Symbols's name：lirasign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lirasignSquareFill = "lirasign.square.fill"

        /// SF Symbols's name：list.bullet
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case listBullet = "list.bullet"

        /// SF Symbols's name：list.bullet.below.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case listBulletBelowRectangle = "list.bullet.below.rectangle"

        /// SF Symbols's name：list.bullet.indent
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case listBulletIndent = "list.bullet.indent"

        /// SF Symbols's name：list.dash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case listDash = "list.dash"

        /// SF Symbols's name：list.number
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case listNumber = "list.number"

        /// SF Symbols's name：list.number.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case listNumberRtl = "list.number.rtl"

        /// SF Symbols's name：livephoto
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case livephoto = "livephoto"

        /// SF Symbols's name：livephoto.play
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case livephotoPlay = "livephoto.play"

        /// SF Symbols's name：livephoto.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case livephotoSlash = "livephoto.slash"

        /// SF Symbols's name：location
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case location = "location"

        /// SF Symbols's name：location.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationCircle = "location.circle"

        /// SF Symbols's name：location.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationCircleFill = "location.circle.fill"

        /// SF Symbols's name：location.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationFill = "location.fill"

        /// SF Symbols's name：location.north
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationNorth = "location.north"

        /// SF Symbols's name：location.north.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationNorthFill = "location.north.fill"

        /// SF Symbols's name：location.north.line
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationNorthLine = "location.north.line"

        /// SF Symbols's name：location.north.line.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationNorthLineFill = "location.north.line.fill"

        /// SF Symbols's name：location.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationSlash = "location.slash"

        /// SF Symbols's name：location.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case locationSlashFill = "location.slash.fill"

        /// SF Symbols's name：lock
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lock = "lock"

        /// SF Symbols's name：lock.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockCircle = "lock.circle"

        /// SF Symbols's name：lock.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockCircleFill = "lock.circle.fill"

        /// SF Symbols's name：lock.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockFill = "lock.fill"

        /// SF Symbols's name：lock.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockIcloud = "lock.icloud"

        /// SF Symbols's name：lock.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockIcloudFill = "lock.icloud.fill"

        /// SF Symbols's name：lock.open
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockOpen = "lock.open"

        /// SF Symbols's name：lock.open.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockOpenFill = "lock.open.fill"

        /// SF Symbols's name：lock.rotation
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockRotation = "lock.rotation"

        /// SF Symbols's name：lock.rotation.open
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockRotationOpen = "lock.rotation.open"

        /// SF Symbols's name：lock.shield
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockShield = "lock.shield"

        /// SF Symbols's name：lock.shield.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockShieldFill = "lock.shield.fill"

        /// SF Symbols's name：lock.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockSlash = "lock.slash"

        /// SF Symbols's name：lock.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case lockSlashFill = "lock.slash.fill"

        /// SF Symbols's name：m.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mCircle = "m.circle"

        /// SF Symbols's name：m.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mCircleFill = "m.circle.fill"

        /// SF Symbols's name：m.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mSquare = "m.square"

        /// SF Symbols's name：m.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mSquareFill = "m.square.fill"

        /// SF Symbols's name：macwindow
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case macwindow = "macwindow"

        /// SF Symbols's name：magnifyingglass
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case magnifyingglass = "magnifyingglass"

        /// SF Symbols's name：magnifyingglass.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case magnifyingglassCircle = "magnifyingglass.circle"

        /// SF Symbols's name：magnifyingglass.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case magnifyingglassCircleFill = "magnifyingglass.circle.fill"

        /// SF Symbols's name：manatsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case manatsignCircle = "manatsign.circle"

        /// SF Symbols's name：manatsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case manatsignCircleFill = "manatsign.circle.fill"

        /// SF Symbols's name：manatsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case manatsignSquare = "manatsign.square"

        /// SF Symbols's name：manatsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case manatsignSquareFill = "manatsign.square.fill"

        /// SF Symbols's name：map
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case map = "map"

        /// SF Symbols's name：map.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mapFill = "map.fill"

        /// SF Symbols's name：mappin
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mappin = "mappin"

        /// SF Symbols's name：mappin.and.ellipse
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mappinAndEllipse = "mappin.and.ellipse"

        /// SF Symbols's name：mappin.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mappinSlash = "mappin.slash"

        /// SF Symbols's name：memories
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case memories = "memories"

        /// SF Symbols's name：memories.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case memoriesBadgeMinus = "memories.badge.minus"

        /// SF Symbols's name：memories.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case memoriesBadgePlus = "memories.badge.plus"

        /// SF Symbols's name：message
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case message = "message"

        /// SF Symbols's name：message.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case messageCircle = "message.circle"

        /// SF Symbols's name：message.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case messageCircleFill = "message.circle.fill"

        /// SF Symbols's name：message.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case messageFill = "message.fill"

        /// SF Symbols's name：metronome
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case metronome = "metronome"

        /// SF Symbols's name：mic
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case mic = "mic"

        /// SF Symbols's name：mic.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case micCircle = "mic.circle"

        /// SF Symbols's name：mic.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case micCircleFill = "mic.circle.fill"

        /// SF Symbols's name：mic.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case micFill = "mic.fill"

        /// SF Symbols's name：mic.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case micSlash = "mic.slash"

        /// SF Symbols's name：mic.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case micSlashFill = "mic.slash.fill"

        /// SF Symbols's name：millsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case millsignCircle = "millsign.circle"

        /// SF Symbols's name：millsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case millsignCircleFill = "millsign.circle.fill"

        /// SF Symbols's name：millsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case millsignSquare = "millsign.square"

        /// SF Symbols's name：millsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case millsignSquareFill = "millsign.square.fill"

        /// SF Symbols's name：minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minus = "minus"

        /// SF Symbols's name：minus.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusCircle = "minus.circle"

        /// SF Symbols's name：minus.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusCircleFill = "minus.circle.fill"

        /// SF Symbols's name：minus.magnifyingglass
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusMagnifyingglass = "minus.magnifyingglass"

        /// SF Symbols's name：minus.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusRectangle = "minus.rectangle"

        /// SF Symbols's name：minus.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusRectangleFill = "minus.rectangle.fill"

        /// SF Symbols's name：minus.slash.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusSlashPlus = "minus.slash.plus"

        /// SF Symbols's name：minus.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusSquare = "minus.square"

        /// SF Symbols's name：minus.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case minusSquareFill = "minus.square.fill"

        /// SF Symbols's name：moon
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moon = "moon"

        /// SF Symbols's name：moon.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonCircle = "moon.circle"

        /// SF Symbols's name：moon.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonCircleFill = "moon.circle.fill"

        /// SF Symbols's name：moon.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonFill = "moon.fill"

        /// SF Symbols's name：moon.stars
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonStars = "moon.stars"

        /// SF Symbols's name：moon.stars.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonStarsFill = "moon.stars.fill"

        /// SF Symbols's name：moon.zzz
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonZzz = "moon.zzz"

        /// SF Symbols's name：moon.zzz.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case moonZzzFill = "moon.zzz.fill"

        /// SF Symbols's name：multiply
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case multiply = "multiply"

        /// SF Symbols's name：multiply.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case multiplyCircle = "multiply.circle"

        /// SF Symbols's name：multiply.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case multiplyCircleFill = "multiply.circle.fill"

        /// SF Symbols's name：multiply.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case multiplySquare = "multiply.square"

        /// SF Symbols's name：multiply.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case multiplySquareFill = "multiply.square.fill"

        /// SF Symbols's name：music.house
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case musicHouse = "music.house"

        /// SF Symbols's name：music.house.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case musicHouseFill = "music.house.fill"

        /// SF Symbols's name：music.mic
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case musicMic = "music.mic"

        /// SF Symbols's name：music.note
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case musicNote = "music.note"

        /// SF Symbols's name：music.note.list
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case musicNoteList = "music.note.list"

        /// SF Symbols's name：n.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nCircle = "n.circle"

        /// SF Symbols's name：n.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nCircleFill = "n.circle.fill"

        /// SF Symbols's name：n.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nSquare = "n.square"

        /// SF Symbols's name：n.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nSquareFill = "n.square.fill"

        /// SF Symbols's name：nairasign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nairasignCircle = "nairasign.circle"

        /// SF Symbols's name：nairasign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nairasignCircleFill = "nairasign.circle.fill"

        /// SF Symbols's name：nairasign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nairasignSquare = "nairasign.square"

        /// SF Symbols's name：nairasign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nairasignSquareFill = "nairasign.square.fill"

        /// SF Symbols's name：nosign
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case nosign = "nosign"

        /// SF Symbols's name：number
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case number = "number"

        /// SF Symbols's name：number.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case numberCircle = "number.circle"

        /// SF Symbols's name：number.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case numberCircleFill = "number.circle.fill"

        /// SF Symbols's name：number.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case numberSquare = "number.square"

        /// SF Symbols's name：number.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case numberSquareFill = "number.square.fill"

        /// SF Symbols's name：o.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case oCircle = "o.circle"

        /// SF Symbols's name：o.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case oCircleFill = "o.circle.fill"

        /// SF Symbols's name：o.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case oSquare = "o.square"

        /// SF Symbols's name：o.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case oSquareFill = "o.square.fill"

        /// SF Symbols's name：option
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case option = "option"

        /// SF Symbols's name：p.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pCircle = "p.circle"

        /// SF Symbols's name：p.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pCircleFill = "p.circle.fill"

        /// SF Symbols's name：p.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pSquare = "p.square"

        /// SF Symbols's name：p.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pSquareFill = "p.square.fill"

        /// SF Symbols's name：paintbrush
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case paintbrush = "paintbrush"

        /// SF Symbols's name：paintbrush.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case paintbrushFill = "paintbrush.fill"

        /// SF Symbols's name：pano
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pano = "pano"

        /// SF Symbols's name：pano.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case panoFill = "pano.fill"

        /// SF Symbols's name：paperclip
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case paperclip = "paperclip"

        /// SF Symbols's name：paperplane
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case paperplane = "paperplane"

        /// SF Symbols's name：paperplane.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case paperplaneFill = "paperplane.fill"

        /// SF Symbols's name：paragraph
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case paragraph = "paragraph"

        /// SF Symbols's name：pause
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pause = "pause"

        /// SF Symbols's name：pause.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pauseCircle = "pause.circle"

        /// SF Symbols's name：pause.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pauseCircleFill = "pause.circle.fill"

        /// SF Symbols's name：pause.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pauseFill = "pause.fill"

        /// SF Symbols's name：pause.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pauseRectangle = "pause.rectangle"

        /// SF Symbols's name：pause.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pauseRectangleFill = "pause.rectangle.fill"

        /// SF Symbols's name：pencil
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencil = "pencil"

        /// SF Symbols's name：pencil.and.ellipsis.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilAndEllipsisRectangle = "pencil.and.ellipsis.rectangle"

        /// SF Symbols's name：pencil.and.outline
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilAndOutline = "pencil.and.outline"

        /// SF Symbols's name：pencil.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilCircle = "pencil.circle"

        /// SF Symbols's name：pencil.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilCircleFill = "pencil.circle.fill"

        /// SF Symbols's name：pencil.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilSlash = "pencil.slash"

        /// SF Symbols's name：pencil.tip
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilTip = "pencil.tip"

        /// SF Symbols's name：pencil.tip.crop.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilTipCropCircle = "pencil.tip.crop.circle"

        /// SF Symbols's name：pencil.tip.crop.circle.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilTipCropCircleBadgeMinus = "pencil.tip.crop.circle.badge.minus"

        /// SF Symbols's name：pencil.tip.crop.circle.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pencilTipCropCircleBadgePlus = "pencil.tip.crop.circle.badge.plus"

        /// SF Symbols's name：percent
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case percent = "percent"

        /// SF Symbols's name：person
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person = "person"

        /// SF Symbols's name：person.2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person2 = "person.2"

        /// SF Symbols's name：person.2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person2Fill = "person.2.fill"

        /// SF Symbols's name：person.2.square.stack
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person2SquareStack = "person.2.square.stack"

        /// SF Symbols's name：person.2.square.stack.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person2SquareStackFill = "person.2.square.stack.fill"

        /// SF Symbols's name：person.3
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person3 = "person.3"

        /// SF Symbols's name：person.3.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case person3Fill = "person.3.fill"

        /// SF Symbols's name：person.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personBadgeMinus = "person.badge.minus"

        /// SF Symbols's name：person.badge.minus.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personBadgeMinusFill = "person.badge.minus.fill"

        /// SF Symbols's name：person.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personBadgePlus = "person.badge.plus"

        /// SF Symbols's name：person.badge.plus.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personBadgePlusFill = "person.badge.plus.fill"

        /// SF Symbols's name：person.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCircle = "person.circle"

        /// SF Symbols's name：person.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCircleFill = "person.circle.fill"

        /// SF Symbols's name：person.crop.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircle = "person.crop.circle"

        /// SF Symbols's name：person.crop.circle.badge.checkmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleBadgeCheckmark = "person.crop.circle.badge.checkmark"

        /// SF Symbols's name：person.crop.circle.badge.exclam
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleBadgeExclam = "person.crop.circle.badge.exclam"

        /// SF Symbols's name：person.crop.circle.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleBadgeMinus = "person.crop.circle.badge.minus"

        /// SF Symbols's name：person.crop.circle.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleBadgePlus = "person.crop.circle.badge.plus"

        /// SF Symbols's name：person.crop.circle.badge.xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleBadgeXmark = "person.crop.circle.badge.xmark"

        /// SF Symbols's name：person.crop.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleFill = "person.crop.circle.fill"

        /// SF Symbols's name：person.crop.circle.fill.badge.checkmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleFillBadgeCheckmark = "person.crop.circle.fill.badge.checkmark"

        /// SF Symbols's name：person.crop.circle.fill.badge.exclam
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleFillBadgeExclam = "person.crop.circle.fill.badge.exclam"

        /// SF Symbols's name：person.crop.circle.fill.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleFillBadgeMinus = "person.crop.circle.fill.badge.minus"

        /// SF Symbols's name：person.crop.circle.fill.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleFillBadgePlus = "person.crop.circle.fill.badge.plus"

        /// SF Symbols's name：person.crop.circle.fill.badge.xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropCircleFillBadgeXmark = "person.crop.circle.fill.badge.xmark"

        /// SF Symbols's name：person.crop.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropRectangle = "person.crop.rectangle"

        /// SF Symbols's name：person.crop.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropRectangleFill = "person.crop.rectangle.fill"

        /// SF Symbols's name：person.crop.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropSquare = "person.crop.square"

        /// SF Symbols's name：person.crop.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personCropSquareFill = "person.crop.square.fill"

        /// SF Symbols's name：person.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personFill = "person.fill"

        /// SF Symbols's name：person.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personIcloud = "person.icloud"

        /// SF Symbols's name：person.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personIcloudFill = "person.icloud.fill"

        /// SF Symbols's name：personalhotspot
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case personalhotspot = "personalhotspot"

        /// SF Symbols's name：perspective
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case perspective = "perspective"

        /// SF Symbols's name：pesetasign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesetasignCircle = "pesetasign.circle"

        /// SF Symbols's name：pesetasign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesetasignCircleFill = "pesetasign.circle.fill"

        /// SF Symbols's name：pesetasign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesetasignSquare = "pesetasign.square"

        /// SF Symbols's name：pesetasign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesetasignSquareFill = "pesetasign.square.fill"

        /// SF Symbols's name：pesosign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesosignCircle = "pesosign.circle"

        /// SF Symbols's name：pesosign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesosignCircleFill = "pesosign.circle.fill"

        /// SF Symbols's name：pesosign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesosignSquare = "pesosign.square"

        /// SF Symbols's name：pesosign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pesosignSquareFill = "pesosign.square.fill"

        /// SF Symbols's name：phone
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phone = "phone"

        /// SF Symbols's name：phone.arrow.down.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneArrowDownLeft = "phone.arrow.down.left"

        /// SF Symbols's name：phone.arrow.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneArrowRight = "phone.arrow.right"

        /// SF Symbols's name：phone.arrow.up.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneArrowUpRight = "phone.arrow.up.right"

        /// SF Symbols's name：phone.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneBadgePlus = "phone.badge.plus"

        /// SF Symbols's name：phone.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneCircle = "phone.circle"

        /// SF Symbols's name：phone.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneCircleFill = "phone.circle.fill"

        /// SF Symbols's name：phone.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneDown = "phone.down"

        /// SF Symbols's name：phone.down.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneDownCircle = "phone.down.circle"

        /// SF Symbols's name：phone.down.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneDownCircleFill = "phone.down.circle.fill"

        /// SF Symbols's name：phone.down.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneDownFill = "phone.down.fill"

        /// SF Symbols's name：phone.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneFill = "phone.fill"

        /// SF Symbols's name：phone.fill.arrow.down.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneFillArrowDownLeft = "phone.fill.arrow.down.left"

        /// SF Symbols's name：phone.fill.arrow.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneFillArrowRight = "phone.fill.arrow.right"

        /// SF Symbols's name：phone.fill.arrow.up.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneFillArrowUpRight = "phone.fill.arrow.up.right"

        /// SF Symbols's name：phone.fill.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case phoneFillBadgePlus = "phone.fill.badge.plus"

        /// SF Symbols's name：photo
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case photo = "photo"

        /// SF Symbols's name：photo.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case photoFill = "photo.fill"

        /// SF Symbols's name：photo.fill.on.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case photoFillOnRectangleFill = "photo.fill.on.rectangle.fill"

        /// SF Symbols's name：photo.on.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case photoOnRectangle = "photo.on.rectangle"

        /// SF Symbols's name：pin
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pin = "pin"

        /// SF Symbols's name：pin.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pinFill = "pin.fill"

        /// SF Symbols's name：pin.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pinSlash = "pin.slash"

        /// SF Symbols's name：pin.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case pinSlashFill = "pin.slash.fill"

        /// SF Symbols's name：play
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case play = "play"

        /// SF Symbols's name：play.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playCircle = "play.circle"

        /// SF Symbols's name：play.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playCircleFill = "play.circle.fill"

        /// SF Symbols's name：play.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playFill = "play.fill"

        /// SF Symbols's name：play.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playRectangle = "play.rectangle"

        /// SF Symbols's name：play.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playRectangleFill = "play.rectangle.fill"

        /// SF Symbols's name：playpause
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playpause = "playpause"

        /// SF Symbols's name：playpause.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case playpauseFill = "playpause.fill"

        /// SF Symbols's name：plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plus = "plus"

        /// SF Symbols's name：plus.app
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusApp = "plus.app"

        /// SF Symbols's name：plus.app.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusAppFill = "plus.app.fill"

        /// SF Symbols's name：plus.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusBubble = "plus.bubble"

        /// SF Symbols's name：plus.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusBubbleFill = "plus.bubble.fill"

        /// SF Symbols's name：plus.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusCircle = "plus.circle"

        /// SF Symbols's name：plus.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusCircleFill = "plus.circle.fill"

        /// SF Symbols's name：plus.magnifyingglass
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusMagnifyingglass = "plus.magnifyingglass"

        /// SF Symbols's name：plus.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusRectangle = "plus.rectangle"

        /// SF Symbols's name：plus.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusRectangleFill = "plus.rectangle.fill"

        /// SF Symbols's name：plus.rectangle.fill.on.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusRectangleFillOnRectangleFill = "plus.rectangle.fill.on.rectangle.fill"

        /// SF Symbols's name：plus.rectangle.on.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusRectangleOnRectangle = "plus.rectangle.on.rectangle"

        /// SF Symbols's name：plus.slash.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusSlashMinus = "plus.slash.minus"

        /// SF Symbols's name：plus.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusSquare = "plus.square"

        /// SF Symbols's name：plus.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusSquareFill = "plus.square.fill"

        /// SF Symbols's name：plus.square.fill.on.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusSquareFillOnSquareFill = "plus.square.fill.on.square.fill"

        /// SF Symbols's name：plus.square.on.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusSquareOnSquare = "plus.square.on.square"

        /// SF Symbols's name：plusminus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusminus = "plusminus"

        /// SF Symbols's name：plusminus.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusminusCircle = "plusminus.circle"

        /// SF Symbols's name：plusminus.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case plusminusCircleFill = "plusminus.circle.fill"

        /// SF Symbols's name：power
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case power = "power"

        /// SF Symbols's name：printer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case printer = "printer"

        /// SF Symbols's name：printer.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case printerFill = "printer.fill"

        /// SF Symbols's name：projective
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case projective = "projective"

        /// SF Symbols's name：purchased
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case purchased = "purchased"

        /// SF Symbols's name：purchased.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case purchasedCircle = "purchased.circle"

        /// SF Symbols's name：purchased.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case purchasedCircleFill = "purchased.circle.fill"

        /// SF Symbols's name：q.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case qCircle = "q.circle"

        /// SF Symbols's name：q.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case qCircleFill = "q.circle.fill"

        /// SF Symbols's name：q.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case qSquare = "q.square"

        /// SF Symbols's name：q.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case qSquareFill = "q.square.fill"

        /// SF Symbols's name：qrcode
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case qrcode = "qrcode"

        /// SF Symbols's name：qrcode.viewfinder
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case qrcodeViewfinder = "qrcode.viewfinder"

        /// SF Symbols's name：questionmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmark = "questionmark"

        /// SF Symbols's name：questionmark.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkCircle = "questionmark.circle"

        /// SF Symbols's name：questionmark.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkCircleFill = "questionmark.circle.fill"

        /// SF Symbols's name：questionmark.diamond
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkDiamond = "questionmark.diamond"

        /// SF Symbols's name：questionmark.diamond.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkDiamondFill = "questionmark.diamond.fill"

        /// SF Symbols's name：questionmark.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkSquare = "questionmark.square"

        /// SF Symbols's name：questionmark.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkSquareFill = "questionmark.square.fill"

        /// SF Symbols's name：questionmark.video
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkVideo = "questionmark.video"

        /// SF Symbols's name：questionmark.video.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkVideoFill = "questionmark.video.fill"

        /// SF Symbols's name：questionmark.video.fill.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkVideoFillRtl = "questionmark.video.fill.rtl"

        /// SF Symbols's name：questionmark.video.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case questionmarkVideoRtl = "questionmark.video.rtl"

        /// SF Symbols's name：quote.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case quoteBubble = "quote.bubble"

        /// SF Symbols's name：quote.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case quoteBubbleFill = "quote.bubble.fill"

        /// SF Symbols's name：r.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rCircle = "r.circle"

        /// SF Symbols's name：r.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rCircleFill = "r.circle.fill"

        /// SF Symbols's name：r.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rSquare = "r.square"

        /// SF Symbols's name：r.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rSquareFill = "r.square.fill"

        /// SF Symbols's name：radiowaves.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case radiowavesLeft = "radiowaves.left"

        /// SF Symbols's name：radiowaves.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case radiowavesRight = "radiowaves.right"

        /// SF Symbols's name：rays
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rays = "rays"

        /// SF Symbols's name：recordingtape
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case recordingtape = "recordingtape"

        /// SF Symbols's name：rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangle = "rectangle"

        /// SF Symbols's name：rectangle.3.offgrid
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangle3Offgrid = "rectangle.3.offgrid"

        /// SF Symbols's name：rectangle.3.offgrid.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangle3OffgridFill = "rectangle.3.offgrid.fill"

        /// SF Symbols's name：rectangle.and.arrow.up.right.and.arrow.down.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleAndArrowUpRightAndArrowDownLeft = "rectangle.and.arrow.up.right.and.arrow.down.left"

        /// SF Symbols's name：rectangle.and.arrow.up.right.and.arrow.down.left.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleAndArrowUpRightAndArrowDownLeftSlash = "rectangle.and.arrow.up.right.and.arrow.down.left.slash"

        /// SF Symbols's name：rectangle.and.paperclip
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleAndPaperclip = "rectangle.and.paperclip"

        /// SF Symbols's name：rectangle.badge.checkmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleBadgeCheckmark = "rectangle.badge.checkmark"

        /// SF Symbols's name：rectangle.badge.xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleBadgeXmark = "rectangle.badge.xmark"

        /// SF Symbols's name：rectangle.compress.vertical
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleCompressVertical = "rectangle.compress.vertical"

        /// SF Symbols's name：rectangle.dock
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleDock = "rectangle.dock"

        /// SF Symbols's name：rectangle.expand.vertical
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleExpandVertical = "rectangle.expand.vertical"

        /// SF Symbols's name：rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleFill = "rectangle.fill"

        /// SF Symbols's name：rectangle.fill.badge.checkmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleFillBadgeCheckmark = "rectangle.fill.badge.checkmark"

        /// SF Symbols's name：rectangle.fill.badge.xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleFillBadgeXmark = "rectangle.fill.badge.xmark"

        /// SF Symbols's name：rectangle.fill.on.rectangle.angled.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleFillOnRectangleAngledFill = "rectangle.fill.on.rectangle.angled.fill"

        /// SF Symbols's name：rectangle.fill.on.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleFillOnRectangleFill = "rectangle.fill.on.rectangle.fill"

        /// SF Symbols's name：rectangle.grid.1x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleGrid1x2 = "rectangle.grid.1x2"

        /// SF Symbols's name：rectangle.grid.1x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleGrid1x2Fill = "rectangle.grid.1x2.fill"

        /// SF Symbols's name：rectangle.grid.2x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleGrid2x2 = "rectangle.grid.2x2"

        /// SF Symbols's name：rectangle.grid.2x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleGrid2x2Fill = "rectangle.grid.2x2.fill"

        /// SF Symbols's name：rectangle.grid.3x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleGrid3x2 = "rectangle.grid.3x2"

        /// SF Symbols's name：rectangle.grid.3x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleGrid3x2Fill = "rectangle.grid.3x2.fill"

        /// SF Symbols's name：rectangle.on.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleOnRectangle = "rectangle.on.rectangle"

        /// SF Symbols's name：rectangle.on.rectangle.angled
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleOnRectangleAngled = "rectangle.on.rectangle.angled"

        /// SF Symbols's name：rectangle.split.3x1
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleSplit3x1 = "rectangle.split.3x1"

        /// SF Symbols's name：rectangle.split.3x1.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleSplit3x1Fill = "rectangle.split.3x1.fill"

        /// SF Symbols's name：rectangle.split.3x3
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleSplit3x3 = "rectangle.split.3x3"

        /// SF Symbols's name：rectangle.split.3x3.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleSplit3x3Fill = "rectangle.split.3x3.fill"

        /// SF Symbols's name：rectangle.stack
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStack = "rectangle.stack"

        /// SF Symbols's name：rectangle.stack.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackBadgeMinus = "rectangle.stack.badge.minus"

        /// SF Symbols's name：rectangle.stack.badge.person.crop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackBadgePersonCrop = "rectangle.stack.badge.person.crop"

        /// SF Symbols's name：rectangle.stack.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackBadgePlus = "rectangle.stack.badge.plus"

        /// SF Symbols's name：rectangle.stack.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackFill = "rectangle.stack.fill"

        /// SF Symbols's name：rectangle.stack.fill.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackFillBadgeMinus = "rectangle.stack.fill.badge.minus"

        /// SF Symbols's name：rectangle.stack.fill.badge.person.crop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackFillBadgePersonCrop = "rectangle.stack.fill.badge.person.crop"

        /// SF Symbols's name：rectangle.stack.fill.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackFillBadgePlus = "rectangle.stack.fill.badge.plus"

        /// SF Symbols's name：rectangle.stack.person.crop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackPersonCrop = "rectangle.stack.person.crop"

        /// SF Symbols's name：rectangle.stack.person.crop.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rectangleStackPersonCropFill = "rectangle.stack.person.crop.fill"

        /// SF Symbols's name：repeat
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case `repeat` = "repeat"

        /// SF Symbols's name：repeat.1
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case repeat1 = "repeat.1"

        /// SF Symbols's name：return
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case `return` = "return"

        /// SF Symbols's name：rhombus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rhombus = "rhombus"

        /// SF Symbols's name：rhombus.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rhombusFill = "rhombus.fill"

        /// SF Symbols's name：rosette
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rosette = "rosette"

        /// SF Symbols's name：rotate.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rotateLeft = "rotate.left"

        /// SF Symbols's name：rotate.left.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rotateLeftFill = "rotate.left.fill"

        /// SF Symbols's name：rotate.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rotateRight = "rotate.right"

        /// SF Symbols's name：rotate.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rotateRightFill = "rotate.right.fill"

        /// SF Symbols's name：rublesign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rublesignCircle = "rublesign.circle"

        /// SF Symbols's name：rublesign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rublesignCircleFill = "rublesign.circle.fill"

        /// SF Symbols's name：rublesign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rublesignSquare = "rublesign.square"

        /// SF Symbols's name：rublesign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rublesignSquareFill = "rublesign.square.fill"

        /// SF Symbols's name：rupeesign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rupeesignCircle = "rupeesign.circle"

        /// SF Symbols's name：rupeesign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rupeesignCircleFill = "rupeesign.circle.fill"

        /// SF Symbols's name：rupeesign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rupeesignSquare = "rupeesign.square"

        /// SF Symbols's name：rupeesign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case rupeesignSquareFill = "rupeesign.square.fill"

        /// SF Symbols's name：s.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sCircle = "s.circle"

        /// SF Symbols's name：s.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sCircleFill = "s.circle.fill"

        /// SF Symbols's name：s.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sSquare = "s.square"

        /// SF Symbols's name：s.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sSquareFill = "s.square.fill"

        /// SF Symbols's name：safari
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case safari = "safari"

        /// SF Symbols's name：safari.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case safariFill = "safari.fill"

        /// SF Symbols's name：scissors
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case scissors = "scissors"

        /// SF Symbols's name：scope
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case scope = "scope"

        /// SF Symbols's name：scribble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case scribble = "scribble"

        /// SF Symbols's name：selection.pin.in.out
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case selectionPinInOut = "selection.pin.in.out"

        /// SF Symbols's name：sheqelsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sheqelsignCircle = "sheqelsign.circle"

        /// SF Symbols's name：sheqelsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sheqelsignCircleFill = "sheqelsign.circle.fill"

        /// SF Symbols's name：sheqelsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sheqelsignSquare = "sheqelsign.square"

        /// SF Symbols's name：sheqelsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sheqelsignSquareFill = "sheqelsign.square.fill"

        /// SF Symbols's name：shield
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shield = "shield"

        /// SF Symbols's name：shield.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shieldFill = "shield.fill"

        /// SF Symbols's name：shield.lefthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shieldLefthalfFill = "shield.lefthalf.fill"

        /// SF Symbols's name：shield.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shieldSlash = "shield.slash"

        /// SF Symbols's name：shield.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shieldSlashFill = "shield.slash.fill"

        /// SF Symbols's name：shift
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shift = "shift"

        /// SF Symbols's name：shift.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shiftFill = "shift.fill"

        /// SF Symbols's name：shuffle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case shuffle = "shuffle"

        /// SF Symbols's name：sidebar.left
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sidebarLeft = "sidebar.left"

        /// SF Symbols's name：sidebar.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sidebarRight = "sidebar.right"

        /// SF Symbols's name：signature
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case signature = "signature"

        /// SF Symbols's name：skew
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case skew = "skew"

        /// SF Symbols's name：slash.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case slashCircle = "slash.circle"

        /// SF Symbols's name：slash.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case slashCircleFill = "slash.circle.fill"

        /// SF Symbols's name：slider.horizontal.3
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sliderHorizontal3 = "slider.horizontal.3"

        /// SF Symbols's name：slider.horizontal.below.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sliderHorizontalBelowRectangle = "slider.horizontal.below.rectangle"

        /// SF Symbols's name：slowmo
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case slowmo = "slowmo"

        /// SF Symbols's name：smallcircle.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smallcircleCircle = "smallcircle.circle"

        /// SF Symbols's name：smallcircle.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smallcircleCircleFill = "smallcircle.circle.fill"

        /// SF Symbols's name：smallcircle.fill.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smallcircleFillCircle = "smallcircle.fill.circle"

        /// SF Symbols's name：smallcircle.fill.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smallcircleFillCircleFill = "smallcircle.fill.circle.fill"

        /// SF Symbols's name：smiley
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smiley = "smiley"

        /// SF Symbols's name：smiley.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smileyFill = "smiley.fill"

        /// SF Symbols's name：smoke
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smoke = "smoke"

        /// SF Symbols's name：smoke.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case smokeFill = "smoke.fill"

        /// SF Symbols's name：snow
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case snow = "snow"

        /// SF Symbols's name：sparkles
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sparkles = "sparkles"

        /// SF Symbols's name：speaker
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker = "speaker"

        /// SF Symbols's name：speaker.1
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker1 = "speaker.1"

        /// SF Symbols's name：speaker.1.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker1Fill = "speaker.1.fill"

        /// SF Symbols's name：speaker.2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker2 = "speaker.2"

        /// SF Symbols's name：speaker.2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker2Fill = "speaker.2.fill"

        /// SF Symbols's name：speaker.3
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker3 = "speaker.3"

        /// SF Symbols's name：speaker.3.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speaker3Fill = "speaker.3.fill"

        /// SF Symbols's name：speaker.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerFill = "speaker.fill"

        /// SF Symbols's name：speaker.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerSlash = "speaker.slash"

        /// SF Symbols's name：speaker.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerSlashFill = "speaker.slash.fill"

        /// SF Symbols's name：speaker.slash.fill.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerSlashFillRtl = "speaker.slash.fill.rtl"

        /// SF Symbols's name：speaker.slash.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerSlashRtl = "speaker.slash.rtl"

        /// SF Symbols's name：speaker.zzz
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerZzz = "speaker.zzz"

        /// SF Symbols's name：speaker.zzz.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerZzzFill = "speaker.zzz.fill"

        /// SF Symbols's name：speaker.zzz.fill.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerZzzFillRtl = "speaker.zzz.fill.rtl"

        /// SF Symbols's name：speaker.zzz.rtl
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speakerZzzRtl = "speaker.zzz.rtl"

        /// SF Symbols's name：speedometer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case speedometer = "speedometer"

        /// SF Symbols's name：sportscourt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sportscourt = "sportscourt"

        /// SF Symbols's name：sportscourt.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sportscourtFill = "sportscourt.fill"

        /// SF Symbols's name：square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case square = "square"

        /// SF Symbols's name：square.and.arrow.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowDown = "square.and.arrow.down"

        /// SF Symbols's name：square.and.arrow.down.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowDownFill = "square.and.arrow.down.fill"

        /// SF Symbols's name：square.and.arrow.down.on.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowDownOnSquare = "square.and.arrow.down.on.square"

        /// SF Symbols's name：square.and.arrow.down.on.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowDownOnSquareFill = "square.and.arrow.down.on.square.fill"

        /// SF Symbols's name：square.and.arrow.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowUp = "square.and.arrow.up"

        /// SF Symbols's name：square.and.arrow.up.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowUpFill = "square.and.arrow.up.fill"

        /// SF Symbols's name：square.and.arrow.up.on.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowUpOnSquare = "square.and.arrow.up.on.square"

        /// SF Symbols's name：square.and.arrow.up.on.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndArrowUpOnSquareFill = "square.and.arrow.up.on.square.fill"

        /// SF Symbols's name：square.and.line.vertical.and.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndLineVerticalAndSquare = "square.and.line.vertical.and.square"

        /// SF Symbols's name：square.and.line.vertical.and.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndLineVerticalAndSquareFill = "square.and.line.vertical.and.square.fill"

        /// SF Symbols's name：square.and.pencil
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareAndPencil = "square.and.pencil"

        /// SF Symbols's name：square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareFill = "square.fill"

        /// SF Symbols's name：square.fill.and.line.vertical.and.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareFillAndLineVerticalAndSquare = "square.fill.and.line.vertical.and.square"

        /// SF Symbols's name：square.fill.and.line.vertical.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareFillAndLineVerticalSquareFill = "square.fill.and.line.vertical.square.fill"

        /// SF Symbols's name：square.fill.on.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareFillOnCircleFill = "square.fill.on.circle.fill"

        /// SF Symbols's name：square.fill.on.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareFillOnSquareFill = "square.fill.on.square.fill"

        /// SF Symbols's name：square.grid.2x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareGrid2x2 = "square.grid.2x2"

        /// SF Symbols's name：square.grid.2x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareGrid2x2Fill = "square.grid.2x2.fill"

        /// SF Symbols's name：square.grid.3x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareGrid3x2 = "square.grid.3x2"

        /// SF Symbols's name：square.grid.3x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareGrid3x2Fill = "square.grid.3x2.fill"

        /// SF Symbols's name：square.grid.4x3.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareGrid4x3Fill = "square.grid.4x3.fill"

        /// SF Symbols's name：square.lefthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareLefthalfFill = "square.lefthalf.fill"

        /// SF Symbols's name：square.on.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareOnCircle = "square.on.circle"

        /// SF Symbols's name：square.on.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareOnSquare = "square.on.square"

        /// SF Symbols's name：square.righthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareRighthalfFill = "square.righthalf.fill"

        /// SF Symbols's name：square.split.1x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareSplit1x2 = "square.split.1x2"

        /// SF Symbols's name：square.split.1x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareSplit1x2Fill = "square.split.1x2.fill"

        /// SF Symbols's name：square.split.2x1
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareSplit2x1 = "square.split.2x1"

        /// SF Symbols's name：square.split.2x1.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareSplit2x1Fill = "square.split.2x1.fill"

        /// SF Symbols's name：square.split.2x2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareSplit2x2 = "square.split.2x2"

        /// SF Symbols's name：square.split.2x2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareSplit2x2Fill = "square.split.2x2.fill"

        /// SF Symbols's name：square.stack
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack = "square.stack"

        /// SF Symbols's name：square.stack.3d.down.dottedline
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dDownDottedline = "square.stack.3d.down.dottedline"

        /// SF Symbols's name：square.stack.3d.down.right
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dDownRight = "square.stack.3d.down.right"

        /// SF Symbols's name：square.stack.3d.down.right.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dDownRightFill = "square.stack.3d.down.right.fill"

        /// SF Symbols's name：square.stack.3d.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dUp = "square.stack.3d.up"

        /// SF Symbols's name：square.stack.3d.up.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dUpFill = "square.stack.3d.up.fill"

        /// SF Symbols's name：square.stack.3d.up.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dUpSlash = "square.stack.3d.up.slash"

        /// SF Symbols's name：square.stack.3d.up.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStack3dUpSlashFill = "square.stack.3d.up.slash.fill"

        /// SF Symbols's name：square.stack.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squareStackFill = "square.stack.fill"

        /// SF Symbols's name：squares.below.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case squaresBelowRectangle = "squares.below.rectangle"

        /// SF Symbols's name：star
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case star = "star"

        /// SF Symbols's name：star.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case starCircle = "star.circle"

        /// SF Symbols's name：star.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case starCircleFill = "star.circle.fill"

        /// SF Symbols's name：star.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case starFill = "star.fill"

        /// SF Symbols's name：star.lefthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case starLefthalfFill = "star.lefthalf.fill"

        /// SF Symbols's name：star.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case starSlash = "star.slash"

        /// SF Symbols's name：star.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case starSlashFill = "star.slash.fill"

        /// SF Symbols's name：staroflife
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case staroflife = "staroflife"

        /// SF Symbols's name：staroflife.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case staroflifeFill = "staroflife.fill"

        /// SF Symbols's name：sterlingsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sterlingsignCircle = "sterlingsign.circle"

        /// SF Symbols's name：sterlingsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sterlingsignCircleFill = "sterlingsign.circle.fill"

        /// SF Symbols's name：sterlingsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sterlingsignSquare = "sterlingsign.square"

        /// SF Symbols's name：sterlingsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sterlingsignSquareFill = "sterlingsign.square.fill"

        /// SF Symbols's name：stop
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case stop = "stop"

        /// SF Symbols's name：stop.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case stopCircle = "stop.circle"

        /// SF Symbols's name：stop.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case stopCircleFill = "stop.circle.fill"

        /// SF Symbols's name：stop.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case stopFill = "stop.fill"

        /// SF Symbols's name：stopwatch
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case stopwatch = "stopwatch"

        /// SF Symbols's name：stopwatch.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case stopwatchFill = "stopwatch.fill"

        /// SF Symbols's name：strikethrough
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case strikethrough = "strikethrough"

        /// SF Symbols's name：suit.club
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitClub = "suit.club"

        /// SF Symbols's name：suit.club.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitClubFill = "suit.club.fill"

        /// SF Symbols's name：suit.diamond
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitDiamond = "suit.diamond"

        /// SF Symbols's name：suit.diamond.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitDiamondFill = "suit.diamond.fill"

        /// SF Symbols's name：suit.heart
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitHeart = "suit.heart"

        /// SF Symbols's name：suit.heart.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitHeartFill = "suit.heart.fill"

        /// SF Symbols's name：suit.spade
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitSpade = "suit.spade"

        /// SF Symbols's name：suit.spade.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case suitSpadeFill = "suit.spade.fill"

        /// SF Symbols's name：sum
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sum = "sum"

        /// SF Symbols's name：sun.dust
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunDust = "sun.dust"

        /// SF Symbols's name：sun.dust.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunDustFill = "sun.dust.fill"

        /// SF Symbols's name：sun.haze
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunHaze = "sun.haze"

        /// SF Symbols's name：sun.haze.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunHazeFill = "sun.haze.fill"

        /// SF Symbols's name：sun.max
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunMax = "sun.max"

        /// SF Symbols's name：sun.max.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunMaxFill = "sun.max.fill"

        /// SF Symbols's name：sun.min
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunMin = "sun.min"

        /// SF Symbols's name：sun.min.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunMinFill = "sun.min.fill"

        /// SF Symbols's name：sunrise
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunrise = "sunrise"

        /// SF Symbols's name：sunrise.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunriseFill = "sunrise.fill"

        /// SF Symbols's name：sunset
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunset = "sunset"

        /// SF Symbols's name：sunset.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case sunsetFill = "sunset.fill"

        /// SF Symbols's name：t.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tBubble = "t.bubble"

        /// SF Symbols's name：t.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tBubbleFill = "t.bubble.fill"

        /// SF Symbols's name：t.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tCircle = "t.circle"

        /// SF Symbols's name：t.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tCircleFill = "t.circle.fill"

        /// SF Symbols's name：t.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tSquare = "t.square"

        /// SF Symbols's name：t.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tSquareFill = "t.square.fill"

        /// SF Symbols's name：table
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case table = "table"

        /// SF Symbols's name：table.badge.more
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tableBadgeMore = "table.badge.more"

        /// SF Symbols's name：table.badge.more.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tableBadgeMoreFill = "table.badge.more.fill"

        /// SF Symbols's name：table.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tableFill = "table.fill"

        /// SF Symbols's name：tag
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tag = "tag"

        /// SF Symbols's name：tag.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tagCircle = "tag.circle"

        /// SF Symbols's name：tag.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tagCircleFill = "tag.circle.fill"

        /// SF Symbols's name：tag.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tagFill = "tag.fill"

        /// SF Symbols's name：teletype
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case teletype = "teletype"

        /// SF Symbols's name：teletype.answer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case teletypeAnswer = "teletype.answer"

        /// SF Symbols's name：tengesign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tengesignCircle = "tengesign.circle"

        /// SF Symbols's name：tengesign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tengesignCircleFill = "tengesign.circle.fill"

        /// SF Symbols's name：tengesign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tengesignSquare = "tengesign.square"

        /// SF Symbols's name：tengesign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tengesignSquareFill = "tengesign.square.fill"

        /// SF Symbols's name：text.aligncenter
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textAligncenter = "text.aligncenter"

        /// SF Symbols's name：text.alignleft
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textAlignleft = "text.alignleft"

        /// SF Symbols's name：text.alignright
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textAlignright = "text.alignright"

        /// SF Symbols's name：text.append
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textAppend = "text.append"

        /// SF Symbols's name：text.badge.checkmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBadgeCheckmark = "text.badge.checkmark"

        /// SF Symbols's name：text.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBadgeMinus = "text.badge.minus"

        /// SF Symbols's name：text.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBadgePlus = "text.badge.plus"

        /// SF Symbols's name：text.badge.star
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBadgeStar = "text.badge.star"

        /// SF Symbols's name：text.badge.xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBadgeXmark = "text.badge.xmark"

        /// SF Symbols's name：text.bubble
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBubble = "text.bubble"

        /// SF Symbols's name：text.bubble.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textBubbleFill = "text.bubble.fill"

        /// SF Symbols's name：text.cursor
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textCursor = "text.cursor"

        /// SF Symbols's name：text.insert
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textInsert = "text.insert"

        /// SF Symbols's name：text.justify
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textJustify = "text.justify"

        /// SF Symbols's name：text.justifyleft
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textJustifyleft = "text.justifyleft"

        /// SF Symbols's name：text.justifyright
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textJustifyright = "text.justifyright"

        /// SF Symbols's name：text.quote
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textQuote = "text.quote"

        /// SF Symbols's name：textbox
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textbox = "textbox"

        /// SF Symbols's name：textformat
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformat = "textformat"

        /// SF Symbols's name：textformat.123
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformat123 = "textformat.123"

        /// SF Symbols's name：textformat.abc
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformatAbc = "textformat.abc"

        /// SF Symbols's name：textformat.abc.dottedunderline
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformatAbcDottedunderline = "textformat.abc.dottedunderline"

        /// SF Symbols's name：textformat.alt
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformatAlt = "textformat.alt"

        /// SF Symbols's name：textformat.size
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformatSize = "textformat.size"

        /// SF Symbols's name：textformat.subscript
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformatSubscript = "textformat.subscript"

        /// SF Symbols's name：textformat.superscript
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case textformatSuperscript = "textformat.superscript"

        /// SF Symbols's name：thermometer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case thermometer = "thermometer"

        /// SF Symbols's name：thermometer.snowflake
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case thermometerSnowflake = "thermometer.snowflake"

        /// SF Symbols's name：thermometer.sun
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case thermometerSun = "thermometer.sun"

        /// SF Symbols's name：timelapse
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case timelapse = "timelapse"

        /// SF Symbols's name：timer
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case timer = "timer"

        /// SF Symbols's name：tornado
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tornado = "tornado"

        /// SF Symbols's name：tortoise
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tortoise = "tortoise"

        /// SF Symbols's name：tortoise.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tortoiseFill = "tortoise.fill"

        /// SF Symbols's name：tram.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tramFill = "tram.fill"

        /// SF Symbols's name：trash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trash = "trash"

        /// SF Symbols's name：trash.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trashCircle = "trash.circle"

        /// SF Symbols's name：trash.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trashCircleFill = "trash.circle.fill"

        /// SF Symbols's name：trash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trashFill = "trash.fill"

        /// SF Symbols's name：trash.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trashSlash = "trash.slash"

        /// SF Symbols's name：trash.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trashSlashFill = "trash.slash.fill"

        /// SF Symbols's name：tray
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tray = "tray"

        /// SF Symbols's name：tray.2
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tray2 = "tray.2"

        /// SF Symbols's name：tray.2.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tray2Fill = "tray.2.fill"

        /// SF Symbols's name：tray.and.arrow.down
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayAndArrowDown = "tray.and.arrow.down"

        /// SF Symbols's name：tray.and.arrow.down.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayAndArrowDownFill = "tray.and.arrow.down.fill"

        /// SF Symbols's name：tray.and.arrow.up
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayAndArrowUp = "tray.and.arrow.up"

        /// SF Symbols's name：tray.and.arrow.up.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayAndArrowUpFill = "tray.and.arrow.up.fill"

        /// SF Symbols's name：tray.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayFill = "tray.fill"

        /// SF Symbols's name：tray.full
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayFull = "tray.full"

        /// SF Symbols's name：tray.full.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case trayFullFill = "tray.full.fill"

        /// SF Symbols's name：triangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case triangle = "triangle"

        /// SF Symbols's name：triangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case triangleFill = "triangle.fill"

        /// SF Symbols's name：triangle.lefthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case triangleLefthalfFill = "triangle.lefthalf.fill"

        /// SF Symbols's name：triangle.righthalf.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case triangleRighthalfFill = "triangle.righthalf.fill"

        /// SF Symbols's name：tropicalstorm
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tropicalstorm = "tropicalstorm"

        /// SF Symbols's name：tugriksign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tugriksignCircle = "tugriksign.circle"

        /// SF Symbols's name：tugriksign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tugriksignCircleFill = "tugriksign.circle.fill"

        /// SF Symbols's name：tugriksign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tugriksignSquare = "tugriksign.square"

        /// SF Symbols's name：tugriksign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tugriksignSquareFill = "tugriksign.square.fill"

        /// SF Symbols's name：tuningfork
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tuningfork = "tuningfork"

        /// SF Symbols's name：turkishlirasign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case turkishlirasignCircle = "turkishlirasign.circle"

        /// SF Symbols's name：turkishlirasign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case turkishlirasignCircleFill = "turkishlirasign.circle.fill"

        /// SF Symbols's name：turkishlirasign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case turkishlirasignSquare = "turkishlirasign.square"

        /// SF Symbols's name：turkishlirasign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case turkishlirasignSquareFill = "turkishlirasign.square.fill"

        /// SF Symbols's name：tv
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tv = "tv"

        /// SF Symbols's name：tv.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tvCircle = "tv.circle"

        /// SF Symbols's name：tv.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tvCircleFill = "tv.circle.fill"

        /// SF Symbols's name：tv.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tvFill = "tv.fill"

        /// SF Symbols's name：tv.music.note
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tvMusicNote = "tv.music.note"

        /// SF Symbols's name：tv.music.note.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case tvMusicNoteFill = "tv.music.note.fill"

        /// SF Symbols's name：u.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case uCircle = "u.circle"

        /// SF Symbols's name：u.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case uCircleFill = "u.circle.fill"

        /// SF Symbols's name：u.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case uSquare = "u.square"

        /// SF Symbols's name：u.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case uSquareFill = "u.square.fill"

        /// SF Symbols's name：uiwindow.split.2x1
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case uiwindowSplit2x1 = "uiwindow.split.2x1"

        /// SF Symbols's name：umbrella
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case umbrella = "umbrella"

        /// SF Symbols's name：umbrella.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case umbrellaFill = "umbrella.fill"

        /// SF Symbols's name：underline
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case underline = "underline"

        /// SF Symbols's name：v.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case vCircle = "v.circle"

        /// SF Symbols's name：v.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case vCircleFill = "v.circle.fill"

        /// SF Symbols's name：v.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case vSquare = "v.square"

        /// SF Symbols's name：v.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case vSquareFill = "v.square.fill"

        /// SF Symbols's name：video
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case video = "video"

        /// SF Symbols's name：video.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoBadgePlus = "video.badge.plus"

        /// SF Symbols's name：video.badge.plus.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoBadgePlusFill = "video.badge.plus.fill"

        /// SF Symbols's name：video.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoCircle = "video.circle"

        /// SF Symbols's name：video.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoCircleFill = "video.circle.fill"

        /// SF Symbols's name：video.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoFill = "video.fill"

        /// SF Symbols's name：video.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoSlash = "video.slash"

        /// SF Symbols's name：video.slash.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case videoSlashFill = "video.slash.fill"

        /// SF Symbols's name：view.2d
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case view2d = "view.2d"

        /// SF Symbols's name：view.3d
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case view3d = "view.3d"

        /// SF Symbols's name：viewfinder
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case viewfinder = "viewfinder"

        /// SF Symbols's name：viewfinder.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case viewfinderCircle = "viewfinder.circle"

        /// SF Symbols's name：viewfinder.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case viewfinderCircleFill = "viewfinder.circle.fill"

        /// SF Symbols's name：w.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wCircle = "w.circle"

        /// SF Symbols's name：w.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wCircleFill = "w.circle.fill"

        /// SF Symbols's name：w.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wSquare = "w.square"

        /// SF Symbols's name：w.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wSquareFill = "w.square.fill"

        /// SF Symbols's name：wand.and.rays
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wandAndRays = "wand.and.rays"

        /// SF Symbols's name：wand.and.rays.inverse
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wandAndRaysInverse = "wand.and.rays.inverse"

        /// SF Symbols's name：wand.and.stars
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wandAndStars = "wand.and.stars"

        /// SF Symbols's name：wand.and.stars.inverse
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wandAndStarsInverse = "wand.and.stars.inverse"

        /// SF Symbols's name：waveform
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveform = "waveform"

        /// SF Symbols's name：waveform.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveformCircle = "waveform.circle"

        /// SF Symbols's name：waveform.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveformCircleFill = "waveform.circle.fill"

        /// SF Symbols's name：waveform.path
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveformPath = "waveform.path"

        /// SF Symbols's name：waveform.path.badge.minus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveformPathBadgeMinus = "waveform.path.badge.minus"

        /// SF Symbols's name：waveform.path.badge.plus
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveformPathBadgePlus = "waveform.path.badge.plus"

        /// SF Symbols's name：waveform.path.ecg
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case waveformPathEcg = "waveform.path.ecg"

        /// SF Symbols's name：wifi
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wifi = "wifi"

        /// SF Symbols's name：wifi.exclamationmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wifiExclamationmark = "wifi.exclamationmark"

        /// SF Symbols's name：wifi.slash
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wifiSlash = "wifi.slash"

        /// SF Symbols's name：wind
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wind = "wind"

        /// SF Symbols's name：wind.snow
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case windSnow = "wind.snow"

        /// SF Symbols's name：wonsign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wonsignCircle = "wonsign.circle"

        /// SF Symbols's name：wonsign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wonsignCircleFill = "wonsign.circle.fill"

        /// SF Symbols's name：wonsign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wonsignSquare = "wonsign.square"

        /// SF Symbols's name：wonsign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wonsignSquareFill = "wonsign.square.fill"

        /// SF Symbols's name：wrench
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wrench = "wrench"

        /// SF Symbols's name：wrench.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case wrenchFill = "wrench.fill"

        /// SF Symbols's name：x.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xCircle = "x.circle"

        /// SF Symbols's name：x.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xCircleFill = "x.circle.fill"

        /// SF Symbols's name：x.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xSquare = "x.square"

        /// SF Symbols's name：x.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xSquareFill = "x.square.fill"

        /// SF Symbols's name：x.squareroot
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xSquareroot = "x.squareroot"

        /// SF Symbols's name：xmark
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmark = "xmark"

        /// SF Symbols's name：xmark.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkCircle = "xmark.circle"

        /// SF Symbols's name：xmark.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkCircleFill = "xmark.circle.fill"

        /// SF Symbols's name：xmark.icloud
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkIcloud = "xmark.icloud"

        /// SF Symbols's name：xmark.icloud.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkIcloudFill = "xmark.icloud.fill"

        /// SF Symbols's name：xmark.octagon
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkOctagon = "xmark.octagon"

        /// SF Symbols's name：xmark.octagon.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkOctagonFill = "xmark.octagon.fill"

        /// SF Symbols's name：xmark.rectangle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkRectangle = "xmark.rectangle"

        /// SF Symbols's name：xmark.rectangle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkRectangleFill = "xmark.rectangle.fill"

        /// SF Symbols's name：xmark.seal
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkSeal = "xmark.seal"

        /// SF Symbols's name：xmark.seal.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkSealFill = "xmark.seal.fill"

        /// SF Symbols's name：xmark.shield
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkShield = "xmark.shield"

        /// SF Symbols's name：xmark.shield.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkShieldFill = "xmark.shield.fill"

        /// SF Symbols's name：xmark.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkSquare = "xmark.square"

        /// SF Symbols's name：xmark.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case xmarkSquareFill = "xmark.square.fill"

        /// SF Symbols's name：y.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case yCircle = "y.circle"

        /// SF Symbols's name：y.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case yCircleFill = "y.circle.fill"

        /// SF Symbols's name：y.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ySquare = "y.square"

        /// SF Symbols's name：y.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case ySquareFill = "y.square.fill"

        /// SF Symbols's name：yensign.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case yensignCircle = "yensign.circle"

        /// SF Symbols's name：yensign.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case yensignCircleFill = "yensign.circle.fill"

        /// SF Symbols's name：yensign.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case yensignSquare = "yensign.square"

        /// SF Symbols's name：yensign.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case yensignSquareFill = "yensign.square.fill"

        /// SF Symbols's name：z.circle
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case zCircle = "z.circle"

        /// SF Symbols's name：z.circle.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case zCircleFill = "z.circle.fill"

        /// SF Symbols's name：z.square
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case zSquare = "z.square"

        /// SF Symbols's name：z.square.fill
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case zSquareFill = "z.square.fill"

        /// SF Symbols's name：zzz
        @available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *)
        case zzz = "zzz"

        /// SF Symbols's name：arrow.uturn.left.circle.badge.ellipsis
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case arrowUturnLeftCircleBadgeEllipsis = "arrow.uturn.left.circle.badge.ellipsis"

        /// SF Symbols's name：aspectratio
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case aspectratio = "aspectratio"

        /// SF Symbols's name：aspectratio.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case aspectratioFill = "aspectratio.fill"

        /// SF Symbols's name：car
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case car = "car"

        /// SF Symbols's name：circle.grid.2x2
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case circleGrid2x2 = "circle.grid.2x2"

        /// SF Symbols's name：circle.grid.2x2.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case circleGrid2x2Fill = "circle.grid.2x2.fill"

        /// SF Symbols's name：flashlight.off.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case flashlightOffFill = "flashlight.off.fill"

        /// SF Symbols's name：flashlight.on.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case flashlightOnFill = "flashlight.on.fill"

        /// SF Symbols's name：flip.horizontal
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case flipHorizontal = "flip.horizontal"

        /// SF Symbols's name：flip.horizontal.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case flipHorizontalFill = "flip.horizontal.fill"

        /// SF Symbols's name：mappin.circle
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case mappinCircle = "mappin.circle"

        /// SF Symbols's name：mappin.circle.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case mappinCircleFill = "mappin.circle.fill"

        /// SF Symbols's name：paperclip.circle
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case paperclipCircle = "paperclip.circle"

        /// SF Symbols's name：paperclip.circle.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case paperclipCircleFill = "paperclip.circle.fill"

        /// SF Symbols's name：pin.circle
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case pinCircle = "pin.circle"

        /// SF Symbols's name：pin.circle.fill
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case pinCircleFill = "pin.circle.fill"

        /// SF Symbols's name：scissors.badge.ellipsis
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case scissorsBadgeEllipsis = "scissors.badge.ellipsis"

        /// SF Symbols's name：studentdesk
        @available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *)
        case studentdesk = "studentdesk"

        /// SF Symbols's name：1.magnifyingglass.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case _1MagnifyingglassAr = "1.magnifyingglass.ar"

        /// SF Symbols's name：4k.tv
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case _4kTv = "4k.tv"

        /// SF Symbols's name：4k.tv.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case _4kTvFill = "4k.tv.fill"

        /// SF Symbols's name：a.book.closed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosed = "a.book.closed"

        /// SF Symbols's name：a.book.closed.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedAr = "a.book.closed.ar"

        /// SF Symbols's name：a.book.closed.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFill = "a.book.closed.fill"

        /// SF Symbols's name：a.book.closed.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillAr = "a.book.closed.fill.ar"

        /// SF Symbols's name：a.book.closed.fill.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillHe = "a.book.closed.fill.he"

        /// SF Symbols's name：a.book.closed.fill.hi
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillHi = "a.book.closed.fill.hi"

        /// SF Symbols's name：a.book.closed.fill.ja
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillJa = "a.book.closed.fill.ja"

        /// SF Symbols's name：a.book.closed.fill.ko
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillKo = "a.book.closed.fill.ko"

        /// SF Symbols's name：a.book.closed.fill.th
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillTh = "a.book.closed.fill.th"

        /// SF Symbols's name：a.book.closed.fill.zh
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedFillZh = "a.book.closed.fill.zh"

        /// SF Symbols's name：a.book.closed.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedHe = "a.book.closed.he"

        /// SF Symbols's name：a.book.closed.hi
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedHi = "a.book.closed.hi"

        /// SF Symbols's name：a.book.closed.ja
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedJa = "a.book.closed.ja"

        /// SF Symbols's name：a.book.closed.ko
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedKo = "a.book.closed.ko"

        /// SF Symbols's name：a.book.closed.th
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedTh = "a.book.closed.th"

        /// SF Symbols's name：a.book.closed.zh
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aBookClosedZh = "a.book.closed.zh"

        /// SF Symbols's name：a.magnify
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case aMagnify = "a.magnify"

        /// SF Symbols's name：abc
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case abc = "abc"

        /// SF Symbols's name：airplane.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airplaneCircle = "airplane.circle"

        /// SF Symbols's name：airplane.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airplaneCircleFill = "airplane.circle.fill"

        /// SF Symbols's name：airpod.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airpodLeft = "airpod.left"

        /// SF Symbols's name：airpod.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airpodRight = "airpod.right"

        /// SF Symbols's name：airpodpro.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airpodproLeft = "airpodpro.left"

        /// SF Symbols's name：airpodpro.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airpodproRight = "airpodpro.right"

        /// SF Symbols's name：airpods
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airpods = "airpods"

        /// SF Symbols's name：airpodspro
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airpodspro = "airpodspro"

        /// SF Symbols's name：airport.express
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airportExpress = "airport.express"

        /// SF Symbols's name：airport.extreme
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airportExtreme = "airport.extreme"

        /// SF Symbols's name：airport.extreme.tower
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case airportExtremeTower = "airport.extreme.tower"

        /// SF Symbols's name：amplifier
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case amplifier = "amplifier"

        /// SF Symbols's name：appclip
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appclip = "appclip"

        /// SF Symbols's name：applelogo
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applelogo = "applelogo"

        /// SF Symbols's name：applescript
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applescript = "applescript"

        /// SF Symbols's name：applescript.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applescriptFill = "applescript.fill"

        /// SF Symbols's name：appletv
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appletv = "appletv"

        /// SF Symbols's name：appletv.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appletvFill = "appletv.fill"

        /// SF Symbols's name：applewatch
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applewatch = "applewatch"

        /// SF Symbols's name：applewatch.radiowaves.left.and.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applewatchRadiowavesLeftAndRight = "applewatch.radiowaves.left.and.right"

        /// SF Symbols's name：applewatch.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applewatchSlash = "applewatch.slash"

        /// SF Symbols's name：applewatch.watchface
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case applewatchWatchface = "applewatch.watchface"

        /// SF Symbols's name：apps.ipad
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appsIpad = "apps.ipad"

        /// SF Symbols's name：apps.ipad.landscape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appsIpadLandscape = "apps.ipad.landscape"

        /// SF Symbols's name：apps.iphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appsIphone = "apps.iphone"

        /// SF Symbols's name：apps.iphone.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appsIphoneBadgePlus = "apps.iphone.badge.plus"

        /// SF Symbols's name：apps.iphone.landscape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appsIphoneLandscape = "apps.iphone.landscape"

        /// SF Symbols's name：apps.iphone.landscape.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case appsIphoneLandscapeRtl = "apps.iphone.landscape.rtl"

        /// SF Symbols's name：archivebox.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case archiveboxCircle = "archivebox.circle"

        /// SF Symbols's name：archivebox.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case archiveboxCircleFill = "archivebox.circle.fill"

        /// SF Symbols's name：arrow.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowBackward = "arrow.backward"

        /// SF Symbols's name：arrow.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowBackwardCircle = "arrow.backward.circle"

        /// SF Symbols's name：arrow.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowBackwardCircleFill = "arrow.backward.circle.fill"

        /// SF Symbols's name：arrow.backward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowBackwardSquare = "arrow.backward.square"

        /// SF Symbols's name：arrow.backward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowBackwardSquareFill = "arrow.backward.square.fill"

        /// SF Symbols's name：arrow.clockwise.heart
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowClockwiseHeart = "arrow.clockwise.heart"

        /// SF Symbols's name：arrow.clockwise.heart.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowClockwiseHeartFill = "arrow.clockwise.heart.fill"

        /// SF Symbols's name：arrow.down.app
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownApp = "arrow.down.app"

        /// SF Symbols's name：arrow.down.app.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownAppFill = "arrow.down.app.fill"

        /// SF Symbols's name：arrow.down.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownBackward = "arrow.down.backward"

        /// SF Symbols's name：arrow.down.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownBackwardCircle = "arrow.down.backward.circle"

        /// SF Symbols's name：arrow.down.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownBackwardCircleFill = "arrow.down.backward.circle.fill"

        /// SF Symbols's name：arrow.down.backward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownBackwardSquare = "arrow.down.backward.square"

        /// SF Symbols's name：arrow.down.backward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownBackwardSquareFill = "arrow.down.backward.square.fill"

        /// SF Symbols's name：arrow.down.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForward = "arrow.down.forward"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardAndArrowUpBackward = "arrow.down.forward.and.arrow.up.backward"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardAndArrowUpBackwardCircle = "arrow.down.forward.and.arrow.up.backward.circle"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardAndArrowUpBackwardCircleFill = "arrow.down.forward.and.arrow.up.backward.circle.fill"

        /// SF Symbols's name：arrow.down.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardCircle = "arrow.down.forward.circle"

        /// SF Symbols's name：arrow.down.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardCircleFill = "arrow.down.forward.circle.fill"

        /// SF Symbols's name：arrow.down.forward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardSquare = "arrow.down.forward.square"

        /// SF Symbols's name：arrow.down.forward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownForwardSquareFill = "arrow.down.forward.square.fill"

        /// SF Symbols's name：arrow.down.heart
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownHeart = "arrow.down.heart"

        /// SF Symbols's name：arrow.down.heart.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownHeartFill = "arrow.down.heart.fill"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownRightAndArrowUpLeftCircle = "arrow.down.right.and.arrow.up.left.circle"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowDownRightAndArrowUpLeftCircleFill = "arrow.down.right.and.arrow.up.left.circle.fill"

        /// SF Symbols's name：arrow.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowForward = "arrow.forward"

        /// SF Symbols's name：arrow.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowForwardCircle = "arrow.forward.circle"

        /// SF Symbols's name：arrow.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowForwardCircleFill = "arrow.forward.circle.fill"

        /// SF Symbols's name：arrow.forward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowForwardSquare = "arrow.forward.square"

        /// SF Symbols's name：arrow.forward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowForwardSquareFill = "arrow.forward.square.fill"

        /// SF Symbols's name：arrow.left.and.right.righttriangle.left.righttriangle.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftAndRightRighttriangleLeftRighttriangleRight = "arrow.left.and.right.righttriangle.left.righttriangle.right"

        /// SF Symbols's name：arrow.left.and.right.righttriangle.left.righttriangle.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftAndRightRighttriangleLeftRighttriangleRightFill = "arrow.left.and.right.righttriangle.left.righttriangle.right.fill"

        /// SF Symbols's name：arrow.left.arrow.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftArrowRight = "arrow.left.arrow.right"

        /// SF Symbols's name：arrow.left.arrow.right.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftArrowRightCircle = "arrow.left.arrow.right.circle"

        /// SF Symbols's name：arrow.left.arrow.right.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftArrowRightCircleFill = "arrow.left.arrow.right.circle.fill"

        /// SF Symbols's name：arrow.left.arrow.right.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftArrowRightSquare = "arrow.left.arrow.right.square"

        /// SF Symbols's name：arrow.left.arrow.right.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowLeftArrowRightSquareFill = "arrow.left.arrow.right.square.fill"

        /// SF Symbols's name：arrow.rectanglepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowRectanglepath = "arrow.rectanglepath"

        /// SF Symbols's name：arrow.right.doc.on.clipboard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowRightDocOnClipboard = "arrow.right.doc.on.clipboard"

        /// SF Symbols's name：arrow.triangle.2.circlepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangle2Circlepath = "arrow.triangle.2.circlepath"

        /// SF Symbols's name：arrow.triangle.2.circlepath.camera
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangle2CirclepathCamera = "arrow.triangle.2.circlepath.camera"

        /// SF Symbols's name：arrow.triangle.2.circlepath.camera.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangle2CirclepathCameraFill = "arrow.triangle.2.circlepath.camera.fill"

        /// SF Symbols's name：arrow.triangle.2.circlepath.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangle2CirclepathCircle = "arrow.triangle.2.circlepath.circle"

        /// SF Symbols's name：arrow.triangle.2.circlepath.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangle2CirclepathCircleFill = "arrow.triangle.2.circlepath.circle.fill"

        /// SF Symbols's name：arrow.triangle.2.circlepath.doc.on.clipboard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangle2CirclepathDocOnClipboard = "arrow.triangle.2.circlepath.doc.on.clipboard"

        /// SF Symbols's name：arrow.triangle.branch
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleBranch = "arrow.triangle.branch"

        /// SF Symbols's name：arrow.triangle.capsulepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleCapsulepath = "arrow.triangle.capsulepath"

        /// SF Symbols's name：arrow.triangle.merge
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleMerge = "arrow.triangle.merge"

        /// SF Symbols's name：arrow.triangle.pull
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTrianglePull = "arrow.triangle.pull"

        /// SF Symbols's name：arrow.triangle.swap
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleSwap = "arrow.triangle.swap"

        /// SF Symbols's name：arrow.triangle.turn.up.right.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleTurnUpRightCircle = "arrow.triangle.turn.up.right.circle"

        /// SF Symbols's name：arrow.triangle.turn.up.right.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleTurnUpRightCircleFill = "arrow.triangle.turn.up.right.circle.fill"

        /// SF Symbols's name：arrow.triangle.turn.up.right.diamond
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleTurnUpRightDiamond = "arrow.triangle.turn.up.right.diamond"

        /// SF Symbols's name：arrow.triangle.turn.up.right.diamond.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTriangleTurnUpRightDiamondFill = "arrow.triangle.turn.up.right.diamond.fill"

        /// SF Symbols's name：arrow.turn.up.forward.iphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTurnUpForwardIphone = "arrow.turn.up.forward.iphone"

        /// SF Symbols's name：arrow.turn.up.forward.iphone.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowTurnUpForwardIphoneFill = "arrow.turn.up.forward.iphone.fill"

        /// SF Symbols's name：arrow.up.and.down.and.arrow.left.and.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpAndDownAndArrowLeftAndRight = "arrow.up.and.down.and.arrow.left.and.right"

        /// SF Symbols's name：arrow.up.and.down.righttriangle.up.fill.righttriangle.down.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpAndDownRighttriangleUpFillRighttriangleDownFill = "arrow.up.and.down.righttriangle.up.fill.righttriangle.down.fill"

        /// SF Symbols's name：arrow.up.and.down.righttriangle.up.righttriangle.down
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpAndDownRighttriangleUpRighttriangleDown = "arrow.up.and.down.righttriangle.up.righttriangle.down"

        /// SF Symbols's name：arrow.up.and.person.rectangle.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpAndPersonRectanglePortrait = "arrow.up.and.person.rectangle.portrait"

        /// SF Symbols's name：arrow.up.and.person.rectangle.turn.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpAndPersonRectangleTurnLeft = "arrow.up.and.person.rectangle.turn.left"

        /// SF Symbols's name：arrow.up.and.person.rectangle.turn.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpAndPersonRectangleTurnRight = "arrow.up.and.person.rectangle.turn.right"

        /// SF Symbols's name：arrow.up.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackward = "arrow.up.backward"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardAndArrowDownForward = "arrow.up.backward.and.arrow.down.forward"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardAndArrowDownForwardCircle = "arrow.up.backward.and.arrow.down.forward.circle"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardAndArrowDownForwardCircleFill = "arrow.up.backward.and.arrow.down.forward.circle.fill"

        /// SF Symbols's name：arrow.up.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardCircle = "arrow.up.backward.circle"

        /// SF Symbols's name：arrow.up.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardCircleFill = "arrow.up.backward.circle.fill"

        /// SF Symbols's name：arrow.up.backward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardSquare = "arrow.up.backward.square"

        /// SF Symbols's name：arrow.up.backward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpBackwardSquareFill = "arrow.up.backward.square.fill"

        /// SF Symbols's name：arrow.up.doc.on.clipboard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpDocOnClipboard = "arrow.up.doc.on.clipboard"

        /// SF Symbols's name：arrow.up.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForward = "arrow.up.forward"

        /// SF Symbols's name：arrow.up.forward.app
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForwardApp = "arrow.up.forward.app"

        /// SF Symbols's name：arrow.up.forward.app.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForwardAppFill = "arrow.up.forward.app.fill"

        /// SF Symbols's name：arrow.up.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForwardCircle = "arrow.up.forward.circle"

        /// SF Symbols's name：arrow.up.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForwardCircleFill = "arrow.up.forward.circle.fill"

        /// SF Symbols's name：arrow.up.forward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForwardSquare = "arrow.up.forward.square"

        /// SF Symbols's name：arrow.up.forward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpForwardSquareFill = "arrow.up.forward.square.fill"

        /// SF Symbols's name：arrow.up.heart
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpHeart = "arrow.up.heart"

        /// SF Symbols's name：arrow.up.heart.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpHeartFill = "arrow.up.heart.fill"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpLeftAndArrowDownRightCircle = "arrow.up.left.and.arrow.down.right.circle"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpLeftAndArrowDownRightCircleFill = "arrow.up.left.and.arrow.down.right.circle.fill"

        /// SF Symbols's name：arrow.up.left.and.down.right.and.arrow.up.right.and.down.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpLeftAndDownRightAndArrowUpRightAndDownLeft = "arrow.up.left.and.down.right.and.arrow.up.right.and.down.left"

        /// SF Symbols's name：arrow.up.left.and.down.right.magnifyingglass
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpLeftAndDownRightMagnifyingglass = "arrow.up.left.and.down.right.magnifyingglass"

        /// SF Symbols's name：arrow.up.message
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpMessage = "arrow.up.message"

        /// SF Symbols's name：arrow.up.message.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpMessageFill = "arrow.up.message.fill"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpRightAndArrowDownLeftRectangle = "arrow.up.right.and.arrow.down.left.rectangle"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left.rectangle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUpRightAndArrowDownLeftRectangleFill = "arrow.up.right.and.arrow.down.left.rectangle.fill"

        /// SF Symbols's name：arrow.uturn.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnBackward = "arrow.uturn.backward"

        /// SF Symbols's name：arrow.uturn.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnBackwardCircle = "arrow.uturn.backward.circle"

        /// SF Symbols's name：arrow.uturn.backward.circle.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnBackwardCircleBadgeEllipsis = "arrow.uturn.backward.circle.badge.ellipsis"

        /// SF Symbols's name：arrow.uturn.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnBackwardCircleFill = "arrow.uturn.backward.circle.fill"

        /// SF Symbols's name：arrow.uturn.backward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnBackwardSquare = "arrow.uturn.backward.square"

        /// SF Symbols's name：arrow.uturn.backward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnBackwardSquareFill = "arrow.uturn.backward.square.fill"

        /// SF Symbols's name：arrow.uturn.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnForward = "arrow.uturn.forward"

        /// SF Symbols's name：arrow.uturn.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnForwardCircle = "arrow.uturn.forward.circle"

        /// SF Symbols's name：arrow.uturn.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnForwardCircleFill = "arrow.uturn.forward.circle.fill"

        /// SF Symbols's name：arrow.uturn.forward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnForwardSquare = "arrow.uturn.forward.square"

        /// SF Symbols's name：arrow.uturn.forward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowUturnForwardSquareFill = "arrow.uturn.forward.square.fill"

        /// SF Symbols's name：arrowshape.bounce.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeBounceForward = "arrowshape.bounce.forward"

        /// SF Symbols's name：arrowshape.bounce.forward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeBounceForwardFill = "arrowshape.bounce.forward.fill"

        /// SF Symbols's name：arrowshape.bounce.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeBounceRight = "arrowshape.bounce.right"

        /// SF Symbols's name：arrowshape.bounce.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeBounceRightFill = "arrowshape.bounce.right.fill"

        /// SF Symbols's name：arrowshape.turn.up.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackward = "arrowshape.turn.up.backward"

        /// SF Symbols's name：arrowshape.turn.up.backward.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackward2 = "arrowshape.turn.up.backward.2"

        /// SF Symbols's name：arrowshape.turn.up.backward.2.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackward2Circle = "arrowshape.turn.up.backward.2.circle"

        /// SF Symbols's name：arrowshape.turn.up.backward.2.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackward2CircleFill = "arrowshape.turn.up.backward.2.circle.fill"

        /// SF Symbols's name：arrowshape.turn.up.backward.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackward2Fill = "arrowshape.turn.up.backward.2.fill"

        /// SF Symbols's name：arrowshape.turn.up.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackwardCircle = "arrowshape.turn.up.backward.circle"

        /// SF Symbols's name：arrowshape.turn.up.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackwardCircleFill = "arrowshape.turn.up.backward.circle.fill"

        /// SF Symbols's name：arrowshape.turn.up.backward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpBackwardFill = "arrowshape.turn.up.backward.fill"

        /// SF Symbols's name：arrowshape.turn.up.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpForward = "arrowshape.turn.up.forward"

        /// SF Symbols's name：arrowshape.turn.up.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpForwardCircle = "arrowshape.turn.up.forward.circle"

        /// SF Symbols's name：arrowshape.turn.up.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpForwardCircleFill = "arrowshape.turn.up.forward.circle.fill"

        /// SF Symbols's name：arrowshape.turn.up.forward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpForwardFill = "arrowshape.turn.up.forward.fill"

        /// SF Symbols's name：arrowshape.turn.up.left.2.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpLeft2Circle = "arrowshape.turn.up.left.2.circle"

        /// SF Symbols's name：arrowshape.turn.up.left.2.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeTurnUpLeft2CircleFill = "arrowshape.turn.up.left.2.circle.fill"

        /// SF Symbols's name：arrowshape.zigzag.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeZigzagForward = "arrowshape.zigzag.forward"

        /// SF Symbols's name：arrowshape.zigzag.forward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeZigzagForwardFill = "arrowshape.zigzag.forward.fill"

        /// SF Symbols's name：arrowshape.zigzag.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeZigzagRight = "arrowshape.zigzag.right"

        /// SF Symbols's name：arrowshape.zigzag.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowshapeZigzagRightFill = "arrowshape.zigzag.right.fill"

        /// SF Symbols's name：arrowtriangle.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleBackward = "arrowtriangle.backward"

        /// SF Symbols's name：arrowtriangle.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleBackwardCircle = "arrowtriangle.backward.circle"

        /// SF Symbols's name：arrowtriangle.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleBackwardCircleFill = "arrowtriangle.backward.circle.fill"

        /// SF Symbols's name：arrowtriangle.backward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleBackwardFill = "arrowtriangle.backward.fill"

        /// SF Symbols's name：arrowtriangle.backward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleBackwardSquare = "arrowtriangle.backward.square"

        /// SF Symbols's name：arrowtriangle.backward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleBackwardSquareFill = "arrowtriangle.backward.square.fill"

        /// SF Symbols's name：arrowtriangle.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleForward = "arrowtriangle.forward"

        /// SF Symbols's name：arrowtriangle.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleForwardCircle = "arrowtriangle.forward.circle"

        /// SF Symbols's name：arrowtriangle.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleForwardCircleFill = "arrowtriangle.forward.circle.fill"

        /// SF Symbols's name：arrowtriangle.forward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleForwardFill = "arrowtriangle.forward.fill"

        /// SF Symbols's name：arrowtriangle.forward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleForwardSquare = "arrowtriangle.forward.square"

        /// SF Symbols's name：arrowtriangle.forward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleForwardSquareFill = "arrowtriangle.forward.square.fill"

        /// SF Symbols's name：arrowtriangle.left.and.line.vertical.and.arrowtriangle.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleLeftAndLineVerticalAndArrowtriangleRight = "arrowtriangle.left.and.line.vertical.and.arrowtriangle.right"

        /// SF Symbols's name：arrowtriangle.left.fill.and.line.vertical.and.arrowtriangle.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleLeftFillAndLineVerticalAndArrowtriangleRightFill = "arrowtriangle.left.fill.and.line.vertical.and.arrowtriangle.right.fill"

        /// SF Symbols's name：arrowtriangle.right.and.line.vertical.and.arrowtriangle.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleRightAndLineVerticalAndArrowtriangleLeft = "arrowtriangle.right.and.line.vertical.and.arrowtriangle.left"

        /// SF Symbols's name：arrowtriangle.right.fill.and.line.vertical.and.arrowtriangle.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case arrowtriangleRightFillAndLineVerticalAndArrowtriangleLeftFill = "arrowtriangle.right.fill.and.line.vertical.and.arrowtriangle.left.fill"

        /// SF Symbols's name：at.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case atCircle = "at.circle"

        /// SF Symbols's name：at.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case atCircleFill = "at.circle.fill"

        /// SF Symbols's name：atom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case atom = "atom"

        /// SF Symbols's name：backward.frame
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case backwardFrame = "backward.frame"

        /// SF Symbols's name：backward.frame.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case backwardFrameFill = "backward.frame.fill"

        /// SF Symbols's name：badge.plus.radiowaves.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case badgePlusRadiowavesForward = "badge.plus.radiowaves.forward"

        /// SF Symbols's name：bag.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bagCircle = "bag.circle"

        /// SF Symbols's name：bag.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bagCircleFill = "bag.circle.fill"

        /// SF Symbols's name：banknote
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case banknote = "banknote"

        /// SF Symbols's name：banknote.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case banknoteFill = "banknote.fill"

        /// SF Symbols's name：barometer
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case barometer = "barometer"

        /// SF Symbols's name：battery.100.bolt
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case battery100Bolt = "battery.100.bolt"

        /// SF Symbols's name：battery.100.bolt.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case battery100BoltRtl = "battery.100.bolt.rtl"

        /// SF Symbols's name：bell.badge
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bellBadge = "bell.badge"

        /// SF Symbols's name：bell.badge.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bellBadgeFill = "bell.badge.fill"

        /// SF Symbols's name：bell.slash.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bellSlashCircle = "bell.slash.circle"

        /// SF Symbols's name：bell.slash.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bellSlashCircleFill = "bell.slash.circle.fill"

        /// SF Symbols's name：bicycle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bicycle = "bicycle"

        /// SF Symbols's name：bicycle.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bicycleCircle = "bicycle.circle"

        /// SF Symbols's name：bicycle.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bicycleCircleFill = "bicycle.circle.fill"

        /// SF Symbols's name：binoculars
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case binoculars = "binoculars"

        /// SF Symbols's name：binoculars.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case binocularsFill = "binoculars.fill"

        /// SF Symbols's name：bolt.car
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltCar = "bolt.car"

        /// SF Symbols's name：bolt.car.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltCarFill = "bolt.car.fill"

        /// SF Symbols's name：bolt.fill.batteryblock
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltFillBatteryblock = "bolt.fill.batteryblock"

        /// SF Symbols's name：bolt.fill.batteryblock.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltFillBatteryblockFill = "bolt.fill.batteryblock.fill"

        /// SF Symbols's name：bolt.heart
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltHeart = "bolt.heart"

        /// SF Symbols's name：bolt.heart.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltHeartFill = "bolt.heart.fill"

        /// SF Symbols's name：bolt.slash.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltSlashCircle = "bolt.slash.circle"

        /// SF Symbols's name：bolt.slash.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case boltSlashCircleFill = "bolt.slash.circle.fill"

        /// SF Symbols's name：bonjour
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bonjour = "bonjour"

        /// SF Symbols's name：book.closed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bookClosed = "book.closed"

        /// SF Symbols's name：book.closed.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bookClosedFill = "book.closed.fill"

        /// SF Symbols's name：bookmark.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bookmarkCircle = "bookmark.circle"

        /// SF Symbols's name：bookmark.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bookmarkCircleFill = "bookmark.circle.fill"

        /// SF Symbols's name：bookmark.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bookmarkSlash = "bookmark.slash"

        /// SF Symbols's name：bookmark.slash.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bookmarkSlashFill = "bookmark.slash.fill"

        /// SF Symbols's name：books.vertical
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case booksVertical = "books.vertical"

        /// SF Symbols's name：books.vertical.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case booksVerticalFill = "books.vertical.fill"

        /// SF Symbols's name：building
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case building = "building"

        /// SF Symbols's name：building.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case building2 = "building.2"

        /// SF Symbols's name：building.2.crop.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case building2CropCircle = "building.2.crop.circle"

        /// SF Symbols's name：building.2.crop.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case building2CropCircleFill = "building.2.crop.circle.fill"

        /// SF Symbols's name：building.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case building2Fill = "building.2.fill"

        /// SF Symbols's name：building.columns
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case buildingColumns = "building.columns"

        /// SF Symbols's name：building.columns.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case buildingColumnsFill = "building.columns.fill"

        /// SF Symbols's name：building.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case buildingFill = "building.fill"

        /// SF Symbols's name：bus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case bus = "bus"

        /// SF Symbols's name：bus.doubledecker
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case busDoubledecker = "bus.doubledecker"

        /// SF Symbols's name：bus.doubledecker.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case busDoubledeckerFill = "bus.doubledecker.fill"

        /// SF Symbols's name：bus.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case busFill = "bus.fill"

        /// SF Symbols's name：calendar.badge.clock
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case calendarBadgeClock = "calendar.badge.clock"

        /// SF Symbols's name：calendar.badge.clock.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case calendarBadgeClockRtl = "calendar.badge.clock.rtl"

        /// SF Symbols's name：calendar.badge.exclamationmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case calendarBadgeExclamationmark = "calendar.badge.exclamationmark"

        /// SF Symbols's name：camera.aperture
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraAperture = "camera.aperture"

        /// SF Symbols's name：camera.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraBadgeEllipsis = "camera.badge.ellipsis"

        /// SF Symbols's name：camera.fill.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraFillBadgeEllipsis = "camera.fill.badge.ellipsis"

        /// SF Symbols's name：camera.filters
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraFilters = "camera.filters"

        /// SF Symbols's name：camera.metering.center.weighted
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringCenterWeighted = "camera.metering.center.weighted"

        /// SF Symbols's name：camera.metering.center.weighted.average
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringCenterWeightedAverage = "camera.metering.center.weighted.average"

        /// SF Symbols's name：camera.metering.matrix
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringMatrix = "camera.metering.matrix"

        /// SF Symbols's name：camera.metering.multispot
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringMultispot = "camera.metering.multispot"

        /// SF Symbols's name：camera.metering.none
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringNone = "camera.metering.none"

        /// SF Symbols's name：camera.metering.partial
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringPartial = "camera.metering.partial"

        /// SF Symbols's name：camera.metering.spot
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringSpot = "camera.metering.spot"

        /// SF Symbols's name：camera.metering.unknown
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringUnknown = "camera.metering.unknown"

        /// SF Symbols's name：camera.metering.unknown.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cameraMeteringUnknownAr = "camera.metering.unknown.ar"

        /// SF Symbols's name：candybarphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case candybarphone = "candybarphone"

        /// SF Symbols's name：capsule.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case capsulePortrait = "capsule.portrait"

        /// SF Symbols's name：capsule.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case capsulePortraitFill = "capsule.portrait.fill"

        /// SF Symbols's name：car.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case car2 = "car.2"

        /// SF Symbols's name：car.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case car2Fill = "car.2.fill"

        /// SF Symbols's name：car.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case carCircle = "car.circle"

        /// SF Symbols's name：car.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case carCircleFill = "car.circle.fill"

        /// SF Symbols's name：case
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case `case` = "case"

        /// SF Symbols's name：case.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case caseFill = "case.fill"

        /// SF Symbols's name：chart.bar.doc.horizontal
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chartBarDocHorizontal = "chart.bar.doc.horizontal"

        /// SF Symbols's name：chart.bar.doc.horizontal.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chartBarDocHorizontalFill = "chart.bar.doc.horizontal.fill"

        /// SF Symbols's name：chart.bar.xaxis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chartBarXaxis = "chart.bar.xaxis"

        /// SF Symbols's name：checkerboard.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case checkerboardRectangle = "checkerboard.rectangle"

        /// SF Symbols's name：checkmark.icloud
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case checkmarkIcloud = "checkmark.icloud"

        /// SF Symbols's name：checkmark.icloud.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case checkmarkIcloudFill = "checkmark.icloud.fill"

        /// SF Symbols's name：checkmark.rectangle.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case checkmarkRectanglePortrait = "checkmark.rectangle.portrait"

        /// SF Symbols's name：checkmark.rectangle.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case checkmarkRectanglePortraitFill = "checkmark.rectangle.portrait.fill"

        /// SF Symbols's name：chevron.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronBackward = "chevron.backward"

        /// SF Symbols's name：chevron.backward.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronBackward2 = "chevron.backward.2"

        /// SF Symbols's name：chevron.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronBackwardCircle = "chevron.backward.circle"

        /// SF Symbols's name：chevron.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronBackwardCircleFill = "chevron.backward.circle.fill"

        /// SF Symbols's name：chevron.backward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronBackwardSquare = "chevron.backward.square"

        /// SF Symbols's name：chevron.backward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronBackwardSquareFill = "chevron.backward.square.fill"

        /// SF Symbols's name：chevron.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronForward = "chevron.forward"

        /// SF Symbols's name：chevron.forward.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronForward2 = "chevron.forward.2"

        /// SF Symbols's name：chevron.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronForwardCircle = "chevron.forward.circle"

        /// SF Symbols's name：chevron.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronForwardCircleFill = "chevron.forward.circle.fill"

        /// SF Symbols's name：chevron.forward.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronForwardSquare = "chevron.forward.square"

        /// SF Symbols's name：chevron.forward.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case chevronForwardSquareFill = "chevron.forward.square.fill"

        /// SF Symbols's name：circle.bottomhalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleBottomhalfFill = "circle.bottomhalf.fill"

        /// SF Symbols's name：circle.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleCircle = "circle.circle"

        /// SF Symbols's name：circle.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleCircleFill = "circle.circle.fill"

        /// SF Symbols's name：circle.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleDashed = "circle.dashed"

        /// SF Symbols's name：circle.dashed.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleDashedInsetFill = "circle.dashed.inset.fill"

        /// SF Symbols's name：circle.fill.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleFillSquareFill = "circle.fill.square.fill"

        /// SF Symbols's name：circle.grid.cross
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleGridCross = "circle.grid.cross"

        /// SF Symbols's name：circle.grid.cross.down.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleGridCrossDownFill = "circle.grid.cross.down.fill"

        /// SF Symbols's name：circle.grid.cross.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleGridCrossFill = "circle.grid.cross.fill"

        /// SF Symbols's name：circle.grid.cross.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleGridCrossLeftFill = "circle.grid.cross.left.fill"

        /// SF Symbols's name：circle.grid.cross.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleGridCrossRightFill = "circle.grid.cross.right.fill"

        /// SF Symbols's name：circle.grid.cross.up.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleGridCrossUpFill = "circle.grid.cross.up.fill"

        /// SF Symbols's name：circle.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleSquare = "circle.square"

        /// SF Symbols's name：circle.tophalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circleTophalfFill = "circle.tophalf.fill"

        /// SF Symbols's name：circlebadge
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlebadge = "circlebadge"

        /// SF Symbols's name：circlebadge.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlebadge2 = "circlebadge.2"

        /// SF Symbols's name：circlebadge.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlebadge2Fill = "circlebadge.2.fill"

        /// SF Symbols's name：circlebadge.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlebadgeFill = "circlebadge.fill"

        /// SF Symbols's name：circles.hexagongrid
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlesHexagongrid = "circles.hexagongrid"

        /// SF Symbols's name：circles.hexagongrid.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlesHexagongridFill = "circles.hexagongrid.fill"

        /// SF Symbols's name：circles.hexagonpath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlesHexagonpath = "circles.hexagonpath"

        /// SF Symbols's name：circles.hexagonpath.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case circlesHexagonpathFill = "circles.hexagonpath.fill"

        /// SF Symbols's name：clock.arrow.circlepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case clockArrowCirclepath = "clock.arrow.circlepath"

        /// SF Symbols's name：comb
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case comb = "comb"

        /// SF Symbols's name：comb.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case combFill = "comb.fill"

        /// SF Symbols's name：command.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case commandCircle = "command.circle"

        /// SF Symbols's name：command.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case commandCircleFill = "command.circle.fill"

        /// SF Symbols's name：command.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case commandSquare = "command.square"

        /// SF Symbols's name：command.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case commandSquareFill = "command.square.fill"

        /// SF Symbols's name：cone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cone = "cone"

        /// SF Symbols's name：cone.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case coneFill = "cone.fill"

        /// SF Symbols's name：contextualmenu.and.cursorarrow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case contextualmenuAndCursorarrow = "contextualmenu.and.cursorarrow"

        /// SF Symbols's name：cpu
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cpu = "cpu"

        /// SF Symbols's name：creditcard.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case creditcardCircle = "creditcard.circle"

        /// SF Symbols's name：creditcard.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case creditcardCircleFill = "creditcard.circle.fill"

        /// SF Symbols's name：cross
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cross = "cross"

        /// SF Symbols's name：cross.case
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crossCase = "cross.case"

        /// SF Symbols's name：cross.case.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crossCaseFill = "cross.case.fill"

        /// SF Symbols's name：cross.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crossCircle = "cross.circle"

        /// SF Symbols's name：cross.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crossCircleFill = "cross.circle.fill"

        /// SF Symbols's name：cross.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crossFill = "cross.fill"

        /// SF Symbols's name：crown
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crown = "crown"

        /// SF Symbols's name：crown.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case crownFill = "crown.fill"

        /// SF Symbols's name：cube.transparent
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cubeTransparent = "cube.transparent"

        /// SF Symbols's name：cube.transparent.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cubeTransparentFill = "cube.transparent.fill"

        /// SF Symbols's name：curlybraces
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case curlybraces = "curlybraces"

        /// SF Symbols's name：curlybraces.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case curlybracesSquare = "curlybraces.square"

        /// SF Symbols's name：curlybraces.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case curlybracesSquareFill = "curlybraces.square.fill"

        /// SF Symbols's name：cursorarrow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrow = "cursorarrow"

        /// SF Symbols's name：cursorarrow.and.square.on.square.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowAndSquareOnSquareDashed = "cursorarrow.and.square.on.square.dashed"

        /// SF Symbols's name：cursorarrow.click
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowClick = "cursorarrow.click"

        /// SF Symbols's name：cursorarrow.click.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowClick2 = "cursorarrow.click.2"

        /// SF Symbols's name：cursorarrow.click.badge.clock
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowClickBadgeClock = "cursorarrow.click.badge.clock"

        /// SF Symbols's name：cursorarrow.motionlines
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowMotionlines = "cursorarrow.motionlines"

        /// SF Symbols's name：cursorarrow.motionlines.click
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowMotionlinesClick = "cursorarrow.motionlines.click"

        /// SF Symbols's name：cursorarrow.rays
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowRays = "cursorarrow.rays"

        /// SF Symbols's name：cursorarrow.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cursorarrowSquare = "cursorarrow.square"

        /// SF Symbols's name：cylinder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cylinder = "cylinder"

        /// SF Symbols's name：cylinder.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cylinderFill = "cylinder.fill"

        /// SF Symbols's name：cylinder.split.1x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cylinderSplit1x2 = "cylinder.split.1x2"

        /// SF Symbols's name：cylinder.split.1x2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case cylinderSplit1x2Fill = "cylinder.split.1x2.fill"

        /// SF Symbols's name：deskclock
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case deskclock = "deskclock"

        /// SF Symbols's name：deskclock.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case deskclockFill = "deskclock.fill"

        /// SF Symbols's name：dial.max
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dialMax = "dial.max"

        /// SF Symbols's name：dial.max.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dialMaxFill = "dial.max.fill"

        /// SF Symbols's name：dial.min
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dialMin = "dial.min"

        /// SF Symbols's name：dial.min.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dialMinFill = "dial.min.fill"

        /// SF Symbols's name：diamond
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case diamond = "diamond"

        /// SF Symbols's name：diamond.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case diamondFill = "diamond.fill"

        /// SF Symbols's name：die.face.1
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace1 = "die.face.1"

        /// SF Symbols's name：die.face.1.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace1Fill = "die.face.1.fill"

        /// SF Symbols's name：die.face.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace2 = "die.face.2"

        /// SF Symbols's name：die.face.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace2Fill = "die.face.2.fill"

        /// SF Symbols's name：die.face.3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace3 = "die.face.3"

        /// SF Symbols's name：die.face.3.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace3Fill = "die.face.3.fill"

        /// SF Symbols's name：die.face.4
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace4 = "die.face.4"

        /// SF Symbols's name：die.face.4.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace4Fill = "die.face.4.fill"

        /// SF Symbols's name：die.face.5
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace5 = "die.face.5"

        /// SF Symbols's name：die.face.5.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace5Fill = "die.face.5.fill"

        /// SF Symbols's name：die.face.6
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace6 = "die.face.6"

        /// SF Symbols's name：die.face.6.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dieFace6Fill = "die.face.6.fill"

        /// SF Symbols's name：display
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case display = "display"

        /// SF Symbols's name：display.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case display2 = "display.2"

        /// SF Symbols's name：display.trianglebadge.exclamationmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case displayTrianglebadgeExclamationmark = "display.trianglebadge.exclamationmark"

        /// SF Symbols's name：doc.append.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docAppendFill = "doc.append.fill"

        /// SF Symbols's name：doc.append.fill.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docAppendFillRtl = "doc.append.fill.rtl"

        /// SF Symbols's name：doc.append.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docAppendRtl = "doc.append.rtl"

        /// SF Symbols's name：doc.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docBadgeEllipsis = "doc.badge.ellipsis"

        /// SF Symbols's name：doc.badge.gearshape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docBadgeGearshape = "doc.badge.gearshape"

        /// SF Symbols's name：doc.badge.gearshape.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docBadgeGearshapeFill = "doc.badge.gearshape.fill"

        /// SF Symbols's name：doc.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docBadgePlus = "doc.badge.plus"

        /// SF Symbols's name：doc.fill.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docFillBadgeEllipsis = "doc.fill.badge.ellipsis"

        /// SF Symbols's name：doc.fill.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docFillBadgePlus = "doc.fill.badge.plus"

        /// SF Symbols's name：doc.plaintext.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docPlaintextFill = "doc.plaintext.fill"

        /// SF Symbols's name：doc.richtext.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docRichtextAr = "doc.richtext.ar"

        /// SF Symbols's name：doc.richtext.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docRichtextFill = "doc.richtext.fill"

        /// SF Symbols's name：doc.richtext.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docRichtextFillAr = "doc.richtext.fill.ar"

        /// SF Symbols's name：doc.richtext.fill.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docRichtextFillHe = "doc.richtext.fill.he"

        /// SF Symbols's name：doc.richtext.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docRichtextHe = "doc.richtext.he"

        /// SF Symbols's name：doc.text.below.ecg
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docTextBelowEcg = "doc.text.below.ecg"

        /// SF Symbols's name：doc.text.below.ecg.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docTextBelowEcgFill = "doc.text.below.ecg.fill"

        /// SF Symbols's name：doc.text.fill.viewfinder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docTextFillViewfinder = "doc.text.fill.viewfinder"

        /// SF Symbols's name：doc.zipper
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case docZipper = "doc.zipper"

        /// SF Symbols's name：dock.arrow.down.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dockArrowDownRectangle = "dock.arrow.down.rectangle"

        /// SF Symbols's name：dock.arrow.up.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dockArrowUpRectangle = "dock.arrow.up.rectangle"

        /// SF Symbols's name：dock.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dockRectangle = "dock.rectangle"

        /// SF Symbols's name：dot.arrowtriangles.up.right.down.left.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dotArrowtrianglesUpRightDownLeftCircle = "dot.arrowtriangles.up.right.down.left.circle"

        /// SF Symbols's name：dot.circle.and.cursorarrow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dotCircleAndCursorarrow = "dot.circle.and.cursorarrow"

        /// SF Symbols's name：dot.radiowaves.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dotRadiowavesForward = "dot.radiowaves.forward"

        /// SF Symbols's name：dot.squareshape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dotSquareshape = "dot.squareshape"

        /// SF Symbols's name：dot.squareshape.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dotSquareshapeFill = "dot.squareshape.fill"

        /// SF Symbols's name：dot.squareshape.split.2x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dotSquareshapeSplit2x2 = "dot.squareshape.split.2x2"

        /// SF Symbols's name：dpad
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dpad = "dpad"

        /// SF Symbols's name：dpad.down.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dpadDownFill = "dpad.down.fill"

        /// SF Symbols's name：dpad.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dpadFill = "dpad.fill"

        /// SF Symbols's name：dpad.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dpadLeftFill = "dpad.left.fill"

        /// SF Symbols's name：dpad.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dpadRightFill = "dpad.right.fill"

        /// SF Symbols's name：dpad.up.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dpadUpFill = "dpad.up.fill"

        /// SF Symbols's name：drop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case drop = "drop"

        /// SF Symbols's name：drop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case dropFill = "drop.fill"

        /// SF Symbols's name：ear.badge.checkmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case earBadgeCheckmark = "ear.badge.checkmark"

        /// SF Symbols's name：ear.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case earFill = "ear.fill"

        /// SF Symbols's name：ear.trianglebadge.exclamationmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case earTrianglebadgeExclamationmark = "ear.trianglebadge.exclamationmark"

        /// SF Symbols's name：earpods
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case earpods = "earpods"

        /// SF Symbols's name：eject.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ejectCircle = "eject.circle"

        /// SF Symbols's name：eject.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ejectCircleFill = "eject.circle.fill"

        /// SF Symbols's name：ellipsis.bubble
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ellipsisBubble = "ellipsis.bubble"

        /// SF Symbols's name：ellipsis.bubble.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ellipsisBubbleFill = "ellipsis.bubble.fill"

        /// SF Symbols's name：ellipsis.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ellipsisRectangle = "ellipsis.rectangle"

        /// SF Symbols's name：ellipsis.rectangle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ellipsisRectangleFill = "ellipsis.rectangle.fill"

        /// SF Symbols's name：envelope.arrow.triangle.branch
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case envelopeArrowTriangleBranch = "envelope.arrow.triangle.branch"

        /// SF Symbols's name：envelope.arrow.triangle.branch.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case envelopeArrowTriangleBranchFill = "envelope.arrow.triangle.branch.fill"

        /// SF Symbols's name：envelope.badge.shield.leadinghalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case envelopeBadgeShieldLeadinghalfFill = "envelope.badge.shield.leadinghalf.fill"

        /// SF Symbols's name：envelope.fill.badge.shield.trailinghalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case envelopeFillBadgeShieldTrailinghalfFill = "envelope.fill.badge.shield.trailinghalf.fill"

        /// SF Symbols's name：esim
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case esim = "esim"

        /// SF Symbols's name：esim.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case esimFill = "esim.fill"

        /// SF Symbols's name：exclamationmark.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case exclamationmark2 = "exclamationmark.2"

        /// SF Symbols's name：exclamationmark.3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case exclamationmark3 = "exclamationmark.3"

        /// SF Symbols's name：exclamationmark.arrow.circlepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case exclamationmarkArrowCirclepath = "exclamationmark.arrow.circlepath"

        /// SF Symbols's name：exclamationmark.arrow.triangle.2.circlepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case exclamationmarkArrowTriangle2Circlepath = "exclamationmark.arrow.triangle.2.circlepath"

        /// SF Symbols's name：externaldrive
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldrive = "externaldrive"

        /// SF Symbols's name：externaldrive.badge.checkmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgeCheckmark = "externaldrive.badge.checkmark"

        /// SF Symbols's name：externaldrive.badge.icloud
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgeIcloud = "externaldrive.badge.icloud"

        /// SF Symbols's name：externaldrive.badge.minus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgeMinus = "externaldrive.badge.minus"

        /// SF Symbols's name：externaldrive.badge.person.crop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgePersonCrop = "externaldrive.badge.person.crop"

        /// SF Symbols's name：externaldrive.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgePlus = "externaldrive.badge.plus"

        /// SF Symbols's name：externaldrive.badge.timemachine
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgeTimemachine = "externaldrive.badge.timemachine"

        /// SF Symbols's name：externaldrive.badge.wifi
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgeWifi = "externaldrive.badge.wifi"

        /// SF Symbols's name：externaldrive.badge.xmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveBadgeXmark = "externaldrive.badge.xmark"

        /// SF Symbols's name：externaldrive.connected.to.line.below
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveConnectedToLineBelow = "externaldrive.connected.to.line.below"

        /// SF Symbols's name：externaldrive.connected.to.line.below.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveConnectedToLineBelowFill = "externaldrive.connected.to.line.below.fill"

        /// SF Symbols's name：externaldrive.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFill = "externaldrive.fill"

        /// SF Symbols's name：externaldrive.fill.badge.checkmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgeCheckmark = "externaldrive.fill.badge.checkmark"

        /// SF Symbols's name：externaldrive.fill.badge.icloud
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgeIcloud = "externaldrive.fill.badge.icloud"

        /// SF Symbols's name：externaldrive.fill.badge.minus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgeMinus = "externaldrive.fill.badge.minus"

        /// SF Symbols's name：externaldrive.fill.badge.person.crop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgePersonCrop = "externaldrive.fill.badge.person.crop"

        /// SF Symbols's name：externaldrive.fill.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgePlus = "externaldrive.fill.badge.plus"

        /// SF Symbols's name：externaldrive.fill.badge.timemachine
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgeTimemachine = "externaldrive.fill.badge.timemachine"

        /// SF Symbols's name：externaldrive.fill.badge.wifi
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgeWifi = "externaldrive.fill.badge.wifi"

        /// SF Symbols's name：externaldrive.fill.badge.xmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case externaldriveFillBadgeXmark = "externaldrive.fill.badge.xmark"

        /// SF Symbols's name：eye.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case eyeCircle = "eye.circle"

        /// SF Symbols's name：eye.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case eyeCircleFill = "eye.circle.fill"

        /// SF Symbols's name：eyebrow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case eyebrow = "eyebrow"

        /// SF Symbols's name：eyes
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case eyes = "eyes"

        /// SF Symbols's name：eyes.inverse
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case eyesInverse = "eyes.inverse"

        /// SF Symbols's name：face.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case faceDashed = "face.dashed"

        /// SF Symbols's name：face.dashed.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case faceDashedFill = "face.dashed.fill"

        /// SF Symbols's name：face.smiling
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case faceSmiling = "face.smiling"

        /// SF Symbols's name：face.smiling.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case faceSmilingFill = "face.smiling.fill"

        /// SF Symbols's name：faxmachine
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case faxmachine = "faxmachine"

        /// SF Symbols's name：fiberchannel
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case fiberchannel = "fiberchannel"

        /// SF Symbols's name：figure.stand
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureStand = "figure.stand"

        /// SF Symbols's name：figure.stand.line.dotted.figure.stand
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureStandLineDottedFigureStand = "figure.stand.line.dotted.figure.stand"

        /// SF Symbols's name：figure.walk
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWalk = "figure.walk"

        /// SF Symbols's name：figure.walk.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWalkCircle = "figure.walk.circle"

        /// SF Symbols's name：figure.walk.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWalkCircleFill = "figure.walk.circle.fill"

        /// SF Symbols's name：figure.walk.diamond
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWalkDiamond = "figure.walk.diamond"

        /// SF Symbols's name：figure.walk.diamond.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWalkDiamondFill = "figure.walk.diamond.fill"

        /// SF Symbols's name：figure.wave
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWave = "figure.wave"

        /// SF Symbols's name：figure.wave.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWaveCircle = "figure.wave.circle"

        /// SF Symbols's name：figure.wave.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case figureWaveCircleFill = "figure.wave.circle.fill"

        /// SF Symbols's name：filemenu.and.cursorarrow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case filemenuAndCursorarrow = "filemenu.and.cursorarrow"

        /// SF Symbols's name：filemenu.and.cursorarrow.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case filemenuAndCursorarrowRtl = "filemenu.and.cursorarrow.rtl"

        /// SF Symbols's name：filemenu.and.selection
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case filemenuAndSelection = "filemenu.and.selection"

        /// SF Symbols's name：flag.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case flagBadgeEllipsis = "flag.badge.ellipsis"

        /// SF Symbols's name：flag.badge.ellipsis.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case flagBadgeEllipsisFill = "flag.badge.ellipsis.fill"

        /// SF Symbols's name：flag.slash.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case flagSlashCircle = "flag.slash.circle"

        /// SF Symbols's name：flag.slash.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case flagSlashCircleFill = "flag.slash.circle.fill"

        /// SF Symbols's name：flipphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case flipphone = "flipphone"

        /// SF Symbols's name：fn
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case fn = "fn"

        /// SF Symbols's name：folder.badge.gear
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case folderBadgeGear = "folder.badge.gear"

        /// SF Symbols's name：folder.badge.questionmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case folderBadgeQuestionmark = "folder.badge.questionmark"

        /// SF Symbols's name：folder.badge.questionmark.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case folderBadgeQuestionmarkAr = "folder.badge.questionmark.ar"

        /// SF Symbols's name：folder.fill.badge.gear
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case folderFillBadgeGear = "folder.fill.badge.gear"

        /// SF Symbols's name：folder.fill.badge.questionmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case folderFillBadgeQuestionmark = "folder.fill.badge.questionmark"

        /// SF Symbols's name：folder.fill.badge.questionmark.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case folderFillBadgeQuestionmarkAr = "folder.fill.badge.questionmark.ar"

        /// SF Symbols's name：forward.frame
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case forwardFrame = "forward.frame"

        /// SF Symbols's name：forward.frame.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case forwardFrameFill = "forward.frame.fill"

        /// SF Symbols's name：gearshape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case gearshape = "gearshape"

        /// SF Symbols's name：gearshape.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case gearshape2 = "gearshape.2"

        /// SF Symbols's name：gearshape.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case gearshape2Fill = "gearshape.2.fill"

        /// SF Symbols's name：gearshape.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case gearshapeFill = "gearshape.fill"

        /// SF Symbols's name：gift.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case giftCircle = "gift.circle"

        /// SF Symbols's name：gift.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case giftCircleFill = "gift.circle.fill"

        /// SF Symbols's name：giftcard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case giftcard = "giftcard"

        /// SF Symbols's name：giftcard.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case giftcardFill = "giftcard.fill"

        /// SF Symbols's name：graduationcap
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case graduationcap = "graduationcap"

        /// SF Symbols's name：graduationcap.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case graduationcapFill = "graduationcap.fill"

        /// SF Symbols's name：greetingcard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case greetingcard = "greetingcard"

        /// SF Symbols's name：greetingcard.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case greetingcardFill = "greetingcard.fill"

        /// SF Symbols's name：guitars.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case guitarsFill = "guitars.fill"

        /// SF Symbols's name：gyroscope
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case gyroscope = "gyroscope"

        /// SF Symbols's name：h.square.fill.on.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hSquareFillOnSquareFill = "h.square.fill.on.square.fill"

        /// SF Symbols's name：h.square.on.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hSquareOnSquare = "h.square.on.square"

        /// SF Symbols's name：hand.point.down
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointDown = "hand.point.down"

        /// SF Symbols's name：hand.point.down.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointDownFill = "hand.point.down.fill"

        /// SF Symbols's name：hand.point.up
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointUp = "hand.point.up"

        /// SF Symbols's name：hand.point.up.braille
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointUpBraille = "hand.point.up.braille"

        /// SF Symbols's name：hand.point.up.braille.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointUpBrailleFill = "hand.point.up.braille.fill"

        /// SF Symbols's name：hand.point.up.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointUpFill = "hand.point.up.fill"

        /// SF Symbols's name：hand.point.up.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointUpLeft = "hand.point.up.left"

        /// SF Symbols's name：hand.point.up.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handPointUpLeftFill = "hand.point.up.left.fill"

        /// SF Symbols's name：hand.tap
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handTap = "hand.tap"

        /// SF Symbols's name：hand.tap.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handTapFill = "hand.tap.fill"

        /// SF Symbols's name：hand.wave
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handWave = "hand.wave"

        /// SF Symbols's name：hand.wave.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handWaveFill = "hand.wave.fill"

        /// SF Symbols's name：hands.clap
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handsClap = "hands.clap"

        /// SF Symbols's name：hands.clap.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handsClapFill = "hands.clap.fill"

        /// SF Symbols's name：hands.sparkles
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handsSparkles = "hands.sparkles"

        /// SF Symbols's name：hands.sparkles.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case handsSparklesFill = "hands.sparkles.fill"

        /// SF Symbols's name：headphones.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case headphonesCircle = "headphones.circle"

        /// SF Symbols's name：headphones.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case headphonesCircleFill = "headphones.circle.fill"

        /// SF Symbols's name：hearingaid.ear
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hearingaidEar = "hearingaid.ear"

        /// SF Symbols's name：heart.text.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case heartTextSquare = "heart.text.square"

        /// SF Symbols's name：heart.text.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case heartTextSquareFill = "heart.text.square.fill"

        /// SF Symbols's name：hifispeaker.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hifispeaker2 = "hifispeaker.2"

        /// SF Symbols's name：hifispeaker.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hifispeaker2Fill = "hifispeaker.2.fill"

        /// SF Symbols's name：hifispeaker.and.homepod
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hifispeakerAndHomepod = "hifispeaker.and.homepod"

        /// SF Symbols's name：hifispeaker.and.homepod.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hifispeakerAndHomepodFill = "hifispeaker.and.homepod.fill"

        /// SF Symbols's name：highlighter
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case highlighter = "highlighter"

        /// SF Symbols's name：homekit
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case homekit = "homekit"

        /// SF Symbols's name：homepod
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case homepod = "homepod"

        /// SF Symbols's name：homepod.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case homepod2 = "homepod.2"

        /// SF Symbols's name：homepod.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case homepod2Fill = "homepod.2.fill"

        /// SF Symbols's name：homepod.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case homepodFill = "homepod.fill"

        /// SF Symbols's name：hourglass.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case hourglassBadgePlus = "hourglass.badge.plus"

        /// SF Symbols's name：house.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case houseCircle = "house.circle"

        /// SF Symbols's name：house.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case houseCircleFill = "house.circle.fill"

        /// SF Symbols's name：infinity
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case infinity = "infinity"

        /// SF Symbols's name：internaldrive
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case internaldrive = "internaldrive"

        /// SF Symbols's name：internaldrive.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case internaldriveFill = "internaldrive.fill"

        /// SF Symbols's name：ipad
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipad = "ipad"

        /// SF Symbols's name：ipad.homebutton
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipadHomebutton = "ipad.homebutton"

        /// SF Symbols's name：ipad.homebutton.landscape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipadHomebuttonLandscape = "ipad.homebutton.landscape"

        /// SF Symbols's name：ipad.landscape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipadLandscape = "ipad.landscape"

        /// SF Symbols's name：iphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case iphone = "iphone"

        /// SF Symbols's name：iphone.homebutton
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case iphoneHomebutton = "iphone.homebutton"

        /// SF Symbols's name：iphone.homebutton.radiowaves.left.and.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case iphoneHomebuttonRadiowavesLeftAndRight = "iphone.homebutton.radiowaves.left.and.right"

        /// SF Symbols's name：iphone.homebutton.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case iphoneHomebuttonSlash = "iphone.homebutton.slash"

        /// SF Symbols's name：iphone.radiowaves.left.and.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case iphoneRadiowavesLeftAndRight = "iphone.radiowaves.left.and.right"

        /// SF Symbols's name：iphone.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case iphoneSlash = "iphone.slash"

        /// SF Symbols's name：ipod
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipod = "ipod"

        /// SF Symbols's name：ipodshuffle.gen1
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipodshuffleGen1 = "ipodshuffle.gen1"

        /// SF Symbols's name：ipodshuffle.gen2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipodshuffleGen2 = "ipodshuffle.gen2"

        /// SF Symbols's name：ipodshuffle.gen3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipodshuffleGen3 = "ipodshuffle.gen3"

        /// SF Symbols's name：ipodshuffle.gen4
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipodshuffleGen4 = "ipodshuffle.gen4"

        /// SF Symbols's name：ipodtouch
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ipodtouch = "ipodtouch"

        /// SF Symbols's name：j.square.fill.on.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case jSquareFillOnSquareFill = "j.square.fill.on.square.fill"

        /// SF Symbols's name：j.square.on.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case jSquareOnSquare = "j.square.on.square"

        /// SF Symbols's name：k
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case k = "k"

        /// SF Symbols's name：key
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case key = "key"

        /// SF Symbols's name：key.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyFill = "key.fill"

        /// SF Symbols's name：key.icloud
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyIcloud = "key.icloud"

        /// SF Symbols's name：key.icloud.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyIcloudFill = "key.icloud.fill"

        /// SF Symbols's name：keyboard.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyboardBadgeEllipsis = "keyboard.badge.ellipsis"

        /// SF Symbols's name：keyboard.chevron.compact.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyboardChevronCompactLeft = "keyboard.chevron.compact.left"

        /// SF Symbols's name：keyboard.macwindow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyboardMacwindow = "keyboard.macwindow"

        /// SF Symbols's name：keyboard.onehanded.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyboardOnehandedLeft = "keyboard.onehanded.left"

        /// SF Symbols's name：keyboard.onehanded.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case keyboardOnehandedRight = "keyboard.onehanded.right"

        /// SF Symbols's name：l.joystick
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lJoystick = "l.joystick"

        /// SF Symbols's name：l.joystick.down
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lJoystickDown = "l.joystick.down"

        /// SF Symbols's name：l.joystick.down.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lJoystickDownFill = "l.joystick.down.fill"

        /// SF Symbols's name：l.joystick.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lJoystickFill = "l.joystick.fill"

        /// SF Symbols's name：l.rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lRectangleRoundedbottom = "l.rectangle.roundedbottom"

        /// SF Symbols's name：l.rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lRectangleRoundedbottomFill = "l.rectangle.roundedbottom.fill"

        /// SF Symbols's name：l1.rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case l1RectangleRoundedbottom = "l1.rectangle.roundedbottom"

        /// SF Symbols's name：l1.rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case l1RectangleRoundedbottomFill = "l1.rectangle.roundedbottom.fill"

        /// SF Symbols's name：l2.rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case l2RectangleRoundedtop = "l2.rectangle.roundedtop"

        /// SF Symbols's name：l2.rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case l2RectangleRoundedtopFill = "l2.rectangle.roundedtop.fill"

        /// SF Symbols's name：ladybug
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ladybug = "ladybug"

        /// SF Symbols's name：ladybug.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ladybugFill = "ladybug.fill"

        /// SF Symbols's name：laptopcomputer
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case laptopcomputer = "laptopcomputer"

        /// SF Symbols's name：laptopcomputer.and.iphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case laptopcomputerAndIphone = "laptopcomputer.and.iphone"

        /// SF Symbols's name：lasso.sparkles
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lassoSparkles = "lasso.sparkles"

        /// SF Symbols's name：latch.2.case
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case latch2Case = "latch.2.case"

        /// SF Symbols's name：latch.2.case.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case latch2CaseFill = "latch.2.case.fill"

        /// SF Symbols's name：lb.rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lbRectangleRoundedbottom = "lb.rectangle.roundedbottom"

        /// SF Symbols's name：lb.rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lbRectangleRoundedbottomFill = "lb.rectangle.roundedbottom.fill"

        /// SF Symbols's name：leaf
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case leaf = "leaf"

        /// SF Symbols's name：leaf.arrow.triangle.circlepath
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case leafArrowTriangleCirclepath = "leaf.arrow.triangle.circlepath"

        /// SF Symbols's name：leaf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case leafFill = "leaf.fill"

        /// SF Symbols's name：level
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case level = "level"

        /// SF Symbols's name：level.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case levelFill = "level.fill"

        /// SF Symbols's name：lifepreserver
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lifepreserver = "lifepreserver"

        /// SF Symbols's name：lifepreserver.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lifepreserverFill = "lifepreserver.fill"

        /// SF Symbols's name：line.3.crossed.swirl.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case line3CrossedSwirlCircle = "line.3.crossed.swirl.circle"

        /// SF Symbols's name：line.3.crossed.swirl.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case line3CrossedSwirlCircleFill = "line.3.crossed.swirl.circle.fill"

        /// SF Symbols's name：line.diagonal
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineDiagonal = "line.diagonal"

        /// SF Symbols's name：line.diagonal.arrow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineDiagonalArrow = "line.diagonal.arrow"

        /// SF Symbols's name：line.horizontal.2.decrease.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineHorizontal2DecreaseCircle = "line.horizontal.2.decrease.circle"

        /// SF Symbols's name：line.horizontal.2.decrease.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineHorizontal2DecreaseCircleFill = "line.horizontal.2.decrease.circle.fill"

        /// SF Symbols's name：line.horizontal.3.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineHorizontal3Circle = "line.horizontal.3.circle"

        /// SF Symbols's name：line.horizontal.3.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineHorizontal3CircleFill = "line.horizontal.3.circle.fill"

        /// SF Symbols's name：line.horizontal.star.fill.line.horizontal
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineHorizontalStarFillLineHorizontal = "line.horizontal.star.fill.line.horizontal"

        /// SF Symbols's name：lineweight
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lineweight = "lineweight"

        /// SF Symbols's name：link.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case linkBadgePlus = "link.badge.plus"

        /// SF Symbols's name：list.and.film
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case listAndFilm = "list.and.film"

        /// SF Symbols's name：list.bullet.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case listBulletRectangle = "list.bullet.rectangle"

        /// SF Symbols's name：list.number.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case listNumberAr = "list.number.ar"

        /// SF Symbols's name：list.star
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case listStar = "list.star"

        /// SF Symbols's name：list.triangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case listTriangle = "list.triangle"

        /// SF Symbols's name：livephoto.badge.a
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case livephotoBadgeA = "livephoto.badge.a"

        /// SF Symbols's name：location.fill.viewfinder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case locationFillViewfinder = "location.fill.viewfinder"

        /// SF Symbols's name：location.viewfinder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case locationViewfinder = "location.viewfinder"

        /// SF Symbols's name：lock.doc
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockDoc = "lock.doc"

        /// SF Symbols's name：lock.doc.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockDocFill = "lock.doc.fill"

        /// SF Symbols's name：lock.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockRectangle = "lock.rectangle"

        /// SF Symbols's name：lock.rectangle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockRectangleFill = "lock.rectangle.fill"

        /// SF Symbols's name：lock.rectangle.on.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockRectangleOnRectangle = "lock.rectangle.on.rectangle"

        /// SF Symbols's name：lock.rectangle.on.rectangle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockRectangleOnRectangleFill = "lock.rectangle.on.rectangle.fill"

        /// SF Symbols's name：lock.rectangle.stack
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockRectangleStack = "lock.rectangle.stack"

        /// SF Symbols's name：lock.rectangle.stack.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockRectangleStackFill = "lock.rectangle.stack.fill"

        /// SF Symbols's name：lock.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockSquare = "lock.square"

        /// SF Symbols's name：lock.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockSquareFill = "lock.square.fill"

        /// SF Symbols's name：lock.square.stack
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockSquareStack = "lock.square.stack"

        /// SF Symbols's name：lock.square.stack.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lockSquareStackFill = "lock.square.stack.fill"

        /// SF Symbols's name：loupe
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case loupe = "loupe"

        /// SF Symbols's name：lt.rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ltRectangleRoundedtop = "lt.rectangle.roundedtop"

        /// SF Symbols's name：lt.rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ltRectangleRoundedtopFill = "lt.rectangle.roundedtop.fill"

        /// SF Symbols's name：lungs
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lungs = "lungs"

        /// SF Symbols's name：lungs.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case lungsFill = "lungs.fill"

        /// SF Symbols's name：macmini
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macmini = "macmini"

        /// SF Symbols's name：macmini.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macminiFill = "macmini.fill"

        /// SF Symbols's name：macpro.gen1
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macproGen1 = "macpro.gen1"

        /// SF Symbols's name：macpro.gen2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macproGen2 = "macpro.gen2"

        /// SF Symbols's name：macpro.gen2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macproGen2Fill = "macpro.gen2.fill"

        /// SF Symbols's name：macpro.gen3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macproGen3 = "macpro.gen3"

        /// SF Symbols's name：macpro.gen3.server
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macproGen3Server = "macpro.gen3.server"

        /// SF Symbols's name：macwindow.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macwindowBadgePlus = "macwindow.badge.plus"

        /// SF Symbols's name：macwindow.on.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macwindowOnRectangle = "macwindow.on.rectangle"

        /// SF Symbols's name：macwindow.on.rectangle.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case macwindowOnRectangleRtl = "macwindow.on.rectangle.rtl"

        /// SF Symbols's name：mail
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mail = "mail"

        /// SF Symbols's name：mail.and.text.magnifyingglass
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mailAndTextMagnifyingglass = "mail.and.text.magnifyingglass"

        /// SF Symbols's name：mail.and.text.magnifyingglass.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mailAndTextMagnifyingglassRtl = "mail.and.text.magnifyingglass.rtl"

        /// SF Symbols's name：mail.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mailFill = "mail.fill"

        /// SF Symbols's name：mail.stack
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mailStack = "mail.stack"

        /// SF Symbols's name：mail.stack.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mailStackFill = "mail.stack.fill"

        /// SF Symbols's name：megaphone
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case megaphone = "megaphone"

        /// SF Symbols's name：megaphone.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case megaphoneFill = "megaphone.fill"

        /// SF Symbols's name：memorychip
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case memorychip = "memorychip"

        /// SF Symbols's name：menubar.arrow.down.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case menubarArrowDownRectangle = "menubar.arrow.down.rectangle"

        /// SF Symbols's name：menubar.arrow.up.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case menubarArrowUpRectangle = "menubar.arrow.up.rectangle"

        /// SF Symbols's name：menubar.dock.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case menubarDockRectangle = "menubar.dock.rectangle"

        /// SF Symbols's name：menubar.dock.rectangle.badge.record
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case menubarDockRectangleBadgeRecord = "menubar.dock.rectangle.badge.record"

        /// SF Symbols's name：menubar.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case menubarRectangle = "menubar.rectangle"

        /// SF Symbols's name：metronome.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case metronomeFill = "metronome.fill"

        /// SF Symbols's name：minus.diamond
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case minusDiamond = "minus.diamond"

        /// SF Symbols's name：minus.diamond.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case minusDiamondFill = "minus.diamond.fill"

        /// SF Symbols's name：minus.plus.batteryblock
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case minusPlusBatteryblock = "minus.plus.batteryblock"

        /// SF Symbols's name：minus.plus.batteryblock.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case minusPlusBatteryblockFill = "minus.plus.batteryblock.fill"

        /// SF Symbols's name：minus.rectangle.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case minusRectanglePortrait = "minus.rectangle.portrait"

        /// SF Symbols's name：minus.rectangle.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case minusRectanglePortraitFill = "minus.rectangle.portrait.fill"

        /// SF Symbols's name：mosaic
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mosaic = "mosaic"

        /// SF Symbols's name：mosaic.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mosaicFill = "mosaic.fill"

        /// SF Symbols's name：mount
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mount = "mount"

        /// SF Symbols's name：mount.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mountFill = "mount.fill"

        /// SF Symbols's name：mouth
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mouth = "mouth"

        /// SF Symbols's name：mouth.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mouthFill = "mouth.fill"

        /// SF Symbols's name：move.3d
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case move3d = "move.3d"

        /// SF Symbols's name：music.note.house
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case musicNoteHouse = "music.note.house"

        /// SF Symbols's name：music.note.house.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case musicNoteHouseFill = "music.note.house.fill"

        /// SF Symbols's name：music.quarternote.3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case musicQuarternote3 = "music.quarternote.3"

        /// SF Symbols's name：mustache
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mustache = "mustache"

        /// SF Symbols's name：mustache.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case mustacheFill = "mustache.fill"

        /// SF Symbols's name：network
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case network = "network"

        /// SF Symbols's name：newspaper
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case newspaper = "newspaper"

        /// SF Symbols's name：newspaper.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case newspaperFill = "newspaper.fill"

        /// SF Symbols's name：nose
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case nose = "nose"

        /// SF Symbols's name：nose.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case noseFill = "nose.fill"

        /// SF Symbols's name：note
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case note = "note"

        /// SF Symbols's name：note.text
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case noteText = "note.text"

        /// SF Symbols's name：note.text.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case noteTextBadgePlus = "note.text.badge.plus"

        /// SF Symbols's name：octagon
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case octagon = "octagon"

        /// SF Symbols's name：octagon.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case octagonFill = "octagon.fill"

        /// SF Symbols's name：opticaldisc
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case opticaldisc = "opticaldisc"

        /// SF Symbols's name：opticaldiscdrive
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case opticaldiscdrive = "opticaldiscdrive"

        /// SF Symbols's name：opticaldiscdrive.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case opticaldiscdriveFill = "opticaldiscdrive.fill"

        /// SF Symbols's name：oval
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case oval = "oval"

        /// SF Symbols's name：oval.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ovalFill = "oval.fill"

        /// SF Symbols's name：oval.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ovalPortrait = "oval.portrait"

        /// SF Symbols's name：oval.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ovalPortraitFill = "oval.portrait.fill"

        /// SF Symbols's name：paintbrush.pointed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paintbrushPointed = "paintbrush.pointed"

        /// SF Symbols's name：paintbrush.pointed.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paintbrushPointedFill = "paintbrush.pointed.fill"

        /// SF Symbols's name：paintpalette
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paintpalette = "paintpalette"

        /// SF Symbols's name：paintpalette.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paintpaletteFill = "paintpalette.fill"

        /// SF Symbols's name：paperclip.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paperclipBadgeEllipsis = "paperclip.badge.ellipsis"

        /// SF Symbols's name：paperplane.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paperplaneCircle = "paperplane.circle"

        /// SF Symbols's name：paperplane.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paperplaneCircleFill = "paperplane.circle.fill"

        /// SF Symbols's name：paragraphsign
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case paragraphsign = "paragraphsign"

        /// SF Symbols's name：pc
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pc = "pc"

        /// SF Symbols's name：pencil.tip.crop.circle.badge.arrow.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pencilTipCropCircleBadgeArrowForward = "pencil.tip.crop.circle.badge.arrow.forward"

        /// SF Symbols's name：percent.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case percentAr = "percent.ar"

        /// SF Symbols's name：person.2.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case person2Circle = "person.2.circle"

        /// SF Symbols's name：person.2.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case person2CircleFill = "person.2.circle.fill"

        /// SF Symbols's name：person.and.arrow.left.and.arrow.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personAndArrowLeftAndArrowRight = "person.and.arrow.left.and.arrow.right"

        /// SF Symbols's name：person.crop.circle.badge.exclamationmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropCircleBadgeExclamationmark = "person.crop.circle.badge.exclamationmark"

        /// SF Symbols's name：person.crop.circle.badge.questionmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropCircleBadgeQuestionmark = "person.crop.circle.badge.questionmark"

        /// SF Symbols's name：person.crop.circle.badge.questionmark.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropCircleBadgeQuestionmarkAr = "person.crop.circle.badge.questionmark.ar"

        /// SF Symbols's name：person.crop.circle.fill.badge.exclamationmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropCircleFillBadgeExclamationmark = "person.crop.circle.fill.badge.exclamationmark"

        /// SF Symbols's name：person.crop.circle.fill.badge.questionmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropCircleFillBadgeQuestionmark = "person.crop.circle.fill.badge.questionmark"

        /// SF Symbols's name：person.crop.circle.fill.badge.questionmark.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropCircleFillBadgeQuestionmarkAr = "person.crop.circle.fill.badge.questionmark.ar"

        /// SF Symbols's name：person.crop.square.fill.and.at.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personCropSquareFillAndAtRectangle = "person.crop.square.fill.and.at.rectangle"

        /// SF Symbols's name：person.fill.and.arrow.left.and.arrow.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillAndArrowLeftAndArrowRight = "person.fill.and.arrow.left.and.arrow.right"

        /// SF Symbols's name：person.fill.badge.minus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillBadgeMinus = "person.fill.badge.minus"

        /// SF Symbols's name：person.fill.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillBadgePlus = "person.fill.badge.plus"

        /// SF Symbols's name：person.fill.checkmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillCheckmark = "person.fill.checkmark"

        /// SF Symbols's name：person.fill.checkmark.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillCheckmarkRtl = "person.fill.checkmark.rtl"

        /// SF Symbols's name：person.fill.questionmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillQuestionmark = "person.fill.questionmark"

        /// SF Symbols's name：person.fill.questionmark.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillQuestionmarkAr = "person.fill.questionmark.ar"

        /// SF Symbols's name：person.fill.questionmark.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillQuestionmarkRtl = "person.fill.questionmark.rtl"

        /// SF Symbols's name：person.fill.turn.down
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillTurnDown = "person.fill.turn.down"

        /// SF Symbols's name：person.fill.turn.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillTurnLeft = "person.fill.turn.left"

        /// SF Symbols's name：person.fill.turn.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillTurnRight = "person.fill.turn.right"

        /// SF Symbols's name：person.fill.viewfinder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillViewfinder = "person.fill.viewfinder"

        /// SF Symbols's name：person.fill.xmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillXmark = "person.fill.xmark"

        /// SF Symbols's name：person.fill.xmark.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case personFillXmarkRtl = "person.fill.xmark.rtl"

        /// SF Symbols's name：phone.bubble.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case phoneBubbleLeft = "phone.bubble.left"

        /// SF Symbols's name：phone.bubble.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case phoneBubbleLeftFill = "phone.bubble.left.fill"

        /// SF Symbols's name：phone.connection
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case phoneConnection = "phone.connection"

        /// SF Symbols's name：phone.fill.connection
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case phoneFillConnection = "phone.fill.connection"

        /// SF Symbols's name：photo.on.rectangle.angled
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case photoOnRectangleAngled = "photo.on.rectangle.angled"

        /// SF Symbols's name：pianokeys
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pianokeys = "pianokeys"

        /// SF Symbols's name：pianokeys.inverse
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pianokeysInverse = "pianokeys.inverse"

        /// SF Symbols's name：pills
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pills = "pills"

        /// SF Symbols's name：pills.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pillsFill = "pills.fill"

        /// SF Symbols's name：pip
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pip = "pip"

        /// SF Symbols's name：pip.enter
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pipEnter = "pip.enter"

        /// SF Symbols's name：pip.exit
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pipExit = "pip.exit"

        /// SF Symbols's name：pip.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pipFill = "pip.fill"

        /// SF Symbols's name：pip.remove
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pipRemove = "pip.remove"

        /// SF Symbols's name：pip.swap
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pipSwap = "pip.swap"

        /// SF Symbols's name：placeholdertext.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case placeholdertextFill = "placeholdertext.fill"

        /// SF Symbols's name：play.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case playSlash = "play.slash"

        /// SF Symbols's name：play.slash.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case playSlashFill = "play.slash.fill"

        /// SF Symbols's name：plus.diamond
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusDiamond = "plus.diamond"

        /// SF Symbols's name：plus.diamond.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusDiamondFill = "plus.diamond.fill"

        /// SF Symbols's name：plus.message
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusMessage = "plus.message"

        /// SF Symbols's name：plus.message.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusMessageFill = "plus.message.fill"

        /// SF Symbols's name：plus.rectangle.fill.on.folder.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusRectangleFillOnFolderFill = "plus.rectangle.fill.on.folder.fill"

        /// SF Symbols's name：plus.rectangle.on.folder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusRectangleOnFolder = "plus.rectangle.on.folder"

        /// SF Symbols's name：plus.rectangle.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusRectanglePortrait = "plus.rectangle.portrait"

        /// SF Symbols's name：plus.rectangle.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusRectanglePortraitFill = "plus.rectangle.portrait.fill"

        /// SF Symbols's name：plus.viewfinder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case plusViewfinder = "plus.viewfinder"

        /// SF Symbols's name：point.fill.topleft.down.curvedto.point.fill.bottomright.up
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pointFillTopleftDownCurvedtoPointFillBottomrightUp = "point.fill.topleft.down.curvedto.point.fill.bottomright.up"

        /// SF Symbols's name：point.topleft.down.curvedto.point.bottomright.up
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pointTopleftDownCurvedtoPointBottomrightUp = "point.topleft.down.curvedto.point.bottomright.up"

        /// SF Symbols's name：poweroff
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case poweroff = "poweroff"

        /// SF Symbols's name：poweron
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case poweron = "poweron"

        /// SF Symbols's name：powersleep
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case powersleep = "powersleep"

        /// SF Symbols's name：printer.dotmatrix
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case printerDotmatrix = "printer.dotmatrix"

        /// SF Symbols's name：printer.dotmatrix.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case printerDotmatrixFill = "printer.dotmatrix.fill"

        /// SF Symbols's name：printer.dotmatrix.fill.and.paper.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case printerDotmatrixFillAndPaperFill = "printer.dotmatrix.fill.and.paper.fill"

        /// SF Symbols's name：printer.fill.and.paper.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case printerFillAndPaperFill = "printer.fill.and.paper.fill"

        /// SF Symbols's name：puzzlepiece
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case puzzlepiece = "puzzlepiece"

        /// SF Symbols's name：puzzlepiece.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case puzzlepieceFill = "puzzlepiece.fill"

        /// SF Symbols's name：pyramid
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pyramid = "pyramid"

        /// SF Symbols's name：pyramid.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case pyramidFill = "pyramid.fill"

        /// SF Symbols's name：questionmark.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkAr = "questionmark.ar"

        /// SF Symbols's name：questionmark.circle.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkCircleAr = "questionmark.circle.ar"

        /// SF Symbols's name：questionmark.circle.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkCircleFillAr = "questionmark.circle.fill.ar"

        /// SF Symbols's name：questionmark.diamond.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkDiamondAr = "questionmark.diamond.ar"

        /// SF Symbols's name：questionmark.diamond.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkDiamondFillAr = "questionmark.diamond.fill.ar"

        /// SF Symbols's name：questionmark.folder
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkFolder = "questionmark.folder"

        /// SF Symbols's name：questionmark.folder.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkFolderAr = "questionmark.folder.ar"

        /// SF Symbols's name：questionmark.folder.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkFolderFill = "questionmark.folder.fill"

        /// SF Symbols's name：questionmark.folder.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkFolderFillAr = "questionmark.folder.fill.ar"

        /// SF Symbols's name：questionmark.square.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkSquareAr = "questionmark.square.ar"

        /// SF Symbols's name：questionmark.square.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkSquareDashed = "questionmark.square.dashed"

        /// SF Symbols's name：questionmark.square.dashed.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkSquareDashedAr = "questionmark.square.dashed.ar"

        /// SF Symbols's name：questionmark.square.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkSquareFillAr = "questionmark.square.fill.ar"

        /// SF Symbols's name：questionmark.video.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkVideoAr = "questionmark.video.ar"

        /// SF Symbols's name：questionmark.video.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case questionmarkVideoFillAr = "questionmark.video.fill.ar"

        /// SF Symbols's name：quote.bubble.fill.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case quoteBubbleFillRtl = "quote.bubble.fill.rtl"

        /// SF Symbols's name：quote.bubble.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case quoteBubbleRtl = "quote.bubble.rtl"

        /// SF Symbols's name：r.joystick
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rJoystick = "r.joystick"

        /// SF Symbols's name：r.joystick.down
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rJoystickDown = "r.joystick.down"

        /// SF Symbols's name：r.joystick.down.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rJoystickDownFill = "r.joystick.down.fill"

        /// SF Symbols's name：r.joystick.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rJoystickFill = "r.joystick.fill"

        /// SF Symbols's name：r.rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rRectangleRoundedbottom = "r.rectangle.roundedbottom"

        /// SF Symbols's name：r.rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rRectangleRoundedbottomFill = "r.rectangle.roundedbottom.fill"

        /// SF Symbols's name：r.square.fill.on.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rSquareFillOnSquareFill = "r.square.fill.on.square.fill"

        /// SF Symbols's name：r.square.on.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rSquareOnSquare = "r.square.on.square"

        /// SF Symbols's name：r1.rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case r1RectangleRoundedbottom = "r1.rectangle.roundedbottom"

        /// SF Symbols's name：r1.rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case r1RectangleRoundedbottomFill = "r1.rectangle.roundedbottom.fill"

        /// SF Symbols's name：r2.rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case r2RectangleRoundedtop = "r2.rectangle.roundedtop"

        /// SF Symbols's name：r2.rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case r2RectangleRoundedtopFill = "r2.rectangle.roundedtop.fill"

        /// SF Symbols's name：radio
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case radio = "radio"

        /// SF Symbols's name：radio.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case radioFill = "radio.fill"

        /// SF Symbols's name：rb.rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rbRectangleRoundedbottom = "rb.rectangle.roundedbottom"

        /// SF Symbols's name：rb.rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rbRectangleRoundedbottomFill = "rb.rectangle.roundedbottom.fill"

        /// SF Symbols's name：record.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case recordCircle = "record.circle"

        /// SF Symbols's name：record.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case recordCircleFill = "record.circle.fill"

        /// SF Symbols's name：rectangle.3.offgrid.bubble.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangle3OffgridBubbleLeft = "rectangle.3.offgrid.bubble.left"

        /// SF Symbols's name：rectangle.3.offgrid.bubble.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangle3OffgridBubbleLeftFill = "rectangle.3.offgrid.bubble.left.fill"

        /// SF Symbols's name：rectangle.and.pencil.and.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleAndPencilAndEllipsis = "rectangle.and.pencil.and.ellipsis"

        /// SF Symbols's name：rectangle.and.pencil.and.ellipsis.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleAndPencilAndEllipsisRtl = "rectangle.and.pencil.and.ellipsis.rtl"

        /// SF Symbols's name：rectangle.and.text.magnifyingglass
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleAndTextMagnifyingglass = "rectangle.and.text.magnifyingglass"

        /// SF Symbols's name：rectangle.and.text.magnifyingglass.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleAndTextMagnifyingglassRtl = "rectangle.and.text.magnifyingglass.rtl"

        /// SF Symbols's name：rectangle.arrowtriangle.2.inward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleArrowtriangle2Inward = "rectangle.arrowtriangle.2.inward"

        /// SF Symbols's name：rectangle.arrowtriangle.2.outward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleArrowtriangle2Outward = "rectangle.arrowtriangle.2.outward"

        /// SF Symbols's name：rectangle.badge.minus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleBadgeMinus = "rectangle.badge.minus"

        /// SF Symbols's name：rectangle.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleBadgePlus = "rectangle.badge.plus"

        /// SF Symbols's name：rectangle.bottomthird.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleBottomthirdInsetFill = "rectangle.bottomthird.inset.fill"

        /// SF Symbols's name：rectangle.center.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleCenterInsetFill = "rectangle.center.inset.fill"

        /// SF Symbols's name：rectangle.connected.to.line.below
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleConnectedToLineBelow = "rectangle.connected.to.line.below"

        /// SF Symbols's name：rectangle.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleDashed = "rectangle.dashed"

        /// SF Symbols's name：rectangle.dashed.and.paperclip
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleDashedAndPaperclip = "rectangle.dashed.and.paperclip"

        /// SF Symbols's name：rectangle.dashed.badge.record
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleDashedBadgeRecord = "rectangle.dashed.badge.record"

        /// SF Symbols's name：rectangle.fill.badge.minus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleFillBadgeMinus = "rectangle.fill.badge.minus"

        /// SF Symbols's name：rectangle.fill.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleFillBadgePlus = "rectangle.fill.badge.plus"

        /// SF Symbols's name：rectangle.fill.on.rectangle.fill.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleFillOnRectangleFillCircle = "rectangle.fill.on.rectangle.fill.circle"

        /// SF Symbols's name：rectangle.fill.on.rectangle.fill.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleFillOnRectangleFillCircleFill = "rectangle.fill.on.rectangle.fill.circle.fill"

        /// SF Symbols's name：rectangle.fill.on.rectangle.fill.slash.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleFillOnRectangleFillSlashFill = "rectangle.fill.on.rectangle.fill.slash.fill"

        /// SF Symbols's name：rectangle.inset.bottomleft.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleInsetBottomleftFill = "rectangle.inset.bottomleft.fill"

        /// SF Symbols's name：rectangle.inset.bottomright.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleInsetBottomrightFill = "rectangle.inset.bottomright.fill"

        /// SF Symbols's name：rectangle.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleInsetFill = "rectangle.inset.fill"

        /// SF Symbols's name：rectangle.inset.topleft.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleInsetTopleftFill = "rectangle.inset.topleft.fill"

        /// SF Symbols's name：rectangle.inset.topright.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleInsetToprightFill = "rectangle.inset.topright.fill"

        /// SF Symbols's name：rectangle.lefthalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleLefthalfFill = "rectangle.lefthalf.fill"

        /// SF Symbols's name：rectangle.lefthalf.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleLefthalfInsetFill = "rectangle.lefthalf.inset.fill"

        /// SF Symbols's name：rectangle.lefthalf.inset.fill.arrow.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleLefthalfInsetFillArrowLeft = "rectangle.lefthalf.inset.fill.arrow.left"

        /// SF Symbols's name：rectangle.leftthird.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleLeftthirdInsetFill = "rectangle.leftthird.inset.fill"

        /// SF Symbols's name：rectangle.on.rectangle.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleOnRectangleSlash = "rectangle.on.rectangle.slash"

        /// SF Symbols's name：rectangle.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectanglePortrait = "rectangle.portrait"

        /// SF Symbols's name：rectangle.portrait.arrowtriangle.2.inward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectanglePortraitArrowtriangle2Inward = "rectangle.portrait.arrowtriangle.2.inward"

        /// SF Symbols's name：rectangle.portrait.arrowtriangle.2.outward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectanglePortraitArrowtriangle2Outward = "rectangle.portrait.arrowtriangle.2.outward"

        /// SF Symbols's name：rectangle.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectanglePortraitFill = "rectangle.portrait.fill"

        /// SF Symbols's name：rectangle.righthalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRighthalfFill = "rectangle.righthalf.fill"

        /// SF Symbols's name：rectangle.righthalf.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRighthalfInsetFill = "rectangle.righthalf.inset.fill"

        /// SF Symbols's name：rectangle.righthalf.inset.fill.arrow.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRighthalfInsetFillArrowRight = "rectangle.righthalf.inset.fill.arrow.right"

        /// SF Symbols's name：rectangle.rightthird.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRightthirdInsetFill = "rectangle.rightthird.inset.fill"

        /// SF Symbols's name：rectangle.roundedbottom
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRoundedbottom = "rectangle.roundedbottom"

        /// SF Symbols's name：rectangle.roundedbottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRoundedbottomFill = "rectangle.roundedbottom.fill"

        /// SF Symbols's name：rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRoundedtop = "rectangle.roundedtop"

        /// SF Symbols's name：rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleRoundedtopFill = "rectangle.roundedtop.fill"

        /// SF Symbols's name：rectangle.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSlash = "rectangle.slash"

        /// SF Symbols's name：rectangle.slash.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSlashFill = "rectangle.slash.fill"

        /// SF Symbols's name：rectangle.split.1x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSplit1x2 = "rectangle.split.1x2"

        /// SF Symbols's name：rectangle.split.1x2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSplit1x2Fill = "rectangle.split.1x2.fill"

        /// SF Symbols's name：rectangle.split.2x1
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSplit2x1 = "rectangle.split.2x1"

        /// SF Symbols's name：rectangle.split.2x1.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSplit2x1Fill = "rectangle.split.2x1.fill"

        /// SF Symbols's name：rectangle.split.2x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSplit2x2 = "rectangle.split.2x2"

        /// SF Symbols's name：rectangle.split.2x2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rectangleSplit2x2Fill = "rectangle.split.2x2.fill"

        /// SF Symbols's name：restart
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case restart = "restart"

        /// SF Symbols's name：restart.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case restartCircle = "restart.circle"

        /// SF Symbols's name：rotate.3d
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rotate3d = "rotate.3d"

        /// SF Symbols's name：rt.rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rtRectangleRoundedtop = "rt.rectangle.roundedtop"

        /// SF Symbols's name：rt.rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rtRectangleRoundedtopFill = "rt.rectangle.roundedtop.fill"

        /// SF Symbols's name：ruler
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ruler = "ruler"

        /// SF Symbols's name：ruler.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case rulerFill = "ruler.fill"

        /// SF Symbols's name：scale.3d
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scale3d = "scale.3d"

        /// SF Symbols's name：scalemass
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scalemass = "scalemass"

        /// SF Symbols's name：scalemass.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scalemassFill = "scalemass.fill"

        /// SF Symbols's name：scanner
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scanner = "scanner"

        /// SF Symbols's name：scanner.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scannerFill = "scanner.fill"

        /// SF Symbols's name：scribble.variable
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scribbleVariable = "scribble.variable"

        /// SF Symbols's name：scroll
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scroll = "scroll"

        /// SF Symbols's name：scroll.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case scrollFill = "scroll.fill"

        /// SF Symbols's name：sdcard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sdcard = "sdcard"

        /// SF Symbols's name：sdcard.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sdcardFill = "sdcard.fill"

        /// SF Symbols's name：seal
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case seal = "seal"

        /// SF Symbols's name：seal.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sealFill = "seal.fill"

        /// SF Symbols's name：server.rack
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case serverRack = "server.rack"

        /// SF Symbols's name：shadow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shadow = "shadow"

        /// SF Symbols's name：shekelsign.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shekelsignCircle = "shekelsign.circle"

        /// SF Symbols's name：shekelsign.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shekelsignCircleFill = "shekelsign.circle.fill"

        /// SF Symbols's name：shekelsign.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shekelsignSquare = "shekelsign.square"

        /// SF Symbols's name：shekelsign.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shekelsignSquareFill = "shekelsign.square.fill"

        /// SF Symbols's name：shield.lefthalf.fill.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shieldLefthalfFillSlash = "shield.lefthalf.fill.slash"

        /// SF Symbols's name：shippingbox
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shippingbox = "shippingbox"

        /// SF Symbols's name：shippingbox.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case shippingboxFill = "shippingbox.fill"

        /// SF Symbols's name：sidebar.leading
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sidebarLeading = "sidebar.leading"

        /// SF Symbols's name：sidebar.squares.leading
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sidebarSquaresLeading = "sidebar.squares.leading"

        /// SF Symbols's name：sidebar.squares.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sidebarSquaresLeft = "sidebar.squares.left"

        /// SF Symbols's name：sidebar.squares.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sidebarSquaresRight = "sidebar.squares.right"

        /// SF Symbols's name：sidebar.squares.trailing
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sidebarSquaresTrailing = "sidebar.squares.trailing"

        /// SF Symbols's name：sidebar.trailing
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sidebarTrailing = "sidebar.trailing"

        /// SF Symbols's name：signature.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case signatureAr = "signature.ar"

        /// SF Symbols's name：signature.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case signatureHe = "signature.he"

        /// SF Symbols's name：signpost.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case signpostLeft = "signpost.left"

        /// SF Symbols's name：signpost.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case signpostLeftFill = "signpost.left.fill"

        /// SF Symbols's name：signpost.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case signpostRight = "signpost.right"

        /// SF Symbols's name：signpost.right.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case signpostRightFill = "signpost.right.fill"

        /// SF Symbols's name：simcard
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case simcard = "simcard"

        /// SF Symbols's name：simcard.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case simcard2 = "simcard.2"

        /// SF Symbols's name：simcard.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case simcard2Fill = "simcard.2.fill"

        /// SF Symbols's name：simcard.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case simcardFill = "simcard.fill"

        /// SF Symbols's name：sleep
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sleep = "sleep"

        /// SF Symbols's name：slider.horizontal.below.square.fill.and.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sliderHorizontalBelowSquareFillAndSquare = "slider.horizontal.below.square.fill.and.square"

        /// SF Symbols's name：slider.vertical.3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sliderVertical3 = "slider.vertical.3"

        /// SF Symbols's name：sparkle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sparkle = "sparkle"

        /// SF Symbols's name：sparkles.rectangle.stack
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sparklesRectangleStack = "sparkles.rectangle.stack"

        /// SF Symbols's name：sparkles.rectangle.stack.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sparklesRectangleStackFill = "sparkles.rectangle.stack.fill"

        /// SF Symbols's name：sparkles.square.fill.on.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sparklesSquareFillOnSquare = "sparkles.square.fill.on.square"

        /// SF Symbols's name：speaker.slash.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerSlashCircle = "speaker.slash.circle"

        /// SF Symbols's name：speaker.slash.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerSlashCircleFill = "speaker.slash.circle.fill"

        /// SF Symbols's name：speaker.slash.circle.fill.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerSlashCircleFillRtl = "speaker.slash.circle.fill.rtl"

        /// SF Symbols's name：speaker.slash.circle.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerSlashCircleRtl = "speaker.slash.circle.rtl"

        /// SF Symbols's name：speaker.wave.1
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave1 = "speaker.wave.1"

        /// SF Symbols's name：speaker.wave.1.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave1Fill = "speaker.wave.1.fill"

        /// SF Symbols's name：speaker.wave.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave2 = "speaker.wave.2"

        /// SF Symbols's name：speaker.wave.2.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave2Circle = "speaker.wave.2.circle"

        /// SF Symbols's name：speaker.wave.2.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave2CircleFill = "speaker.wave.2.circle.fill"

        /// SF Symbols's name：speaker.wave.2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave2Fill = "speaker.wave.2.fill"

        /// SF Symbols's name：speaker.wave.3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave3 = "speaker.wave.3"

        /// SF Symbols's name：speaker.wave.3.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case speakerWave3Fill = "speaker.wave.3.fill"

        /// SF Symbols's name：square.2.stack.3d
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square2Stack3d = "square.2.stack.3d"

        /// SF Symbols's name：square.2.stack.3d.bottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square2Stack3dBottomFill = "square.2.stack.3d.bottom.fill"

        /// SF Symbols's name：square.2.stack.3d.top.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square2Stack3dTopFill = "square.2.stack.3d.top.fill"

        /// SF Symbols's name：square.3.stack.3d
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square3Stack3d = "square.3.stack.3d"

        /// SF Symbols's name：square.3.stack.3d.bottom.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square3Stack3dBottomFill = "square.3.stack.3d.bottom.fill"

        /// SF Symbols's name：square.3.stack.3d.middle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square3Stack3dMiddleFill = "square.3.stack.3d.middle.fill"

        /// SF Symbols's name：square.3.stack.3d.top.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case square3Stack3dTopFill = "square.3.stack.3d.top.fill"

        /// SF Symbols's name：square.and.at.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareAndAtRectangle = "square.and.at.rectangle"

        /// SF Symbols's name：square.bottomhalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareBottomhalfFill = "square.bottomhalf.fill"

        /// SF Symbols's name：square.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareCircle = "square.circle"

        /// SF Symbols's name：square.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareCircleFill = "square.circle.fill"

        /// SF Symbols's name：square.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareDashed = "square.dashed"

        /// SF Symbols's name：square.dashed.inset.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareDashedInsetFill = "square.dashed.inset.fill"

        /// SF Symbols's name：square.fill.on.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareFillOnSquare = "square.fill.on.square"

        /// SF Symbols's name：square.fill.text.grid.1x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareFillTextGrid1x2 = "square.fill.text.grid.1x2"

        /// SF Symbols's name：square.grid.3x1.below.line.grid.1x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x1BelowLineGrid1x2 = "square.grid.3x1.below.line.grid.1x2"

        /// SF Symbols's name：square.grid.3x1.fill.below.line.grid.1x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x1FillBelowLineGrid1x2 = "square.grid.3x1.fill.below.line.grid.1x2"

        /// SF Symbols's name：square.grid.3x1.folder.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x1FolderBadgePlus = "square.grid.3x1.folder.badge.plus"

        /// SF Symbols's name：square.grid.3x1.folder.fill.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x1FolderFillBadgePlus = "square.grid.3x1.folder.fill.badge.plus"

        /// SF Symbols's name：square.grid.3x3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3 = "square.grid.3x3"

        /// SF Symbols's name：square.grid.3x3.bottomleft.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3BottomleftFill = "square.grid.3x3.bottomleft.fill"

        /// SF Symbols's name：square.grid.3x3.bottommiddle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3BottommiddleFill = "square.grid.3x3.bottommiddle.fill"

        /// SF Symbols's name：square.grid.3x3.bottomright.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3BottomrightFill = "square.grid.3x3.bottomright.fill"

        /// SF Symbols's name：square.grid.3x3.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3Fill = "square.grid.3x3.fill"

        /// SF Symbols's name：square.grid.3x3.fill.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3FillSquare = "square.grid.3x3.fill.square"

        /// SF Symbols's name：square.grid.3x3.middle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3MiddleFill = "square.grid.3x3.middle.fill"

        /// SF Symbols's name：square.grid.3x3.middleleft.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3MiddleleftFill = "square.grid.3x3.middleleft.fill"

        /// SF Symbols's name：square.grid.3x3.middleright.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3MiddlerightFill = "square.grid.3x3.middleright.fill"

        /// SF Symbols's name：square.grid.3x3.topleft.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3TopleftFill = "square.grid.3x3.topleft.fill"

        /// SF Symbols's name：square.grid.3x3.topmiddle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3TopmiddleFill = "square.grid.3x3.topmiddle.fill"

        /// SF Symbols's name：square.grid.3x3.topright.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareGrid3x3ToprightFill = "square.grid.3x3.topright.fill"

        /// SF Symbols's name：square.on.square.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareOnSquareDashed = "square.on.square.dashed"

        /// SF Symbols's name：square.on.square.squareshape.controlhandles
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareOnSquareSquareshapeControlhandles = "square.on.square.squareshape.controlhandles"

        /// SF Symbols's name：square.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSlash = "square.slash"

        /// SF Symbols's name：square.slash.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSlashFill = "square.slash.fill"

        /// SF Symbols's name：square.split.bottomrightquarter
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSplitBottomrightquarter = "square.split.bottomrightquarter"

        /// SF Symbols's name：square.split.bottomrightquarter.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSplitBottomrightquarterFill = "square.split.bottomrightquarter.fill"

        /// SF Symbols's name：square.split.diagonal
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSplitDiagonal = "square.split.diagonal"

        /// SF Symbols's name：square.split.diagonal.2x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSplitDiagonal2x2 = "square.split.diagonal.2x2"

        /// SF Symbols's name：square.split.diagonal.2x2.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSplitDiagonal2x2Fill = "square.split.diagonal.2x2.fill"

        /// SF Symbols's name：square.split.diagonal.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareSplitDiagonalFill = "square.split.diagonal.fill"

        /// SF Symbols's name：square.stack.3d.down.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareStack3dDownForward = "square.stack.3d.down.forward"

        /// SF Symbols's name：square.stack.3d.down.forward.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareStack3dDownForwardFill = "square.stack.3d.down.forward.fill"

        /// SF Symbols's name：square.stack.3d.forward.dottedline
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareStack3dForwardDottedline = "square.stack.3d.forward.dottedline"

        /// SF Symbols's name：square.stack.3d.forward.dottedline.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareStack3dForwardDottedlineFill = "square.stack.3d.forward.dottedline.fill"

        /// SF Symbols's name：square.stack.3d.up.badge.a
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareStack3dUpBadgeA = "square.stack.3d.up.badge.a"

        /// SF Symbols's name：square.stack.3d.up.badge.a.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareStack3dUpBadgeAFill = "square.stack.3d.up.badge.a.fill"

        /// SF Symbols's name：square.tophalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareTophalfFill = "square.tophalf.fill"

        /// SF Symbols's name：squareshape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshape = "squareshape"

        /// SF Symbols's name：squareshape.controlhandles.on.squareshape.controlhandles
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeControlhandlesOnSquareshapeControlhandles = "squareshape.controlhandles.on.squareshape.controlhandles"

        /// SF Symbols's name：squareshape.dashed.squareshape
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeDashedSquareshape = "squareshape.dashed.squareshape"

        /// SF Symbols's name：squareshape.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeFill = "squareshape.fill"

        /// SF Symbols's name：squareshape.split.2x2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeSplit2x2 = "squareshape.split.2x2"

        /// SF Symbols's name：squareshape.split.2x2.dotted
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeSplit2x2Dotted = "squareshape.split.2x2.dotted"

        /// SF Symbols's name：squareshape.split.3x3
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeSplit3x3 = "squareshape.split.3x3"

        /// SF Symbols's name：squareshape.squareshape.dashed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case squareshapeSquareshapeDashed = "squareshape.squareshape.dashed"

        /// SF Symbols's name：star.leadinghalf.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case starLeadinghalfFill = "star.leadinghalf.fill"

        /// SF Symbols's name：star.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case starSquare = "star.square"

        /// SF Symbols's name：star.square.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case starSquareFill = "star.square.fill"

        /// SF Symbols's name：staroflife.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case staroflifeCircle = "staroflife.circle"

        /// SF Symbols's name：staroflife.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case staroflifeCircleFill = "staroflife.circle.fill"

        /// SF Symbols's name：stethoscope
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case stethoscope = "stethoscope"

        /// SF Symbols's name：sum.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case sumAr = "sum.ar"

        /// SF Symbols's name：swift
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case swift = "swift"

        /// SF Symbols's name：switch.2
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case switch2 = "switch.2"

        /// SF Symbols's name：t.bubble.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tBubbleAr = "t.bubble.ar"

        /// SF Symbols's name：t.bubble.fill.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tBubbleFillAr = "t.bubble.fill.ar"

        /// SF Symbols's name：t.bubble.fill.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tBubbleFillHe = "t.bubble.fill.he"

        /// SF Symbols's name：t.bubble.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tBubbleHe = "t.bubble.he"

        /// SF Symbols's name：tablecells
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tablecells = "tablecells"

        /// SF Symbols's name：tablecells.badge.ellipsis
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tablecellsBadgeEllipsis = "tablecells.badge.ellipsis"

        /// SF Symbols's name：tablecells.badge.ellipsis.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tablecellsBadgeEllipsisFill = "tablecells.badge.ellipsis.fill"

        /// SF Symbols's name：tablecells.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tablecellsFill = "tablecells.fill"

        /// SF Symbols's name：tag.slash
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tagSlash = "tag.slash"

        /// SF Symbols's name：tag.slash.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tagSlashFill = "tag.slash.fill"

        /// SF Symbols's name：target
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case target = "target"

        /// SF Symbols's name：teletype.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case teletypeCircle = "teletype.circle"

        /// SF Symbols's name：teletype.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case teletypeCircleFill = "teletype.circle.fill"

        /// SF Symbols's name：terminal
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case terminal = "terminal"

        /// SF Symbols's name：terminal.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case terminalFill = "terminal.fill"

        /// SF Symbols's name：text.and.command.macwindow
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textAndCommandMacwindow = "text.and.command.macwindow"

        /// SF Symbols's name：text.badge.checkmark.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBadgeCheckmarkRtl = "text.badge.checkmark.rtl"

        /// SF Symbols's name：text.below.photo
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBelowPhoto = "text.below.photo"

        /// SF Symbols's name：text.below.photo.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBelowPhotoFill = "text.below.photo.fill"

        /// SF Symbols's name：text.book.closed
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBookClosed = "text.book.closed"

        /// SF Symbols's name：text.book.closed.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBookClosedFill = "text.book.closed.fill"

        /// SF Symbols's name：text.bubble.fill.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBubbleFillRtl = "text.bubble.fill.rtl"

        /// SF Symbols's name：text.bubble.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textBubbleRtl = "text.bubble.rtl"

        /// SF Symbols's name：text.cursor.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorAr = "text.cursor.ar"

        /// SF Symbols's name：text.cursor.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorHe = "text.cursor.he"

        /// SF Symbols's name：text.cursor.hi
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorHi = "text.cursor.hi"

        /// SF Symbols's name：text.cursor.ja
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorJa = "text.cursor.ja"

        /// SF Symbols's name：text.cursor.ko
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorKo = "text.cursor.ko"

        /// SF Symbols's name：text.cursor.th
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorTh = "text.cursor.th"

        /// SF Symbols's name：text.cursor.zh
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textCursorZh = "text.cursor.zh"

        /// SF Symbols's name：text.magnifyingglass
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textMagnifyingglass = "text.magnifyingglass"

        /// SF Symbols's name：text.magnifyingglass.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textMagnifyingglassRtl = "text.magnifyingglass.rtl"

        /// SF Symbols's name：text.quote.rtl
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textQuoteRtl = "text.quote.rtl"

        /// SF Symbols's name：text.redaction
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textRedaction = "text.redaction"

        /// SF Symbols's name：textbox.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxAr = "textbox.ar"

        /// SF Symbols's name：textbox.he
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxHe = "textbox.he"

        /// SF Symbols's name：textbox.hi
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxHi = "textbox.hi"

        /// SF Symbols's name：textbox.ja
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxJa = "textbox.ja"

        /// SF Symbols's name：textbox.ko
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxKo = "textbox.ko"

        /// SF Symbols's name：textbox.th
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxTh = "textbox.th"

        /// SF Symbols's name：textbox.zh
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textboxZh = "textbox.zh"

        /// SF Symbols's name：textformat.123.ar
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case textformat123Ar = "textformat.123.ar"

        /// SF Symbols's name：thermometer.sun.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case thermometerSunFill = "thermometer.sun.fill"

        /// SF Symbols's name：ticket
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ticket = "ticket"

        /// SF Symbols's name：ticket.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case ticketFill = "ticket.fill"

        /// SF Symbols's name：timeline.selection
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case timelineSelection = "timeline.selection"

        /// SF Symbols's name：timer.square
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case timerSquare = "timer.square"

        /// SF Symbols's name：togglepower
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case togglepower = "togglepower"

        /// SF Symbols's name：touchid
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case touchid = "touchid"

        /// SF Symbols's name：tram
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tram = "tram"

        /// SF Symbols's name：tram.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tramCircle = "tram.circle"

        /// SF Symbols's name：tram.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tramCircleFill = "tram.circle.fill"

        /// SF Symbols's name：tram.tunnel.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tramTunnelFill = "tram.tunnel.fill"

        /// SF Symbols's name：tray.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case trayCircle = "tray.circle"

        /// SF Symbols's name：tray.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case trayCircleFill = "tray.circle.fill"

        /// SF Symbols's name：triangle.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case triangleCircle = "triangle.circle"

        /// SF Symbols's name：triangle.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case triangleCircleFill = "triangle.circle.fill"

        /// SF Symbols's name：tv.and.hifispeaker.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case tvAndHifispeakerFill = "tv.and.hifispeaker.fill"

        /// SF Symbols's name：video.badge.checkmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case videoBadgeCheckmark = "video.badge.checkmark"

        /// SF Symbols's name：video.bubble.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case videoBubbleLeft = "video.bubble.left"

        /// SF Symbols's name：video.bubble.left.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case videoBubbleLeftFill = "video.bubble.left.fill"

        /// SF Symbols's name：video.fill.badge.checkmark
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case videoFillBadgeCheckmark = "video.fill.badge.checkmark"

        /// SF Symbols's name：video.fill.badge.plus
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case videoFillBadgePlus = "video.fill.badge.plus"

        /// SF Symbols's name：wake
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wake = "wake"

        /// SF Symbols's name：wallet.pass
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case walletPass = "wallet.pass"

        /// SF Symbols's name：wallet.pass.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case walletPassFill = "wallet.pass.fill"

        /// SF Symbols's name：wave.3.backward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3Backward = "wave.3.backward"

        /// SF Symbols's name：wave.3.backward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3BackwardCircle = "wave.3.backward.circle"

        /// SF Symbols's name：wave.3.backward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3BackwardCircleFill = "wave.3.backward.circle.fill"

        /// SF Symbols's name：wave.3.forward
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3Forward = "wave.3.forward"

        /// SF Symbols's name：wave.3.forward.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3ForwardCircle = "wave.3.forward.circle"

        /// SF Symbols's name：wave.3.forward.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3ForwardCircleFill = "wave.3.forward.circle.fill"

        /// SF Symbols's name：wave.3.left
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3Left = "wave.3.left"

        /// SF Symbols's name：wave.3.left.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3LeftCircle = "wave.3.left.circle"

        /// SF Symbols's name：wave.3.left.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3LeftCircleFill = "wave.3.left.circle.fill"

        /// SF Symbols's name：wave.3.right
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3Right = "wave.3.right"

        /// SF Symbols's name：wave.3.right.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3RightCircle = "wave.3.right.circle"

        /// SF Symbols's name：wave.3.right.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wave3RightCircleFill = "wave.3.right.circle.fill"

        /// SF Symbols's name：waveform.path.ecg.rectangle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case waveformPathEcgRectangle = "waveform.path.ecg.rectangle"

        /// SF Symbols's name：waveform.path.ecg.rectangle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case waveformPathEcgRectangleFill = "waveform.path.ecg.rectangle.fill"

        /// SF Symbols's name：wrench.and.screwdriver
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wrenchAndScrewdriver = "wrench.and.screwdriver"

        /// SF Symbols's name：wrench.and.screwdriver.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case wrenchAndScrewdriverFill = "wrench.and.screwdriver.fill"

        /// SF Symbols's name：xmark.bin
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkBin = "xmark.bin"

        /// SF Symbols's name：xmark.bin.circle
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkBinCircle = "xmark.bin.circle"

        /// SF Symbols's name：xmark.bin.circle.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkBinCircleFill = "xmark.bin.circle.fill"

        /// SF Symbols's name：xmark.bin.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkBinFill = "xmark.bin.fill"

        /// SF Symbols's name：xmark.diamond
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkDiamond = "xmark.diamond"

        /// SF Symbols's name：xmark.diamond.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkDiamondFill = "xmark.diamond.fill"

        /// SF Symbols's name：xmark.rectangle.portrait
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkRectanglePortrait = "xmark.rectangle.portrait"

        /// SF Symbols's name：xmark.rectangle.portrait.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xmarkRectanglePortraitFill = "xmark.rectangle.portrait.fill"

        /// SF Symbols's name：xserve
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case xserve = "xserve"

        /// SF Symbols's name：zl.rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case zlRectangleRoundedtop = "zl.rectangle.roundedtop"

        /// SF Symbols's name：zl.rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case zlRectangleRoundedtopFill = "zl.rectangle.roundedtop.fill"

        /// SF Symbols's name：zr.rectangle.roundedtop
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case zrRectangleRoundedtop = "zr.rectangle.roundedtop"

        /// SF Symbols's name：zr.rectangle.roundedtop.fill
        @available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *)
        case zrRectangleRoundedtopFill = "zr.rectangle.roundedtop.fill"

        /// SF Symbols's name：aqi.high
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case aqiHigh = "aqi.high"

        /// SF Symbols's name：aqi.low
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case aqiLow = "aqi.low"

        /// SF Symbols's name：aqi.medium
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case aqiMedium = "aqi.medium"

        /// SF Symbols's name：brazilianrealsign.circle
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case brazilianrealsignCircle = "brazilianrealsign.circle"

        /// SF Symbols's name：brazilianrealsign.circle.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case brazilianrealsignCircleFill = "brazilianrealsign.circle.fill"

        /// SF Symbols's name：brazilianrealsign.square
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case brazilianrealsignSquare = "brazilianrealsign.square"

        /// SF Symbols's name：brazilianrealsign.square.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case brazilianrealsignSquareFill = "brazilianrealsign.square.fill"

        /// SF Symbols's name：cart.circle
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case cartCircle = "cart.circle"

        /// SF Symbols's name：cart.circle.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case cartCircleFill = "cart.circle.fill"

        /// SF Symbols's name：character
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case character = "character"

        /// SF Symbols's name：character.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterAr = "character.ar"

        /// SF Symbols's name：character.book.closed
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosed = "character.book.closed"

        /// SF Symbols's name：character.book.closed.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedAr = "character.book.closed.ar"

        /// SF Symbols's name：character.book.closed.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFill = "character.book.closed.fill"

        /// SF Symbols's name：character.book.closed.fill.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillAr = "character.book.closed.fill.ar"

        /// SF Symbols's name：character.book.closed.fill.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillHe = "character.book.closed.fill.he"

        /// SF Symbols's name：character.book.closed.fill.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillHi = "character.book.closed.fill.hi"

        /// SF Symbols's name：character.book.closed.fill.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillJa = "character.book.closed.fill.ja"

        /// SF Symbols's name：character.book.closed.fill.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillKo = "character.book.closed.fill.ko"

        /// SF Symbols's name：character.book.closed.fill.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillTh = "character.book.closed.fill.th"

        /// SF Symbols's name：character.book.closed.fill.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedFillZh = "character.book.closed.fill.zh"

        /// SF Symbols's name：character.book.closed.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedHe = "character.book.closed.he"

        /// SF Symbols's name：character.book.closed.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedHi = "character.book.closed.hi"

        /// SF Symbols's name：character.book.closed.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedJa = "character.book.closed.ja"

        /// SF Symbols's name：character.book.closed.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedKo = "character.book.closed.ko"

        /// SF Symbols's name：character.book.closed.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedTh = "character.book.closed.th"

        /// SF Symbols's name：character.book.closed.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterBookClosedZh = "character.book.closed.zh"

        /// SF Symbols's name：character.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterHe = "character.he"

        /// SF Symbols's name：character.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterHi = "character.hi"

        /// SF Symbols's name：character.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterJa = "character.ja"

        /// SF Symbols's name：character.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterKo = "character.ko"

        /// SF Symbols's name：character.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterTh = "character.th"

        /// SF Symbols's name：character.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case characterZh = "character.zh"

        /// SF Symbols's name：clock.arrow.2.circlepath
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case clockArrow2Circlepath = "clock.arrow.2.circlepath"

        /// SF Symbols's name：directcurrent
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case directcurrent = "directcurrent"

        /// SF Symbols's name：doc.text.below.ecg.fill.rtl
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case docTextBelowEcgFillRtl = "doc.text.below.ecg.fill.rtl"

        /// SF Symbols's name：doc.text.below.ecg.rtl
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case docTextBelowEcgRtl = "doc.text.below.ecg.rtl"

        /// SF Symbols's name：exclamationmark.applewatch
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case exclamationmarkApplewatch = "exclamationmark.applewatch"

        /// SF Symbols's name：infinity.circle
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case infinityCircle = "infinity.circle"

        /// SF Symbols's name：infinity.circle.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case infinityCircleFill = "infinity.circle.fill"

        /// SF Symbols's name：ipad.badge.play
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case ipadBadgePlay = "ipad.badge.play"

        /// SF Symbols's name：ipad.homebutton.badge.play
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case ipadHomebuttonBadgePlay = "ipad.homebutton.badge.play"

        /// SF Symbols's name：ipad.homebutton.landscape.badge.play
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case ipadHomebuttonLandscapeBadgePlay = "ipad.homebutton.landscape.badge.play"

        /// SF Symbols's name：ipad.landscape.badge.play
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case ipadLandscapeBadgePlay = "ipad.landscape.badge.play"

        /// SF Symbols's name：iphone.badge.play
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case iphoneBadgePlay = "iphone.badge.play"

        /// SF Symbols's name：iphone.homebutton.badge.play
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case iphoneHomebuttonBadgePlay = "iphone.homebutton.badge.play"

        /// SF Symbols's name：iphone.homebutton.landscape
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case iphoneHomebuttonLandscape = "iphone.homebutton.landscape"

        /// SF Symbols's name：iphone.landscape
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case iphoneLandscape = "iphone.landscape"

        /// SF Symbols's name：ipodtouch.landscape
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case ipodtouchLandscape = "ipodtouch.landscape"

        /// SF Symbols's name：lock.applewatch
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case lockApplewatch = "lock.applewatch"

        /// SF Symbols's name：photo.tv
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case photoTv = "photo.tv"

        /// SF Symbols's name：play.tv
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case playTv = "play.tv"

        /// SF Symbols's name：play.tv.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case playTvFill = "play.tv.fill"

        /// SF Symbols's name：rectangle.badge.person.crop
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case rectangleBadgePersonCrop = "rectangle.badge.person.crop"

        /// SF Symbols's name：rectangle.fill.badge.person.crop
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case rectangleFillBadgePersonCrop = "rectangle.fill.badge.person.crop"

        /// SF Symbols's name：rectangle.topthird.inset
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case rectangleTopthirdInset = "rectangle.topthird.inset"

        /// SF Symbols's name：repeat.1.circle
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case repeat1Circle = "repeat.1.circle"

        /// SF Symbols's name：repeat.1.circle.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case repeat1CircleFill = "repeat.1.circle.fill"

        /// SF Symbols's name：repeat.circle
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case repeatCircle = "repeat.circle"

        /// SF Symbols's name：repeat.circle.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case repeatCircleFill = "repeat.circle.fill"

        /// SF Symbols's name：shield.checkerboard
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case shieldCheckerboard = "shield.checkerboard"

        /// SF Symbols's name：shuffle.circle
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case shuffleCircle = "shuffle.circle"

        /// SF Symbols's name：shuffle.circle.fill
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case shuffleCircleFill = "shuffle.circle.fill"

        /// SF Symbols's name：text.below.photo.fill.rtl
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textBelowPhotoFillRtl = "text.below.photo.fill.rtl"

        /// SF Symbols's name：text.below.photo.rtl
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textBelowPhotoRtl = "text.below.photo.rtl"

        /// SF Symbols's name：textformat.size.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeAr = "textformat.size.ar"

        /// SF Symbols's name：textformat.size.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeHe = "textformat.size.he"

        /// SF Symbols's name：textformat.size.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeHi = "textformat.size.hi"

        /// SF Symbols's name：textformat.size.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeJa = "textformat.size.ja"

        /// SF Symbols's name：textformat.size.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeKo = "textformat.size.ko"

        /// SF Symbols's name：textformat.size.larger
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLarger = "textformat.size.larger"

        /// SF Symbols's name：textformat.size.larger.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerAr = "textformat.size.larger.ar"

        /// SF Symbols's name：textformat.size.larger.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerHe = "textformat.size.larger.he"

        /// SF Symbols's name：textformat.size.larger.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerHi = "textformat.size.larger.hi"

        /// SF Symbols's name：textformat.size.larger.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerJa = "textformat.size.larger.ja"

        /// SF Symbols's name：textformat.size.larger.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerKo = "textformat.size.larger.ko"

        /// SF Symbols's name：textformat.size.larger.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerTh = "textformat.size.larger.th"

        /// SF Symbols's name：textformat.size.larger.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeLargerZh = "textformat.size.larger.zh"

        /// SF Symbols's name：textformat.size.smaller
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmaller = "textformat.size.smaller"

        /// SF Symbols's name：textformat.size.smaller.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerAr = "textformat.size.smaller.ar"

        /// SF Symbols's name：textformat.size.smaller.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerHe = "textformat.size.smaller.he"

        /// SF Symbols's name：textformat.size.smaller.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerHi = "textformat.size.smaller.hi"

        /// SF Symbols's name：textformat.size.smaller.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerJa = "textformat.size.smaller.ja"

        /// SF Symbols's name：textformat.size.smaller.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerKo = "textformat.size.smaller.ko"

        /// SF Symbols's name：textformat.size.smaller.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerTh = "textformat.size.smaller.th"

        /// SF Symbols's name：textformat.size.smaller.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeSmallerZh = "textformat.size.smaller.zh"

        /// SF Symbols's name：textformat.size.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeTh = "textformat.size.th"

        /// SF Symbols's name：textformat.size.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSizeZh = "textformat.size.zh"

        /// SF Symbols's name：textformat.subscript.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptAr = "textformat.subscript.ar"

        /// SF Symbols's name：textformat.subscript.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptHe = "textformat.subscript.he"

        /// SF Symbols's name：textformat.subscript.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptHi = "textformat.subscript.hi"

        /// SF Symbols's name：textformat.subscript.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptJa = "textformat.subscript.ja"

        /// SF Symbols's name：textformat.subscript.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptKo = "textformat.subscript.ko"

        /// SF Symbols's name：textformat.subscript.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptTh = "textformat.subscript.th"

        /// SF Symbols's name：textformat.subscript.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSubscriptZh = "textformat.subscript.zh"

        /// SF Symbols's name：textformat.superscript.ar
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptAr = "textformat.superscript.ar"

        /// SF Symbols's name：textformat.superscript.he
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptHe = "textformat.superscript.he"

        /// SF Symbols's name：textformat.superscript.hi
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptHi = "textformat.superscript.hi"

        /// SF Symbols's name：textformat.superscript.ja
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptJa = "textformat.superscript.ja"

        /// SF Symbols's name：textformat.superscript.ko
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptKo = "textformat.superscript.ko"

        /// SF Symbols's name：textformat.superscript.th
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptTh = "textformat.superscript.th"

        /// SF Symbols's name：textformat.superscript.zh
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case textformatSuperscriptZh = "textformat.superscript.zh"

        /// SF Symbols's name：torus
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case torus = "torus"

        /// SF Symbols's name：tv.and.mediabox
        @available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *)
        case tvAndMediabox = "tv.and.mediabox"

        /// SF Symbols's name：airpodsmax
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case airpodsmax = "airpodsmax"

        /// SF Symbols's name：applewatch.side.right
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case applewatchSideRight = "applewatch.side.right"

        /// SF Symbols's name：character.bubble
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterBubble = "character.bubble"

        /// SF Symbols's name：character.bubble.ar
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterBubbleAr = "character.bubble.ar"

        /// SF Symbols's name：character.bubble.fill
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterBubbleFill = "character.bubble.fill"

        /// SF Symbols's name：character.bubble.fill.ar
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterBubbleFillAr = "character.bubble.fill.ar"

        /// SF Symbols's name：character.bubble.fill.he
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterBubbleFillHe = "character.bubble.fill.he"

        /// SF Symbols's name：character.bubble.he
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterBubbleHe = "character.bubble.he"

        /// SF Symbols's name：character.cursor.ibeam
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeam = "character.cursor.ibeam"

        /// SF Symbols's name：character.cursor.ibeam.ar
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamAr = "character.cursor.ibeam.ar"

        /// SF Symbols's name：character.cursor.ibeam.he
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamHe = "character.cursor.ibeam.he"

        /// SF Symbols's name：character.cursor.ibeam.hi
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamHi = "character.cursor.ibeam.hi"

        /// SF Symbols's name：character.cursor.ibeam.ja
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamJa = "character.cursor.ibeam.ja"

        /// SF Symbols's name：character.cursor.ibeam.ko
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamKo = "character.cursor.ibeam.ko"

        /// SF Symbols's name：character.cursor.ibeam.th
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamTh = "character.cursor.ibeam.th"

        /// SF Symbols's name：character.cursor.ibeam.zh
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterCursorIbeamZh = "character.cursor.ibeam.zh"

        /// SF Symbols's name：character.textbox
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextbox = "character.textbox"

        /// SF Symbols's name：character.textbox.ar
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxAr = "character.textbox.ar"

        /// SF Symbols's name：character.textbox.he
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxHe = "character.textbox.he"

        /// SF Symbols's name：character.textbox.hi
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxHi = "character.textbox.hi"

        /// SF Symbols's name：character.textbox.ja
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxJa = "character.textbox.ja"

        /// SF Symbols's name：character.textbox.ko
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxKo = "character.textbox.ko"

        /// SF Symbols's name：character.textbox.th
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxTh = "character.textbox.th"

        /// SF Symbols's name：character.textbox.zh
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case characterTextboxZh = "character.textbox.zh"

        /// SF Symbols's name：hifispeaker.and.homepodmini
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case hifispeakerAndHomepodmini = "hifispeaker.and.homepodmini"

        /// SF Symbols's name：hifispeaker.and.homepodmini.fill
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case hifispeakerAndHomepodminiFill = "hifispeaker.and.homepodmini.fill"

        /// SF Symbols's name：homepod.and.homepodmini
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case homepodAndHomepodmini = "homepod.and.homepodmini"

        /// SF Symbols's name：homepod.and.homepodmini.fill
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case homepodAndHomepodminiFill = "homepod.and.homepodmini.fill"

        /// SF Symbols's name：homepodmini
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case homepodmini = "homepodmini"

        /// SF Symbols's name：homepodmini.2
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case homepodmini2 = "homepodmini.2"

        /// SF Symbols's name：homepodmini.2.fill
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case homepodmini2Fill = "homepodmini.2.fill"

        /// SF Symbols's name：homepodmini.fill
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case homepodminiFill = "homepodmini.fill"

        /// SF Symbols's name：rectangle.topthird.inset.fill
        @available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *)
        case rectangleTopthirdInsetFill = "rectangle.topthird.inset.fill"

        /// SF Symbols's name：1.magnifyingglass.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _1MagnifyingglassHi = "1.magnifyingglass.hi"

        /// SF Symbols's name：123.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _123Rectangle = "123.rectangle"

        /// SF Symbols's name：123.rectangle.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _123RectangleAr = "123.rectangle.ar"

        /// SF Symbols's name：123.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _123RectangleFill = "123.rectangle.fill"

        /// SF Symbols's name：123.rectangle.fill.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _123RectangleFillAr = "123.rectangle.fill.ar"

        /// SF Symbols's name：123.rectangle.fill.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _123RectangleFillHi = "123.rectangle.fill.hi"

        /// SF Symbols's name：123.rectangle.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case _123RectangleHi = "123.rectangle.hi"

        /// SF Symbols's name：airplane.arrival
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplaneArrival = "airplane.arrival"

        /// SF Symbols's name：airplane.departure
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplaneDeparture = "airplane.departure"

        /// SF Symbols's name：airplayaudio.badge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplayaudioBadgeExclamationmark = "airplayaudio.badge.exclamationmark"

        /// SF Symbols's name：airplayaudio.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplayaudioCircle = "airplayaudio.circle"

        /// SF Symbols's name：airplayaudio.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplayaudioCircleFill = "airplayaudio.circle.fill"

        /// SF Symbols's name：airplayvideo.badge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplayvideoBadgeExclamationmark = "airplayvideo.badge.exclamationmark"

        /// SF Symbols's name：airplayvideo.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplayvideoCircle = "airplayvideo.circle"

        /// SF Symbols's name：airplayvideo.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airplayvideoCircleFill = "airplayvideo.circle.fill"

        /// SF Symbols's name：airpods.chargingcase
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airpodsChargingcase = "airpods.chargingcase"

        /// SF Symbols's name：airpods.chargingcase.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airpodsChargingcaseFill = "airpods.chargingcase.fill"

        /// SF Symbols's name：airpods.chargingcase.wireless
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airpodsChargingcaseWireless = "airpods.chargingcase.wireless"

        /// SF Symbols's name：airpods.chargingcase.wireless.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airpodsChargingcaseWirelessFill = "airpods.chargingcase.wireless.fill"

        /// SF Symbols's name：airpodspro.chargingcase.wireless
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airpodsproChargingcaseWireless = "airpodspro.chargingcase.wireless"

        /// SF Symbols's name：airpodspro.chargingcase.wireless.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airpodsproChargingcaseWirelessFill = "airpodspro.chargingcase.wireless.fill"

        /// SF Symbols's name：airtag
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airtag = "airtag"

        /// SF Symbols's name：airtag.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airtagFill = "airtag.fill"

        /// SF Symbols's name：airtag.radiowaves.forward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airtagRadiowavesForward = "airtag.radiowaves.forward"

        /// SF Symbols's name：airtag.radiowaves.forward.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airtagRadiowavesForwardFill = "airtag.radiowaves.forward.fill"

        /// SF Symbols's name：airtag.radiowaves.forward.fill.rtl
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airtagRadiowavesForwardFillRtl = "airtag.radiowaves.forward.fill.rtl"

        /// SF Symbols's name：airtag.radiowaves.forward.rtl
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case airtagRadiowavesForwardRtl = "airtag.radiowaves.forward.rtl"

        /// SF Symbols's name：align.horizontal.center
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignHorizontalCenter = "align.horizontal.center"

        /// SF Symbols's name：align.horizontal.center.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignHorizontalCenterFill = "align.horizontal.center.fill"

        /// SF Symbols's name：align.horizontal.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignHorizontalLeft = "align.horizontal.left"

        /// SF Symbols's name：align.horizontal.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignHorizontalLeftFill = "align.horizontal.left.fill"

        /// SF Symbols's name：align.horizontal.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignHorizontalRight = "align.horizontal.right"

        /// SF Symbols's name：align.horizontal.right.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignHorizontalRightFill = "align.horizontal.right.fill"

        /// SF Symbols's name：align.vertical.bottom
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignVerticalBottom = "align.vertical.bottom"

        /// SF Symbols's name：align.vertical.bottom.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignVerticalBottomFill = "align.vertical.bottom.fill"

        /// SF Symbols's name：align.vertical.center
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignVerticalCenter = "align.vertical.center"

        /// SF Symbols's name：align.vertical.center.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignVerticalCenterFill = "align.vertical.center.fill"

        /// SF Symbols's name：align.vertical.top
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignVerticalTop = "align.vertical.top"

        /// SF Symbols's name：align.vertical.top.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alignVerticalTopFill = "align.vertical.top.fill"

        /// SF Symbols's name：allergens
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case allergens = "allergens"

        /// SF Symbols's name：alternatingcurrent
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case alternatingcurrent = "alternatingcurrent"

        /// SF Symbols's name：antenna.radiowaves.left.and.right.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case antennaRadiowavesLeftAndRightCircle = "antenna.radiowaves.left.and.right.circle"

        /// SF Symbols's name：antenna.radiowaves.left.and.right.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case antennaRadiowavesLeftAndRightCircleFill = "antenna.radiowaves.left.and.right.circle.fill"

        /// SF Symbols's name：antenna.radiowaves.left.and.right.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case antennaRadiowavesLeftAndRightSlash = "antenna.radiowaves.left.and.right.slash"

        /// SF Symbols's name：app.badge.checkmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appBadgeCheckmark = "app.badge.checkmark"

        /// SF Symbols's name：app.badge.checkmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appBadgeCheckmarkFill = "app.badge.checkmark.fill"

        /// SF Symbols's name：app.connected.to.app.below.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appConnectedToAppBelowFill = "app.connected.to.app.below.fill"

        /// SF Symbols's name：app.dashed
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appDashed = "app.dashed"

        /// SF Symbols's name：applepencil
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case applepencil = "applepencil"

        /// SF Symbols's name：appletvremote.gen1
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen1 = "appletvremote.gen1"

        /// SF Symbols's name：appletvremote.gen1.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen1Fill = "appletvremote.gen1.fill"

        /// SF Symbols's name：appletvremote.gen2
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen2 = "appletvremote.gen2"

        /// SF Symbols's name：appletvremote.gen2.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen2Fill = "appletvremote.gen2.fill"

        /// SF Symbols's name：appletvremote.gen3
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen3 = "appletvremote.gen3"

        /// SF Symbols's name：appletvremote.gen3.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen3Fill = "appletvremote.gen3.fill"

        /// SF Symbols's name：appletvremote.gen4
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen4 = "appletvremote.gen4"

        /// SF Symbols's name：appletvremote.gen4.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case appletvremoteGen4Fill = "appletvremote.gen4.fill"

        /// SF Symbols's name：applewatch.case.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case applewatchCaseInsetFilled = "applewatch.case.inset.filled"

        /// SF Symbols's name：arkit.badge.xmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arkitBadgeXmark = "arkit.badge.xmark"

        /// SF Symbols's name：arrow.backward.to.line
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowBackwardToLine = "arrow.backward.to.line"

        /// SF Symbols's name：arrow.backward.to.line.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowBackwardToLineCircle = "arrow.backward.to.line.circle"

        /// SF Symbols's name：arrow.backward.to.line.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowBackwardToLineCircleFill = "arrow.backward.to.line.circle.fill"

        /// SF Symbols's name：arrow.down.to.line.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowDownToLineCircle = "arrow.down.to.line.circle"

        /// SF Symbols's name：arrow.down.to.line.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowDownToLineCircleFill = "arrow.down.to.line.circle.fill"

        /// SF Symbols's name：arrow.down.to.line.compact
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowDownToLineCompact = "arrow.down.to.line.compact"

        /// SF Symbols's name：arrow.forward.to.line
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowForwardToLine = "arrow.forward.to.line"

        /// SF Symbols's name：arrow.forward.to.line.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowForwardToLineCircle = "arrow.forward.to.line.circle"

        /// SF Symbols's name：arrow.forward.to.line.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowForwardToLineCircleFill = "arrow.forward.to.line.circle.fill"

        /// SF Symbols's name：arrow.left.to.line.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowLeftToLineCircle = "arrow.left.to.line.circle"

        /// SF Symbols's name：arrow.left.to.line.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowLeftToLineCircleFill = "arrow.left.to.line.circle.fill"

        /// SF Symbols's name：arrow.left.to.line.compact
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowLeftToLineCompact = "arrow.left.to.line.compact"

        /// SF Symbols's name：arrow.right.to.line.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowRightToLineCircle = "arrow.right.to.line.circle"

        /// SF Symbols's name：arrow.right.to.line.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowRightToLineCircleFill = "arrow.right.to.line.circle.fill"

        /// SF Symbols's name：arrow.right.to.line.compact
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowRightToLineCompact = "arrow.right.to.line.compact"

        /// SF Symbols's name：arrow.up.and.down.righttriangle.up.righttriangle.down.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowUpAndDownRighttriangleUpRighttriangleDownFill = "arrow.up.and.down.righttriangle.up.righttriangle.down.fill"

        /// SF Symbols's name：arrow.up.to.line.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowUpToLineCircle = "arrow.up.to.line.circle"

        /// SF Symbols's name：arrow.up.to.line.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowUpToLineCircleFill = "arrow.up.to.line.circle.fill"

        /// SF Symbols's name：arrow.up.to.line.compact
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowUpToLineCompact = "arrow.up.to.line.compact"

        /// SF Symbols's name：arrowtriangle.left.and.line.vertical.and.arrowtriangle.right.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowtriangleLeftAndLineVerticalAndArrowtriangleRightFill = "arrowtriangle.left.and.line.vertical.and.arrowtriangle.right.fill"

        /// SF Symbols's name：arrowtriangle.right.and.line.vertical.and.arrowtriangle.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case arrowtriangleRightAndLineVerticalAndArrowtriangleLeftFill = "arrowtriangle.right.and.line.vertical.and.arrowtriangle.left.fill"

        /// SF Symbols's name：asterisk
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case asterisk = "asterisk"

        /// SF Symbols's name：backward.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case backwardCircle = "backward.circle"

        /// SF Symbols's name：backward.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case backwardCircleFill = "backward.circle.fill"

        /// SF Symbols's name：battery.50
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case battery50 = "battery.50"

        /// SF Symbols's name：battery.75
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case battery75 = "battery.75"

        /// SF Symbols's name：beats.earphones
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsEarphones = "beats.earphones"

        /// SF Symbols's name：beats.headphones
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsHeadphones = "beats.headphones"

        /// SF Symbols's name：beats.powerbeats
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeats = "beats.powerbeats"

        /// SF Symbols's name：beats.powerbeats3
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeats3 = "beats.powerbeats3"

        /// SF Symbols's name：beats.powerbeatspro
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeatspro = "beats.powerbeatspro"

        /// SF Symbols's name：beats.powerbeatspro.chargingcase
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeatsproChargingcase = "beats.powerbeatspro.chargingcase"

        /// SF Symbols's name：beats.powerbeatspro.chargingcase.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeatsproChargingcaseFill = "beats.powerbeatspro.chargingcase.fill"

        /// SF Symbols's name：beats.powerbeatspro.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeatsproLeft = "beats.powerbeatspro.left"

        /// SF Symbols's name：beats.powerbeatspro.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsPowerbeatsproRight = "beats.powerbeatspro.right"

        /// SF Symbols's name：beats.studiobud.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsStudiobudLeft = "beats.studiobud.left"

        /// SF Symbols's name：beats.studiobud.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsStudiobudRight = "beats.studiobud.right"

        /// SF Symbols's name：beats.studiobuds
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsStudiobuds = "beats.studiobuds"

        /// SF Symbols's name：beats.studiobuds.chargingcase
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsStudiobudsChargingcase = "beats.studiobuds.chargingcase"

        /// SF Symbols's name：beats.studiobuds.chargingcase.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case beatsStudiobudsChargingcaseFill = "beats.studiobuds.chargingcase.fill"

        /// SF Symbols's name：bed.double.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bedDoubleCircle = "bed.double.circle"

        /// SF Symbols's name：bed.double.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bedDoubleCircleFill = "bed.double.circle.fill"

        /// SF Symbols's name：bell.and.waveform
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bellAndWaveform = "bell.and.waveform"

        /// SF Symbols's name：bell.and.waveform.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bellAndWaveformFill = "bell.and.waveform.fill"

        /// SF Symbols's name：bell.badge.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bellBadgeCircle = "bell.badge.circle"

        /// SF Symbols's name：bell.badge.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bellBadgeCircleFill = "bell.badge.circle.fill"

        /// SF Symbols's name：bell.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bellSquare = "bell.square"

        /// SF Symbols's name：bell.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bellSquareFill = "bell.square.fill"

        /// SF Symbols's name：bolt.batteryblock
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltBatteryblock = "bolt.batteryblock"

        /// SF Symbols's name：bolt.batteryblock.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltBatteryblockFill = "bolt.batteryblock.fill"

        /// SF Symbols's name：bolt.car.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltCarCircle = "bolt.car.circle"

        /// SF Symbols's name：bolt.car.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltCarCircleFill = "bolt.car.circle.fill"

        /// SF Symbols's name：bolt.shield
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltShield = "bolt.shield"

        /// SF Symbols's name：bolt.shield.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltShieldFill = "bolt.shield.fill"

        /// SF Symbols's name：bolt.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltSquare = "bolt.square"

        /// SF Symbols's name：bolt.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case boltSquareFill = "bolt.square.fill"

        /// SF Symbols's name：book.closed.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bookClosedCircle = "book.closed.circle"

        /// SF Symbols's name：book.closed.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bookClosedCircleFill = "book.closed.circle.fill"

        /// SF Symbols's name：bookmark.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bookmarkSquare = "bookmark.square"

        /// SF Symbols's name：bookmark.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bookmarkSquareFill = "bookmark.square.fill"

        /// SF Symbols's name：books.vertical.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case booksVerticalCircle = "books.vertical.circle"

        /// SF Symbols's name：books.vertical.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case booksVerticalCircleFill = "books.vertical.circle.fill"

        /// SF Symbols's name：brain
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case brain = "brain"

        /// SF Symbols's name：brain.head.profile
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case brainHeadProfile = "brain.head.profile"

        /// SF Symbols's name：briefcase.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case briefcaseCircle = "briefcase.circle"

        /// SF Symbols's name：briefcase.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case briefcaseCircleFill = "briefcase.circle.fill"

        /// SF Symbols's name：bubble.left.and.exclamationmark.bubble.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bubbleLeftAndExclamationmarkBubbleRight = "bubble.left.and.exclamationmark.bubble.right"

        /// SF Symbols's name：bubble.left.and.exclamationmark.bubble.right.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bubbleLeftAndExclamationmarkBubbleRightFill = "bubble.left.and.exclamationmark.bubble.right.fill"

        /// SF Symbols's name：bubble.left.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bubbleLeftCircle = "bubble.left.circle"

        /// SF Symbols's name：bubble.left.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bubbleLeftCircleFill = "bubble.left.circle.fill"

        /// SF Symbols's name：bubble.right.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bubbleRightCircle = "bubble.right.circle"

        /// SF Symbols's name：bubble.right.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case bubbleRightCircleFill = "bubble.right.circle.fill"

        /// SF Symbols's name：building.columns.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case buildingColumnsCircle = "building.columns.circle"

        /// SF Symbols's name：building.columns.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case buildingColumnsCircleFill = "building.columns.circle.fill"

        /// SF Symbols's name：cable.connector
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cableConnector = "cable.connector"

        /// SF Symbols's name：cable.connector.horizontal
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cableConnectorHorizontal = "cable.connector.horizontal"

        /// SF Symbols's name：cablecar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cablecar = "cablecar"

        /// SF Symbols's name：cablecar.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cablecarFill = "cablecar.fill"

        /// SF Symbols's name：calendar.day.timeline.leading
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case calendarDayTimelineLeading = "calendar.day.timeline.leading"

        /// SF Symbols's name：calendar.day.timeline.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case calendarDayTimelineLeft = "calendar.day.timeline.left"

        /// SF Symbols's name：calendar.day.timeline.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case calendarDayTimelineRight = "calendar.day.timeline.right"

        /// SF Symbols's name：calendar.day.timeline.trailing
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case calendarDayTimelineTrailing = "calendar.day.timeline.trailing"

        /// SF Symbols's name：camera.shutter.button
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cameraShutterButton = "camera.shutter.button"

        /// SF Symbols's name：camera.shutter.button.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cameraShutterButtonFill = "camera.shutter.button.fill"

        /// SF Symbols's name：capsule.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsuleBottomhalfFilled = "capsule.bottomhalf.filled"

        /// SF Symbols's name：capsule.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsuleInsetFilled = "capsule.inset.filled"

        /// SF Symbols's name：capsule.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsuleLefthalfFilled = "capsule.lefthalf.filled"

        /// SF Symbols's name：capsule.portrait.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsulePortraitBottomhalfFilled = "capsule.portrait.bottomhalf.filled"

        /// SF Symbols's name：capsule.portrait.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsulePortraitInsetFilled = "capsule.portrait.inset.filled"

        /// SF Symbols's name：capsule.portrait.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsulePortraitLefthalfFilled = "capsule.portrait.lefthalf.filled"

        /// SF Symbols's name：capsule.portrait.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsulePortraitRighthalfFilled = "capsule.portrait.righthalf.filled"

        /// SF Symbols's name：capsule.portrait.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsulePortraitTophalfFilled = "capsule.portrait.tophalf.filled"

        /// SF Symbols's name：capsule.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsuleRighthalfFilled = "capsule.righthalf.filled"

        /// SF Symbols's name：capsule.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case capsuleTophalfFilled = "capsule.tophalf.filled"

        /// SF Symbols's name：car.ferry
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case carFerry = "car.ferry"

        /// SF Symbols's name：car.ferry.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case carFerryFill = "car.ferry.fill"

        /// SF Symbols's name：character.bubble.fill.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleFillHi = "character.bubble.fill.hi"

        /// SF Symbols's name：character.bubble.fill.ja
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleFillJa = "character.bubble.fill.ja"

        /// SF Symbols's name：character.bubble.fill.ko
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleFillKo = "character.bubble.fill.ko"

        /// SF Symbols's name：character.bubble.fill.th
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleFillTh = "character.bubble.fill.th"

        /// SF Symbols's name：character.bubble.fill.zh
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleFillZh = "character.bubble.fill.zh"

        /// SF Symbols's name：character.bubble.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleHi = "character.bubble.hi"

        /// SF Symbols's name：character.bubble.ja
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleJa = "character.bubble.ja"

        /// SF Symbols's name：character.bubble.ko
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleKo = "character.bubble.ko"

        /// SF Symbols's name：character.bubble.th
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleTh = "character.bubble.th"

        /// SF Symbols's name：character.bubble.zh
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case characterBubbleZh = "character.bubble.zh"

        /// SF Symbols's name：chart.line.uptrend.xyaxis
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case chartLineUptrendXyaxis = "chart.line.uptrend.xyaxis"

        /// SF Symbols's name：chart.line.uptrend.xyaxis.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case chartLineUptrendXyaxisCircle = "chart.line.uptrend.xyaxis.circle"

        /// SF Symbols's name：chart.line.uptrend.xyaxis.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case chartLineUptrendXyaxisCircleFill = "chart.line.uptrend.xyaxis.circle.fill"

        /// SF Symbols's name：chart.xyaxis.line
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case chartXyaxisLine = "chart.xyaxis.line"

        /// SF Symbols's name：checkerboard.shield
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checkerboardShield = "checkerboard.shield"

        /// SF Symbols's name：checklist
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checklist = "checklist"

        /// SF Symbols's name：checklist.rtl
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checklistRtl = "checklist.rtl"

        /// SF Symbols's name：checkmark.bubble
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checkmarkBubble = "checkmark.bubble"

        /// SF Symbols's name：checkmark.bubble.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checkmarkBubbleFill = "checkmark.bubble.fill"

        /// SF Symbols's name：checkmark.circle.trianglebadge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checkmarkCircleTrianglebadgeExclamationmark = "checkmark.circle.trianglebadge.exclamationmark"

        /// SF Symbols's name：checkmark.diamond
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checkmarkDiamond = "checkmark.diamond"

        /// SF Symbols's name：checkmark.diamond.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case checkmarkDiamondFill = "checkmark.diamond.fill"

        /// SF Symbols's name：chevron.left.forwardslash.chevron.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case chevronLeftForwardslashChevronRight = "chevron.left.forwardslash.chevron.right"

        /// SF Symbols's name：circle.and.line.horizontal
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleAndLineHorizontal = "circle.and.line.horizontal"

        /// SF Symbols's name：circle.and.line.horizontal.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleAndLineHorizontalFill = "circle.and.line.horizontal.fill"

        /// SF Symbols's name：circle.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleBottomhalfFilled = "circle.bottomhalf.filled"

        /// SF Symbols's name：circle.dashed.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleDashedInsetFilled = "circle.dashed.inset.filled"

        /// SF Symbols's name：circle.dotted
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleDotted = "circle.dotted"

        /// SF Symbols's name：circle.grid.2x1
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGrid2x1 = "circle.grid.2x1"

        /// SF Symbols's name：circle.grid.2x1.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGrid2x1Fill = "circle.grid.2x1.fill"

        /// SF Symbols's name：circle.grid.2x1.left.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGrid2x1LeftFilled = "circle.grid.2x1.left.filled"

        /// SF Symbols's name：circle.grid.2x1.right.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGrid2x1RightFilled = "circle.grid.2x1.right.filled"

        /// SF Symbols's name：circle.grid.3x3.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGrid3x3Circle = "circle.grid.3x3.circle"

        /// SF Symbols's name：circle.grid.3x3.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGrid3x3CircleFill = "circle.grid.3x3.circle.fill"

        /// SF Symbols's name：circle.grid.cross.down.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGridCrossDownFilled = "circle.grid.cross.down.filled"

        /// SF Symbols's name：circle.grid.cross.left.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGridCrossLeftFilled = "circle.grid.cross.left.filled"

        /// SF Symbols's name：circle.grid.cross.right.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGridCrossRightFilled = "circle.grid.cross.right.filled"

        /// SF Symbols's name：circle.grid.cross.up.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleGridCrossUpFilled = "circle.grid.cross.up.filled"

        /// SF Symbols's name：circle.hexagongrid
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleHexagongrid = "circle.hexagongrid"

        /// SF Symbols's name：circle.hexagongrid.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleHexagongridCircle = "circle.hexagongrid.circle"

        /// SF Symbols's name：circle.hexagongrid.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleHexagongridCircleFill = "circle.hexagongrid.circle.fill"

        /// SF Symbols's name：circle.hexagongrid.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleHexagongridFill = "circle.hexagongrid.fill"

        /// SF Symbols's name：circle.hexagonpath
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleHexagonpath = "circle.hexagonpath"

        /// SF Symbols's name：circle.hexagonpath.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleHexagonpathFill = "circle.hexagonpath.fill"

        /// SF Symbols's name：circle.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleInsetFilled = "circle.inset.filled"

        /// SF Symbols's name：circle.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleLefthalfFilled = "circle.lefthalf.filled"

        /// SF Symbols's name：circle.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleRighthalfFilled = "circle.righthalf.filled"

        /// SF Symbols's name：circle.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleSlash = "circle.slash"

        /// SF Symbols's name：circle.slash.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleSlashFill = "circle.slash.fill"

        /// SF Symbols's name：circle.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleSquareFill = "circle.square.fill"

        /// SF Symbols's name：circle.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case circleTophalfFilled = "circle.tophalf.filled"

        /// SF Symbols's name：clock.badge.checkmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case clockBadgeCheckmark = "clock.badge.checkmark"

        /// SF Symbols's name：clock.badge.checkmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case clockBadgeCheckmarkFill = "clock.badge.checkmark.fill"

        /// SF Symbols's name：clock.badge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case clockBadgeExclamationmark = "clock.badge.exclamationmark"

        /// SF Symbols's name：clock.badge.exclamationmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case clockBadgeExclamationmarkFill = "clock.badge.exclamationmark.fill"

        /// SF Symbols's name：clock.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case clockCircle = "clock.circle"

        /// SF Symbols's name：clock.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case clockCircleFill = "clock.circle.fill"

        /// SF Symbols's name：computermouse
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case computermouse = "computermouse"

        /// SF Symbols's name：computermouse.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case computermouseFill = "computermouse.fill"

        /// SF Symbols's name：cpu.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cpuFill = "cpu.fill"

        /// SF Symbols's name：creditcard.and.123
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case creditcardAnd123 = "creditcard.and.123"

        /// SF Symbols's name：creditcard.trianglebadge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case creditcardTrianglebadgeExclamationmark = "creditcard.trianglebadge.exclamationmark"

        /// SF Symbols's name：cross.vial
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case crossVial = "cross.vial"

        /// SF Symbols's name：cross.vial.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case crossVialFill = "cross.vial.fill"

        /// SF Symbols's name：cup.and.saucer
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cupAndSaucer = "cup.and.saucer"

        /// SF Symbols's name：cup.and.saucer.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case cupAndSaucerFill = "cup.and.saucer.fill"

        /// SF Symbols's name：delete.backward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case deleteBackward = "delete.backward"

        /// SF Symbols's name：delete.backward.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case deleteBackwardFill = "delete.backward.fill"

        /// SF Symbols's name：delete.forward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case deleteForward = "delete.forward"

        /// SF Symbols's name：delete.forward.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case deleteForwardFill = "delete.forward.fill"

        /// SF Symbols's name：desktopcomputer.and.arrow.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case desktopcomputerAndArrowDown = "desktopcomputer.and.arrow.down"

        /// SF Symbols's name：desktopcomputer.trianglebadge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case desktopcomputerTrianglebadgeExclamationmark = "desktopcomputer.trianglebadge.exclamationmark"

        /// SF Symbols's name：diamond.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondBottomhalfFilled = "diamond.bottomhalf.filled"

        /// SF Symbols's name：diamond.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondCircle = "diamond.circle"

        /// SF Symbols's name：diamond.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondCircleFill = "diamond.circle.fill"

        /// SF Symbols's name：diamond.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondInsetFilled = "diamond.inset.filled"

        /// SF Symbols's name：diamond.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondLefthalfFilled = "diamond.lefthalf.filled"

        /// SF Symbols's name：diamond.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondRighthalfFilled = "diamond.righthalf.filled"

        /// SF Symbols's name：diamond.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diamondTophalfFilled = "diamond.tophalf.filled"

        /// SF Symbols's name：dice
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dice = "dice"

        /// SF Symbols's name：dice.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case diceFill = "dice.fill"

        /// SF Symbols's name：digitalcrown.arrow.clockwise
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownArrowClockwise = "digitalcrown.arrow.clockwise"

        /// SF Symbols's name：digitalcrown.arrow.clockwise.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownArrowClockwiseFill = "digitalcrown.arrow.clockwise.fill"

        /// SF Symbols's name：digitalcrown.arrow.counterclockwise
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownArrowCounterclockwise = "digitalcrown.arrow.counterclockwise"

        /// SF Symbols's name：digitalcrown.arrow.counterclockwise.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownArrowCounterclockwiseFill = "digitalcrown.arrow.counterclockwise.fill"

        /// SF Symbols's name：digitalcrown.horizontal.arrow.clockwise
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownHorizontalArrowClockwise = "digitalcrown.horizontal.arrow.clockwise"

        /// SF Symbols's name：digitalcrown.horizontal.arrow.clockwise.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownHorizontalArrowClockwiseFill = "digitalcrown.horizontal.arrow.clockwise.fill"

        /// SF Symbols's name：digitalcrown.horizontal.arrow.counterclockwise
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownHorizontalArrowCounterclockwise = "digitalcrown.horizontal.arrow.counterclockwise"

        /// SF Symbols's name：digitalcrown.horizontal.arrow.counterclockwise.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownHorizontalArrowCounterclockwiseFill = "digitalcrown.horizontal.arrow.counterclockwise.fill"

        /// SF Symbols's name：digitalcrown.horizontal.press
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownHorizontalPress = "digitalcrown.horizontal.press"

        /// SF Symbols's name：digitalcrown.horizontal.press.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownHorizontalPressFill = "digitalcrown.horizontal.press.fill"

        /// SF Symbols's name：digitalcrown.press
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownPress = "digitalcrown.press"

        /// SF Symbols's name：digitalcrown.press.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case digitalcrownPressFill = "digitalcrown.press.fill"

        /// SF Symbols's name：display.and.arrow.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case displayAndArrowDown = "display.and.arrow.down"

        /// SF Symbols's name：doc.richtext.fill.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextFillHi = "doc.richtext.fill.hi"

        /// SF Symbols's name：doc.richtext.fill.ja
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextFillJa = "doc.richtext.fill.ja"

        /// SF Symbols's name：doc.richtext.fill.ko
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextFillKo = "doc.richtext.fill.ko"

        /// SF Symbols's name：doc.richtext.fill.th
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextFillTh = "doc.richtext.fill.th"

        /// SF Symbols's name：doc.richtext.fill.zh
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextFillZh = "doc.richtext.fill.zh"

        /// SF Symbols's name：doc.richtext.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextHi = "doc.richtext.hi"

        /// SF Symbols's name：doc.richtext.ja
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextJa = "doc.richtext.ja"

        /// SF Symbols's name：doc.richtext.ko
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextKo = "doc.richtext.ko"

        /// SF Symbols's name：doc.richtext.th
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextTh = "doc.richtext.th"

        /// SF Symbols's name：doc.richtext.zh
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docRichtextZh = "doc.richtext.zh"

        /// SF Symbols's name：doc.text.image
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docTextImage = "doc.text.image"

        /// SF Symbols's name：doc.text.image.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docTextImageFill = "doc.text.image.fill"

        /// SF Symbols's name：doc.viewfinder
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docViewfinder = "doc.viewfinder"

        /// SF Symbols's name：doc.viewfinder.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case docViewfinderFill = "doc.viewfinder.fill"

        /// SF Symbols's name：dot.circle.and.hand.point.up.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dotCircleAndHandPointUpLeftFill = "dot.circle.and.hand.point.up.left.fill"

        /// SF Symbols's name：dot.circle.viewfinder
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dotCircleViewfinder = "dot.circle.viewfinder"

        /// SF Symbols's name：dot.radiowaves.up.forward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dotRadiowavesUpForward = "dot.radiowaves.up.forward"

        /// SF Symbols's name：dot.viewfinder
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dotViewfinder = "dot.viewfinder"

        /// SF Symbols's name：dpad.down.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dpadDownFilled = "dpad.down.filled"

        /// SF Symbols's name：dpad.left.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dpadLeftFilled = "dpad.left.filled"

        /// SF Symbols's name：dpad.right.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dpadRightFilled = "dpad.right.filled"

        /// SF Symbols's name：dpad.up.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dpadUpFilled = "dpad.up.filled"

        /// SF Symbols's name：drop.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dropCircle = "drop.circle"

        /// SF Symbols's name：drop.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case dropCircleFill = "drop.circle.fill"

        /// SF Symbols's name：ear.and.waveform
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case earAndWaveform = "ear.and.waveform"

        /// SF Symbols's name：earbuds
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case earbuds = "earbuds"

        /// SF Symbols's name：earbuds.case
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case earbudsCase = "earbuds.case"

        /// SF Symbols's name：earbuds.case.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case earbudsCaseFill = "earbuds.case.fill"

        /// SF Symbols's name：ellipsis.curlybraces
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ellipsisCurlybraces = "ellipsis.curlybraces"

        /// SF Symbols's name：ellipsis.vertical.bubble
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ellipsisVerticalBubble = "ellipsis.vertical.bubble"

        /// SF Symbols's name：ellipsis.vertical.bubble.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ellipsisVerticalBubbleFill = "ellipsis.vertical.bubble.fill"

        /// SF Symbols's name：envelope.badge.shield.half.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case envelopeBadgeShieldHalfFilled = "envelope.badge.shield.half.filled"

        /// SF Symbols's name：envelope.badge.shield.half.filled.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case envelopeBadgeShieldHalfFilledFill = "envelope.badge.shield.half.filled.fill"

        /// SF Symbols's name：exclamationmark.bubble.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case exclamationmarkBubbleCircle = "exclamationmark.bubble.circle"

        /// SF Symbols's name：exclamationmark.bubble.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case exclamationmarkBubbleCircleFill = "exclamationmark.bubble.circle.fill"

        /// SF Symbols's name：eye.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case eyeSlashCircle = "eye.slash.circle"

        /// SF Symbols's name：eye.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case eyeSlashCircleFill = "eye.slash.circle.fill"

        /// SF Symbols's name：eye.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case eyeSquare = "eye.square"

        /// SF Symbols's name：eye.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case eyeSquareFill = "eye.square.fill"

        /// SF Symbols's name：eye.trianglebadge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case eyeTrianglebadgeExclamationmark = "eye.trianglebadge.exclamationmark"

        /// SF Symbols's name：eye.trianglebadge.exclamationmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case eyeTrianglebadgeExclamationmarkFill = "eye.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：facemask
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case facemask = "facemask"

        /// SF Symbols's name：facemask.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case facemaskFill = "facemask.fill"

        /// SF Symbols's name：fanblades
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fanblades = "fanblades"

        /// SF Symbols's name：fanblades.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fanbladesFill = "fanblades.fill"

        /// SF Symbols's name：ferry
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ferry = "ferry"

        /// SF Symbols's name：ferry.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ferryFill = "ferry.fill"

        /// SF Symbols's name：fibrechannel
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fibrechannel = "fibrechannel"

        /// SF Symbols's name：figure.roll
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case figureRoll = "figure.roll"

        /// SF Symbols's name：film.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case filmCircle = "film.circle"

        /// SF Symbols's name：film.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case filmCircleFill = "film.circle.fill"

        /// SF Symbols's name：flag.2.crossed
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flag2Crossed = "flag.2.crossed"

        /// SF Symbols's name：flag.2.crossed.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flag2CrossedFill = "flag.2.crossed.fill"

        /// SF Symbols's name：flag.and.flag.filled.crossed
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flagAndFlagFilledCrossed = "flag.and.flag.filled.crossed"

        /// SF Symbols's name：flag.filled.and.flag.crossed
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flagFilledAndFlagCrossed = "flag.filled.and.flag.crossed"

        /// SF Symbols's name：flag.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flagSquare = "flag.square"

        /// SF Symbols's name：flag.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flagSquareFill = "flag.square.fill"

        /// SF Symbols's name：flame.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flameCircle = "flame.circle"

        /// SF Symbols's name：flame.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case flameCircleFill = "flame.circle.fill"

        /// SF Symbols's name：folder.badge.gearshape
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case folderBadgeGearshape = "folder.badge.gearshape"

        /// SF Symbols's name：folder.fill.badge.gearshape
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case folderFillBadgeGearshape = "folder.fill.badge.gearshape"

        /// SF Symbols's name：fork.knife
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case forkKnife = "fork.knife"

        /// SF Symbols's name：fork.knife.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case forkKnifeCircle = "fork.knife.circle"

        /// SF Symbols's name：fork.knife.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case forkKnifeCircleFill = "fork.knife.circle.fill"

        /// SF Symbols's name：forward.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case forwardCircle = "forward.circle"

        /// SF Symbols's name：forward.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case forwardCircleFill = "forward.circle.fill"

        /// SF Symbols's name：fuelpump
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fuelpump = "fuelpump"

        /// SF Symbols's name：fuelpump.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fuelpumpCircle = "fuelpump.circle"

        /// SF Symbols's name：fuelpump.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fuelpumpCircleFill = "fuelpump.circle.fill"

        /// SF Symbols's name：fuelpump.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case fuelpumpFill = "fuelpump.fill"

        /// SF Symbols's name：gear.badge.checkmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearBadgeCheckmark = "gear.badge.checkmark"

        /// SF Symbols's name：gear.badge.questionmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearBadgeQuestionmark = "gear.badge.questionmark"

        /// SF Symbols's name：gear.badge.xmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearBadgeXmark = "gear.badge.xmark"

        /// SF Symbols's name：gear.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearCircle = "gear.circle"

        /// SF Symbols's name：gear.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearCircleFill = "gear.circle.fill"

        /// SF Symbols's name：gearshape.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearshapeCircle = "gearshape.circle"

        /// SF Symbols's name：gearshape.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gearshapeCircleFill = "gearshape.circle.fill"

        /// SF Symbols's name：globe.americas
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeAmericas = "globe.americas"

        /// SF Symbols's name：globe.americas.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeAmericasFill = "globe.americas.fill"

        /// SF Symbols's name：globe.asia.australia
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeAsiaAustralia = "globe.asia.australia"

        /// SF Symbols's name：globe.asia.australia.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeAsiaAustraliaFill = "globe.asia.australia.fill"

        /// SF Symbols's name：globe.badge.chevron.backward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeBadgeChevronBackward = "globe.badge.chevron.backward"

        /// SF Symbols's name：globe.europe.africa
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeEuropeAfrica = "globe.europe.africa"

        /// SF Symbols's name：globe.europe.africa.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case globeEuropeAfricaFill = "globe.europe.africa.fill"

        /// SF Symbols's name：gobackward.5
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gobackward5 = "gobackward.5"

        /// SF Symbols's name：gobackward.5.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gobackward5Ar = "gobackward.5.ar"

        /// SF Symbols's name：gobackward.5.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case gobackward5Hi = "gobackward.5.hi"

        /// SF Symbols's name：goforward.5
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case goforward5 = "goforward.5"

        /// SF Symbols's name：goforward.5.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case goforward5Ar = "goforward.5.ar"

        /// SF Symbols's name：goforward.5.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case goforward5Hi = "goforward.5.hi"

        /// SF Symbols's name：graduationcap.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case graduationcapCircle = "graduationcap.circle"

        /// SF Symbols's name：graduationcap.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case graduationcapCircleFill = "graduationcap.circle.fill"

        /// SF Symbols's name：h.square.on.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hSquareOnSquareFill = "h.square.on.square.fill"

        /// SF Symbols's name：hammer.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hammerCircle = "hammer.circle"

        /// SF Symbols's name：hammer.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hammerCircleFill = "hammer.circle.fill"

        /// SF Symbols's name：hand.raised.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handRaisedCircle = "hand.raised.circle"

        /// SF Symbols's name：hand.raised.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handRaisedCircleFill = "hand.raised.circle.fill"

        /// SF Symbols's name：hand.raised.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handRaisedSquare = "hand.raised.square"

        /// SF Symbols's name：hand.raised.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handRaisedSquareFill = "hand.raised.square.fill"

        /// SF Symbols's name：hand.raised.square.on.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handRaisedSquareOnSquare = "hand.raised.square.on.square"

        /// SF Symbols's name：hand.raised.square.on.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handRaisedSquareOnSquareFill = "hand.raised.square.on.square.fill"

        /// SF Symbols's name：hand.thumbsdown.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handThumbsdownCircle = "hand.thumbsdown.circle"

        /// SF Symbols's name：hand.thumbsdown.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handThumbsdownCircleFill = "hand.thumbsdown.circle.fill"

        /// SF Symbols's name：hand.thumbsup.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handThumbsupCircle = "hand.thumbsup.circle"

        /// SF Symbols's name：hand.thumbsup.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case handThumbsupCircleFill = "hand.thumbsup.circle.fill"

        /// SF Symbols's name：hearingdevice.ear
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hearingdeviceEar = "hearingdevice.ear"

        /// SF Symbols's name：heart.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case heartRectangle = "heart.rectangle"

        /// SF Symbols's name：heart.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case heartRectangleFill = "heart.rectangle.fill"

        /// SF Symbols's name：heart.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case heartSquare = "heart.square"

        /// SF Symbols's name：heart.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case heartSquareFill = "heart.square.fill"

        /// SF Symbols's name：hexagon.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hexagonBottomhalfFilled = "hexagon.bottomhalf.filled"

        /// SF Symbols's name：hexagon.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hexagonLefthalfFilled = "hexagon.lefthalf.filled"

        /// SF Symbols's name：hexagon.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hexagonRighthalfFilled = "hexagon.righthalf.filled"

        /// SF Symbols's name：hexagon.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hexagonTophalfFilled = "hexagon.tophalf.filled"

        /// SF Symbols's name：hifispeaker.and.appletv
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hifispeakerAndAppletv = "hifispeaker.and.appletv"

        /// SF Symbols's name：hifispeaker.and.appletv.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hifispeakerAndAppletvFill = "hifispeaker.and.appletv.fill"

        /// SF Symbols's name：homepod.and.appletv
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case homepodAndAppletv = "homepod.and.appletv"

        /// SF Symbols's name：homepod.and.appletv.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case homepodAndAppletvFill = "homepod.and.appletv.fill"

        /// SF Symbols's name：homepodmini.and.appletv
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case homepodminiAndAppletv = "homepodmini.and.appletv"

        /// SF Symbols's name：homepodmini.and.appletv.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case homepodminiAndAppletvFill = "homepodmini.and.appletv.fill"

        /// SF Symbols's name：hourglass.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hourglassBottomhalfFilled = "hourglass.bottomhalf.filled"

        /// SF Symbols's name：hourglass.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hourglassCircle = "hourglass.circle"

        /// SF Symbols's name：hourglass.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hourglassCircleFill = "hourglass.circle.fill"

        /// SF Symbols's name：hourglass.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case hourglassTophalfFilled = "hourglass.tophalf.filled"

        /// SF Symbols's name：humidity
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case humidity = "humidity"

        /// SF Symbols's name：humidity.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case humidityFill = "humidity.fill"

        /// SF Symbols's name：icloud.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case icloudSquare = "icloud.square"

        /// SF Symbols's name：icloud.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case icloudSquareFill = "icloud.square.fill"

        /// SF Symbols's name：ipad.and.arrow.forward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ipadAndArrowForward = "ipad.and.arrow.forward"

        /// SF Symbols's name：ipad.and.iphone
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ipadAndIphone = "ipad.and.iphone"

        /// SF Symbols's name：ipad.rear.camera
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ipadRearCamera = "ipad.rear.camera"

        /// SF Symbols's name：iphone.and.arrow.forward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneAndArrowForward = "iphone.and.arrow.forward"

        /// SF Symbols's name：iphone.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneCircle = "iphone.circle"

        /// SF Symbols's name：iphone.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneCircleFill = "iphone.circle.fill"

        /// SF Symbols's name：iphone.homebutton.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneHomebuttonCircle = "iphone.homebutton.circle"

        /// SF Symbols's name：iphone.homebutton.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneHomebuttonCircleFill = "iphone.homebutton.circle.fill"

        /// SF Symbols's name：iphone.homebutton.radiowaves.left.and.right.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneHomebuttonRadiowavesLeftAndRightCircle = "iphone.homebutton.radiowaves.left.and.right.circle"

        /// SF Symbols's name：iphone.homebutton.radiowaves.left.and.right.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneHomebuttonRadiowavesLeftAndRightCircleFill = "iphone.homebutton.radiowaves.left.and.right.circle.fill"

        /// SF Symbols's name：iphone.homebutton.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneHomebuttonSlashCircle = "iphone.homebutton.slash.circle"

        /// SF Symbols's name：iphone.homebutton.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneHomebuttonSlashCircleFill = "iphone.homebutton.slash.circle.fill"

        /// SF Symbols's name：iphone.radiowaves.left.and.right.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneRadiowavesLeftAndRightCircle = "iphone.radiowaves.left.and.right.circle"

        /// SF Symbols's name：iphone.radiowaves.left.and.right.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneRadiowavesLeftAndRightCircleFill = "iphone.radiowaves.left.and.right.circle.fill"

        /// SF Symbols's name：iphone.rear.camera
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneRearCamera = "iphone.rear.camera"

        /// SF Symbols's name：iphone.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneSlashCircle = "iphone.slash.circle"

        /// SF Symbols's name：iphone.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneSlashCircleFill = "iphone.slash.circle.fill"

        /// SF Symbols's name：iphone.smartbatterycase.gen1
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneSmartbatterycaseGen1 = "iphone.smartbatterycase.gen1"

        /// SF Symbols's name：iphone.smartbatterycase.gen2
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case iphoneSmartbatterycaseGen2 = "iphone.smartbatterycase.gen2"

        /// SF Symbols's name：ipodtouch.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ipodtouchSlash = "ipodtouch.slash"

        /// SF Symbols's name：ivfluid.bag
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ivfluidBag = "ivfluid.bag"

        /// SF Symbols's name：ivfluid.bag.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ivfluidBagFill = "ivfluid.bag.fill"

        /// SF Symbols's name：j.square.on.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case jSquareOnSquareFill = "j.square.on.square.fill"

        /// SF Symbols's name：keyboard.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case keyboardFill = "keyboard.fill"

        /// SF Symbols's name：l.joystick.press.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickPressDown = "l.joystick.press.down"

        /// SF Symbols's name：l.joystick.press.down.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickPressDownFill = "l.joystick.press.down.fill"

        /// SF Symbols's name：l.joystick.tilt.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltDown = "l.joystick.tilt.down"

        /// SF Symbols's name：l.joystick.tilt.down.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltDownFill = "l.joystick.tilt.down.fill"

        /// SF Symbols's name：l.joystick.tilt.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltLeft = "l.joystick.tilt.left"

        /// SF Symbols's name：l.joystick.tilt.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltLeftFill = "l.joystick.tilt.left.fill"

        /// SF Symbols's name：l.joystick.tilt.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltRight = "l.joystick.tilt.right"

        /// SF Symbols's name：l.joystick.tilt.right.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltRightFill = "l.joystick.tilt.right.fill"

        /// SF Symbols's name：l.joystick.tilt.up
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltUp = "l.joystick.tilt.up"

        /// SF Symbols's name：l.joystick.tilt.up.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lJoystickTiltUpFill = "l.joystick.tilt.up.fill"

        /// SF Symbols's name：lanyardcard
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lanyardcard = "lanyardcard"

        /// SF Symbols's name：lanyardcard.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lanyardcardFill = "lanyardcard.fill"

        /// SF Symbols's name：laptopcomputer.and.arrow.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case laptopcomputerAndArrowDown = "laptopcomputer.and.arrow.down"

        /// SF Symbols's name：laptopcomputer.trianglebadge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case laptopcomputerTrianglebadgeExclamationmark = "laptopcomputer.trianglebadge.exclamationmark"

        /// SF Symbols's name：lasso.and.sparkles
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lassoAndSparkles = "lasso.and.sparkles"

        /// SF Symbols's name：leaf.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case leafCircle = "leaf.circle"

        /// SF Symbols's name：leaf.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case leafCircleFill = "leaf.circle.fill"

        /// SF Symbols's name：lightbulb.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lightbulbCircle = "lightbulb.circle"

        /// SF Symbols's name：lightbulb.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lightbulbCircleFill = "lightbulb.circle.fill"

        /// SF Symbols's name：line.2.horizontal.decrease.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line2HorizontalDecreaseCircle = "line.2.horizontal.decrease.circle"

        /// SF Symbols's name：line.2.horizontal.decrease.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line2HorizontalDecreaseCircleFill = "line.2.horizontal.decrease.circle.fill"

        /// SF Symbols's name：line.3.horizontal
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line3Horizontal = "line.3.horizontal"

        /// SF Symbols's name：line.3.horizontal.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line3HorizontalCircle = "line.3.horizontal.circle"

        /// SF Symbols's name：line.3.horizontal.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line3HorizontalCircleFill = "line.3.horizontal.circle.fill"

        /// SF Symbols's name：line.3.horizontal.decrease
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line3HorizontalDecrease = "line.3.horizontal.decrease"

        /// SF Symbols's name：line.3.horizontal.decrease.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line3HorizontalDecreaseCircle = "line.3.horizontal.decrease.circle"

        /// SF Symbols's name：line.3.horizontal.decrease.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case line3HorizontalDecreaseCircleFill = "line.3.horizontal.decrease.circle.fill"

        /// SF Symbols's name：lines.measurement.horizontal
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case linesMeasurementHorizontal = "lines.measurement.horizontal"

        /// SF Symbols's name：list.bullet.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listBulletCircle = "list.bullet.circle"

        /// SF Symbols's name：list.bullet.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listBulletCircleFill = "list.bullet.circle.fill"

        /// SF Symbols's name：list.bullet.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listBulletRectangleFill = "list.bullet.rectangle.fill"

        /// SF Symbols's name：list.bullet.rectangle.portrait
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listBulletRectanglePortrait = "list.bullet.rectangle.portrait"

        /// SF Symbols's name：list.bullet.rectangle.portrait.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listBulletRectanglePortraitFill = "list.bullet.rectangle.portrait.fill"

        /// SF Symbols's name：list.dash.header.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listDashHeaderRectangle = "list.dash.header.rectangle"

        /// SF Symbols's name：list.number.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case listNumberHi = "list.number.hi"

        /// SF Symbols's name：location.magnifyingglass
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case locationMagnifyingglass = "location.magnifyingglass"

        /// SF Symbols's name：location.north.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case locationNorthCircle = "location.north.circle"

        /// SF Symbols's name：location.north.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case locationNorthCircleFill = "location.north.circle.fill"

        /// SF Symbols's name：location.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case locationSquare = "location.square"

        /// SF Symbols's name：location.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case locationSquareFill = "location.square.fill"

        /// SF Symbols's name：lock.desktopcomputer
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockDesktopcomputer = "lock.desktopcomputer"

        /// SF Symbols's name：lock.display
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockDisplay = "lock.display"

        /// SF Symbols's name：lock.ipad
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockIpad = "lock.ipad"

        /// SF Symbols's name：lock.iphone
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockIphone = "lock.iphone"

        /// SF Symbols's name：lock.laptopcomputer
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockLaptopcomputer = "lock.laptopcomputer"

        /// SF Symbols's name：lock.open.applewatch
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockOpenApplewatch = "lock.open.applewatch"

        /// SF Symbols's name：lock.open.desktopcomputer
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockOpenDesktopcomputer = "lock.open.desktopcomputer"

        /// SF Symbols's name：lock.open.display
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockOpenDisplay = "lock.open.display"

        /// SF Symbols's name：lock.open.ipad
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockOpenIpad = "lock.open.ipad"

        /// SF Symbols's name：lock.open.iphone
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockOpenIphone = "lock.open.iphone"

        /// SF Symbols's name：lock.open.laptopcomputer
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case lockOpenLaptopcomputer = "lock.open.laptopcomputer"

        /// SF Symbols's name：logo.playstation
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case logoPlaystation = "logo.playstation"

        /// SF Symbols's name：logo.xbox
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case logoXbox = "logo.xbox"

        /// SF Symbols's name：macpro.gen1.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case macproGen1Fill = "macpro.gen1.fill"

        /// SF Symbols's name：macpro.gen3.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case macproGen3Fill = "macpro.gen3.fill"

        /// SF Symbols's name：magazine
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case magazine = "magazine"

        /// SF Symbols's name：magazine.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case magazineFill = "magazine.fill"

        /// SF Symbols's name：magicmouse
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case magicmouse = "magicmouse"

        /// SF Symbols's name：magicmouse.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case magicmouseFill = "magicmouse.fill"

        /// SF Symbols's name：magsafe.batterypack
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case magsafeBatterypack = "magsafe.batterypack"

        /// SF Symbols's name：magsafe.batterypack.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case magsafeBatterypackFill = "magsafe.batterypack.fill"

        /// SF Symbols's name：map.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mapCircle = "map.circle"

        /// SF Symbols's name：map.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mapCircleFill = "map.circle.fill"

        /// SF Symbols's name：mappin.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mappinSlashCircle = "mappin.slash.circle"

        /// SF Symbols's name：mappin.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mappinSlashCircleFill = "mappin.slash.circle.fill"

        /// SF Symbols's name：mappin.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mappinSquare = "mappin.square"

        /// SF Symbols's name：mappin.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mappinSquareFill = "mappin.square.fill"

        /// SF Symbols's name：mediastick
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case mediastick = "mediastick"

        /// SF Symbols's name：memorychip.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case memorychipFill = "memorychip.fill"

        /// SF Symbols's name：menucard
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case menucard = "menucard"

        /// SF Symbols's name：menucard.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case menucardFill = "menucard.fill"

        /// SF Symbols's name：message.and.waveform
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case messageAndWaveform = "message.and.waveform"

        /// SF Symbols's name：message.and.waveform.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case messageAndWaveformFill = "message.and.waveform.fill"

        /// SF Symbols's name：mic.badge.plus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case micBadgePlus = "mic.badge.plus"

        /// SF Symbols's name：mic.fill.badge.plus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case micFillBadgePlus = "mic.fill.badge.plus"

        /// SF Symbols's name：mic.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case micSlashCircle = "mic.slash.circle"

        /// SF Symbols's name：mic.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case micSlashCircleFill = "mic.slash.circle.fill"

        /// SF Symbols's name：mic.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case micSquare = "mic.square"

        /// SF Symbols's name：mic.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case micSquareFill = "mic.square.fill"

        /// SF Symbols's name：minus.forwardslash.plus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case minusForwardslashPlus = "minus.forwardslash.plus"

        /// SF Symbols's name：music.mic.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case musicMicCircle = "music.mic.circle"

        /// SF Symbols's name：music.mic.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case musicMicCircleFill = "music.mic.circle.fill"

        /// SF Symbols's name：music.note.tv
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case musicNoteTv = "music.note.tv"

        /// SF Symbols's name：music.note.tv.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case musicNoteTvFill = "music.note.tv.fill"

        /// SF Symbols's name：network.badge.shield.half.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case networkBadgeShieldHalfFilled = "network.badge.shield.half.filled"

        /// SF Symbols's name：newspaper.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case newspaperCircle = "newspaper.circle"

        /// SF Symbols's name：newspaper.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case newspaperCircleFill = "newspaper.circle.fill"

        /// SF Symbols's name：octagon.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case octagonBottomhalfFilled = "octagon.bottomhalf.filled"

        /// SF Symbols's name：octagon.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case octagonLefthalfFilled = "octagon.lefthalf.filled"

        /// SF Symbols's name：octagon.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case octagonRighthalfFilled = "octagon.righthalf.filled"

        /// SF Symbols's name：octagon.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case octagonTophalfFilled = "octagon.tophalf.filled"

        /// SF Symbols's name：oval.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalBottomhalfFilled = "oval.bottomhalf.filled"

        /// SF Symbols's name：oval.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalInsetFilled = "oval.inset.filled"

        /// SF Symbols's name：oval.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalLefthalfFilled = "oval.lefthalf.filled"

        /// SF Symbols's name：oval.portrait.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalPortraitBottomhalfFilled = "oval.portrait.bottomhalf.filled"

        /// SF Symbols's name：oval.portrait.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalPortraitInsetFilled = "oval.portrait.inset.filled"

        /// SF Symbols's name：oval.portrait.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalPortraitLefthalfFilled = "oval.portrait.lefthalf.filled"

        /// SF Symbols's name：oval.portrait.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalPortraitRighthalfFilled = "oval.portrait.righthalf.filled"

        /// SF Symbols's name：oval.portrait.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalPortraitTophalfFilled = "oval.portrait.tophalf.filled"

        /// SF Symbols's name：oval.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalRighthalfFilled = "oval.righthalf.filled"

        /// SF Symbols's name：oval.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case ovalTophalfFilled = "oval.tophalf.filled"

        /// SF Symbols's name：parentheses
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case parentheses = "parentheses"

        /// SF Symbols's name：parkingsign
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case parkingsign = "parkingsign"

        /// SF Symbols's name：parkingsign.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case parkingsignCircle = "parkingsign.circle"

        /// SF Symbols's name：parkingsign.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case parkingsignCircleFill = "parkingsign.circle.fill"

        /// SF Symbols's name：pawprint
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pawprint = "pawprint"

        /// SF Symbols's name：pawprint.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pawprintCircle = "pawprint.circle"

        /// SF Symbols's name：pawprint.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pawprintCircleFill = "pawprint.circle.fill"

        /// SF Symbols's name：pawprint.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pawprintFill = "pawprint.fill"

        /// SF Symbols's name：peacesign
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case peacesign = "peacesign"

        /// SF Symbols's name：pentagon
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pentagon = "pentagon"

        /// SF Symbols's name：pentagon.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pentagonBottomhalfFilled = "pentagon.bottomhalf.filled"

        /// SF Symbols's name：pentagon.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pentagonFill = "pentagon.fill"

        /// SF Symbols's name：pentagon.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pentagonLefthalfFilled = "pentagon.lefthalf.filled"

        /// SF Symbols's name：pentagon.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pentagonRighthalfFilled = "pentagon.righthalf.filled"

        /// SF Symbols's name：pentagon.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pentagonTophalfFilled = "pentagon.tophalf.filled"

        /// SF Symbols's name：person.2.crop.square.stack
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case person2CropSquareStack = "person.2.crop.square.stack"

        /// SF Symbols's name：person.2.crop.square.stack.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case person2CropSquareStackFill = "person.2.crop.square.stack.fill"

        /// SF Symbols's name：person.2.wave.2
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case person2Wave2 = "person.2.wave.2"

        /// SF Symbols's name：person.2.wave.2.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case person2Wave2Fill = "person.2.wave.2.fill"

        /// SF Symbols's name：person.3.sequence
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case person3Sequence = "person.3.sequence"

        /// SF Symbols's name：person.3.sequence.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case person3SequenceFill = "person.3.sequence.fill"

        /// SF Symbols's name：person.badge.clock
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personBadgeClock = "person.badge.clock"

        /// SF Symbols's name：person.badge.clock.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personBadgeClockFill = "person.badge.clock.fill"

        /// SF Symbols's name：person.crop.artframe
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropArtframe = "person.crop.artframe"

        /// SF Symbols's name：person.crop.circle.badge
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadge = "person.crop.circle.badge"

        /// SF Symbols's name：person.crop.circle.badge.clock
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeClock = "person.crop.circle.badge.clock"

        /// SF Symbols's name：person.crop.circle.badge.clock.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeClockFill = "person.crop.circle.badge.clock.fill"

        /// SF Symbols's name：person.crop.circle.badge.exclamationmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeExclamationmarkFill = "person.crop.circle.badge.exclamationmark.fill"

        /// SF Symbols's name：person.crop.circle.badge.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeFill = "person.crop.circle.badge.fill"

        /// SF Symbols's name：person.crop.circle.badge.moon
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeMoon = "person.crop.circle.badge.moon"

        /// SF Symbols's name：person.crop.circle.badge.moon.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeMoonFill = "person.crop.circle.badge.moon.fill"

        /// SF Symbols's name：person.crop.circle.badge.questionmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeQuestionmarkFill = "person.crop.circle.badge.questionmark.fill"

        /// SF Symbols's name：person.crop.circle.badge.questionmark.fill.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropCircleBadgeQuestionmarkFillAr = "person.crop.circle.badge.questionmark.fill.ar"

        /// SF Symbols's name：person.crop.rectangle.stack
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropRectangleStack = "person.crop.rectangle.stack"

        /// SF Symbols's name：person.crop.rectangle.stack.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropRectangleStackFill = "person.crop.rectangle.stack.fill"

        /// SF Symbols's name：person.crop.square.filled.and.at.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropSquareFilledAndAtRectangle = "person.crop.square.filled.and.at.rectangle"

        /// SF Symbols's name：person.crop.square.filled.and.at.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personCropSquareFilledAndAtRectangleFill = "person.crop.square.filled.and.at.rectangle.fill"

        /// SF Symbols's name：person.text.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personTextRectangle = "person.text.rectangle"

        /// SF Symbols's name：person.text.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personTextRectangleFill = "person.text.rectangle.fill"

        /// SF Symbols's name：person.wave.2
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personWave2 = "person.wave.2"

        /// SF Symbols's name：person.wave.2.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personWave2Fill = "person.wave.2.fill"

        /// SF Symbols's name：personalhotspot.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personalhotspotCircle = "personalhotspot.circle"

        /// SF Symbols's name：personalhotspot.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case personalhotspotCircleFill = "personalhotspot.circle.fill"

        /// SF Symbols's name：phone.and.waveform
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case phoneAndWaveform = "phone.and.waveform"

        /// SF Symbols's name：phone.and.waveform.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case phoneAndWaveformFill = "phone.and.waveform.fill"

        /// SF Symbols's name：photo.artframe
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case photoArtframe = "photo.artframe"

        /// SF Symbols's name：photo.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case photoCircle = "photo.circle"

        /// SF Symbols's name：photo.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case photoCircleFill = "photo.circle.fill"

        /// SF Symbols's name：pills.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pillsCircle = "pills.circle"

        /// SF Symbols's name：pills.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pillsCircleFill = "pills.circle.fill"

        /// SF Symbols's name：pin.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pinSquare = "pin.square"

        /// SF Symbols's name：pin.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pinSquareFill = "pin.square.fill"

        /// SF Symbols's name：platter.2.filled.ipad
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platter2FilledIpad = "platter.2.filled.ipad"

        /// SF Symbols's name：platter.2.filled.ipad.landscape
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platter2FilledIpadLandscape = "platter.2.filled.ipad.landscape"

        /// SF Symbols's name：platter.2.filled.iphone
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platter2FilledIphone = "platter.2.filled.iphone"

        /// SF Symbols's name：platter.2.filled.iphone.landscape
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platter2FilledIphoneLandscape = "platter.2.filled.iphone.landscape"

        /// SF Symbols's name：platter.bottom.applewatch.case
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platterBottomApplewatchCase = "platter.bottom.applewatch.case"

        /// SF Symbols's name：platter.filled.bottom.applewatch.case
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platterFilledBottomApplewatchCase = "platter.filled.bottom.applewatch.case"

        /// SF Symbols's name：platter.filled.top.applewatch.case
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platterFilledTopApplewatchCase = "platter.filled.top.applewatch.case"

        /// SF Symbols's name：platter.top.applewatch.case
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case platterTopApplewatchCase = "platter.top.applewatch.case"

        /// SF Symbols's name：play.rectangle.on.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case playRectangleOnRectangle = "play.rectangle.on.rectangle"

        /// SF Symbols's name：play.rectangle.on.rectangle.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case playRectangleOnRectangleCircle = "play.rectangle.on.rectangle.circle"

        /// SF Symbols's name：play.rectangle.on.rectangle.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case playRectangleOnRectangleCircleFill = "play.rectangle.on.rectangle.circle.fill"

        /// SF Symbols's name：play.rectangle.on.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case playRectangleOnRectangleFill = "play.rectangle.on.rectangle.fill"

        /// SF Symbols's name：play.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case playSquare = "play.square"

        /// SF Symbols's name：play.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case playSquareFill = "play.square.fill"

        /// SF Symbols's name：plus.forwardslash.minus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case plusForwardslashMinus = "plus.forwardslash.minus"

        /// SF Symbols's name：plus.rectangle.on.folder.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case plusRectangleOnFolderFill = "plus.rectangle.on.folder.fill"

        /// SF Symbols's name：plus.square.dashed
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case plusSquareDashed = "plus.square.dashed"

        /// SF Symbols's name：point.3.connected.trianglepath.dotted
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case point3ConnectedTrianglepathDotted = "point.3.connected.trianglepath.dotted"

        /// SF Symbols's name：point.3.filled.connected.trianglepath.dotted
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case point3FilledConnectedTrianglepathDotted = "point.3.filled.connected.trianglepath.dotted"

        /// SF Symbols's name：point.filled.topleft.down.curvedto.point.bottomright.up
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pointFilledTopleftDownCurvedtoPointBottomrightUp = "point.filled.topleft.down.curvedto.point.bottomright.up"

        /// SF Symbols's name：point.topleft.down.curvedto.point.bottomright.up.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pointTopleftDownCurvedtoPointBottomrightUpFill = "point.topleft.down.curvedto.point.bottomright.up.fill"

        /// SF Symbols's name：point.topleft.down.curvedto.point.filled.bottomright.up
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case pointTopleftDownCurvedtoPointFilledBottomrightUp = "point.topleft.down.curvedto.point.filled.bottomright.up"

        /// SF Symbols's name：power.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case powerCircle = "power.circle"

        /// SF Symbols's name：power.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case powerCircleFill = "power.circle.fill"

        /// SF Symbols's name：power.dotted
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case powerDotted = "power.dotted"

        /// SF Symbols's name：powerplug
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case powerplug = "powerplug"

        /// SF Symbols's name：powerplug.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case powerplugFill = "powerplug.fill"

        /// SF Symbols's name：printer.dotmatrix.filled.and.paper
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case printerDotmatrixFilledAndPaper = "printer.dotmatrix.filled.and.paper"

        /// SF Symbols's name：printer.filled.and.paper
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case printerFilledAndPaper = "printer.filled.and.paper"

        /// SF Symbols's name：puzzlepiece.extension
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case puzzlepieceExtension = "puzzlepiece.extension"

        /// SF Symbols's name：puzzlepiece.extension.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case puzzlepieceExtensionFill = "puzzlepiece.extension.fill"

        /// SF Symbols's name：questionmark.app
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case questionmarkApp = "questionmark.app"

        /// SF Symbols's name：questionmark.app.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case questionmarkAppAr = "questionmark.app.ar"

        /// SF Symbols's name：questionmark.app.dashed
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case questionmarkAppDashed = "questionmark.app.dashed"

        /// SF Symbols's name：questionmark.app.dashed.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case questionmarkAppDashedAr = "questionmark.app.dashed.ar"

        /// SF Symbols's name：questionmark.app.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case questionmarkAppFill = "questionmark.app.fill"

        /// SF Symbols's name：questionmark.app.fill.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case questionmarkAppFillAr = "questionmark.app.fill.ar"

        /// SF Symbols's name：quote.closing
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case quoteClosing = "quote.closing"

        /// SF Symbols's name：quote.opening
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case quoteOpening = "quote.opening"

        /// SF Symbols's name：r.joystick.press.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickPressDown = "r.joystick.press.down"

        /// SF Symbols's name：r.joystick.press.down.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickPressDownFill = "r.joystick.press.down.fill"

        /// SF Symbols's name：r.joystick.tilt.down
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltDown = "r.joystick.tilt.down"

        /// SF Symbols's name：r.joystick.tilt.down.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltDownFill = "r.joystick.tilt.down.fill"

        /// SF Symbols's name：r.joystick.tilt.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltLeft = "r.joystick.tilt.left"

        /// SF Symbols's name：r.joystick.tilt.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltLeftFill = "r.joystick.tilt.left.fill"

        /// SF Symbols's name：r.joystick.tilt.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltRight = "r.joystick.tilt.right"

        /// SF Symbols's name：r.joystick.tilt.right.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltRightFill = "r.joystick.tilt.right.fill"

        /// SF Symbols's name：r.joystick.tilt.up
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltUp = "r.joystick.tilt.up"

        /// SF Symbols's name：r.joystick.tilt.up.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rJoystickTiltUpFill = "r.joystick.tilt.up.fill"

        /// SF Symbols's name：r.square.on.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rSquareOnSquareFill = "r.square.on.square.fill"

        /// SF Symbols's name：rectangle.2.swap
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangle2Swap = "rectangle.2.swap"

        /// SF Symbols's name：rectangle.3.group
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangle3Group = "rectangle.3.group"

        /// SF Symbols's name：rectangle.3.group.bubble.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangle3GroupBubbleLeft = "rectangle.3.group.bubble.left"

        /// SF Symbols's name：rectangle.3.group.bubble.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangle3GroupBubbleLeftFill = "rectangle.3.group.bubble.left.fill"

        /// SF Symbols's name：rectangle.3.group.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangle3GroupFill = "rectangle.3.group.fill"

        /// SF Symbols's name：rectangle.and.hand.point.up.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleAndHandPointUpLeft = "rectangle.and.hand.point.up.left"

        /// SF Symbols's name：rectangle.and.hand.point.up.left.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleAndHandPointUpLeftFill = "rectangle.and.hand.point.up.left.fill"

        /// SF Symbols's name：rectangle.and.hand.point.up.left.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleAndHandPointUpLeftFilled = "rectangle.and.hand.point.up.left.filled"

        /// SF Symbols's name：rectangle.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleBottomhalfFilled = "rectangle.bottomhalf.filled"

        /// SF Symbols's name：rectangle.bottomhalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleBottomhalfInsetFilled = "rectangle.bottomhalf.inset.filled"

        /// SF Symbols's name：rectangle.bottomthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleBottomthirdInsetFilled = "rectangle.bottomthird.inset.filled"

        /// SF Symbols's name：rectangle.center.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleCenterInsetFilled = "rectangle.center.inset.filled"

        /// SF Symbols's name：rectangle.center.inset.filled.badge.plus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleCenterInsetFilledBadgePlus = "rectangle.center.inset.filled.badge.plus"

        /// SF Symbols's name：rectangle.filled.and.hand.point.up.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleFilledAndHandPointUpLeft = "rectangle.filled.and.hand.point.up.left"

        /// SF Symbols's name：rectangle.inset.bottomleading.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetBottomleadingFilled = "rectangle.inset.bottomleading.filled"

        /// SF Symbols's name：rectangle.inset.bottomleft.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetBottomleftFilled = "rectangle.inset.bottomleft.filled"

        /// SF Symbols's name：rectangle.inset.bottomright.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetBottomrightFilled = "rectangle.inset.bottomright.filled"

        /// SF Symbols's name：rectangle.inset.bottomtrailing.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetBottomtrailingFilled = "rectangle.inset.bottomtrailing.filled"

        /// SF Symbols's name：rectangle.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetFilled = "rectangle.inset.filled"

        /// SF Symbols's name：rectangle.inset.filled.and.person.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetFilledAndPersonFilled = "rectangle.inset.filled.and.person.filled"

        /// SF Symbols's name：rectangle.inset.filled.on.rectangle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetFilledOnRectangle = "rectangle.inset.filled.on.rectangle"

        /// SF Symbols's name：rectangle.inset.topleading.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetTopleadingFilled = "rectangle.inset.topleading.filled"

        /// SF Symbols's name：rectangle.inset.topleft.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetTopleftFilled = "rectangle.inset.topleft.filled"

        /// SF Symbols's name：rectangle.inset.topright.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetToprightFilled = "rectangle.inset.topright.filled"

        /// SF Symbols's name：rectangle.inset.toptrailing.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleInsetToptrailingFilled = "rectangle.inset.toptrailing.filled"

        /// SF Symbols's name：rectangle.leadinghalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLeadinghalfInsetFilled = "rectangle.leadinghalf.inset.filled"

        /// SF Symbols's name：rectangle.leadinghalf.inset.filled.arrow.leading
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLeadinghalfInsetFilledArrowLeading = "rectangle.leadinghalf.inset.filled.arrow.leading"

        /// SF Symbols's name：rectangle.leadingthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLeadingthirdInsetFilled = "rectangle.leadingthird.inset.filled"

        /// SF Symbols's name：rectangle.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLefthalfFilled = "rectangle.lefthalf.filled"

        /// SF Symbols's name：rectangle.lefthalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLefthalfInsetFilled = "rectangle.lefthalf.inset.filled"

        /// SF Symbols's name：rectangle.lefthalf.inset.filled.arrow.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLefthalfInsetFilledArrowLeft = "rectangle.lefthalf.inset.filled.arrow.left"

        /// SF Symbols's name：rectangle.leftthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleLeftthirdInsetFilled = "rectangle.leftthird.inset.filled"

        /// SF Symbols's name：rectangle.on.rectangle.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleCircle = "rectangle.on.rectangle.circle"

        /// SF Symbols's name：rectangle.on.rectangle.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleCircleFill = "rectangle.on.rectangle.circle.fill"

        /// SF Symbols's name：rectangle.on.rectangle.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleSlashCircle = "rectangle.on.rectangle.slash.circle"

        /// SF Symbols's name：rectangle.on.rectangle.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleSlashCircleFill = "rectangle.on.rectangle.slash.circle.fill"

        /// SF Symbols's name：rectangle.on.rectangle.slash.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleSlashFill = "rectangle.on.rectangle.slash.fill"

        /// SF Symbols's name：rectangle.on.rectangle.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleSquare = "rectangle.on.rectangle.square"

        /// SF Symbols's name：rectangle.on.rectangle.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleOnRectangleSquareFill = "rectangle.on.rectangle.square.fill"

        /// SF Symbols's name：rectangle.portrait.and.arrow.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitAndArrowRight = "rectangle.portrait.and.arrow.right"

        /// SF Symbols's name：rectangle.portrait.and.arrow.right.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitAndArrowRightFill = "rectangle.portrait.and.arrow.right.fill"

        /// SF Symbols's name：rectangle.portrait.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomhalfFilled = "rectangle.portrait.bottomhalf.filled"

        /// SF Symbols's name：rectangle.portrait.bottomhalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomhalfInsetFilled = "rectangle.portrait.bottomhalf.inset.filled"

        /// SF Symbols's name：rectangle.portrait.bottomleading.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomleadingInsetFilled = "rectangle.portrait.bottomleading.inset.filled"

        /// SF Symbols's name：rectangle.portrait.bottomleft.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomleftInsetFilled = "rectangle.portrait.bottomleft.inset.filled"

        /// SF Symbols's name：rectangle.portrait.bottomright.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomrightInsetFilled = "rectangle.portrait.bottomright.inset.filled"

        /// SF Symbols's name：rectangle.portrait.bottomthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomthirdInsetFilled = "rectangle.portrait.bottomthird.inset.filled"

        /// SF Symbols's name：rectangle.portrait.bottomtrailing.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitBottomtrailingInsetFilled = "rectangle.portrait.bottomtrailing.inset.filled"

        /// SF Symbols's name：rectangle.portrait.center.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitCenterInsetFilled = "rectangle.portrait.center.inset.filled"

        /// SF Symbols's name：rectangle.portrait.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitInsetFilled = "rectangle.portrait.inset.filled"

        /// SF Symbols's name：rectangle.portrait.leadinghalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitLeadinghalfInsetFilled = "rectangle.portrait.leadinghalf.inset.filled"

        /// SF Symbols's name：rectangle.portrait.leadingthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitLeadingthirdInsetFilled = "rectangle.portrait.leadingthird.inset.filled"

        /// SF Symbols's name：rectangle.portrait.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitLefthalfFilled = "rectangle.portrait.lefthalf.filled"

        /// SF Symbols's name：rectangle.portrait.lefthalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitLefthalfInsetFilled = "rectangle.portrait.lefthalf.inset.filled"

        /// SF Symbols's name：rectangle.portrait.leftthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitLeftthirdInsetFilled = "rectangle.portrait.leftthird.inset.filled"

        /// SF Symbols's name：rectangle.portrait.on.rectangle.portrait
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitOnRectanglePortrait = "rectangle.portrait.on.rectangle.portrait"

        /// SF Symbols's name：rectangle.portrait.on.rectangle.portrait.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitOnRectanglePortraitFill = "rectangle.portrait.on.rectangle.portrait.fill"

        /// SF Symbols's name：rectangle.portrait.on.rectangle.portrait.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitOnRectanglePortraitSlash = "rectangle.portrait.on.rectangle.portrait.slash"

        /// SF Symbols's name：rectangle.portrait.on.rectangle.portrait.slash.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitOnRectanglePortraitSlashFill = "rectangle.portrait.on.rectangle.portrait.slash.fill"

        /// SF Symbols's name：rectangle.portrait.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitRighthalfFilled = "rectangle.portrait.righthalf.filled"

        /// SF Symbols's name：rectangle.portrait.righthalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitRighthalfInsetFilled = "rectangle.portrait.righthalf.inset.filled"

        /// SF Symbols's name：rectangle.portrait.rightthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitRightthirdInsetFilled = "rectangle.portrait.rightthird.inset.filled"

        /// SF Symbols's name：rectangle.portrait.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitSlash = "rectangle.portrait.slash"

        /// SF Symbols's name：rectangle.portrait.slash.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitSlashFill = "rectangle.portrait.slash.fill"

        /// SF Symbols's name：rectangle.portrait.split.2x1
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitSplit2x1 = "rectangle.portrait.split.2x1"

        /// SF Symbols's name：rectangle.portrait.split.2x1.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitSplit2x1Fill = "rectangle.portrait.split.2x1.fill"

        /// SF Symbols's name：rectangle.portrait.split.2x1.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitSplit2x1Slash = "rectangle.portrait.split.2x1.slash"

        /// SF Symbols's name：rectangle.portrait.split.2x1.slash.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitSplit2x1SlashFill = "rectangle.portrait.split.2x1.slash.fill"

        /// SF Symbols's name：rectangle.portrait.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTophalfFilled = "rectangle.portrait.tophalf.filled"

        /// SF Symbols's name：rectangle.portrait.tophalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTophalfInsetFilled = "rectangle.portrait.tophalf.inset.filled"

        /// SF Symbols's name：rectangle.portrait.topleading.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTopleadingInsetFilled = "rectangle.portrait.topleading.inset.filled"

        /// SF Symbols's name：rectangle.portrait.topleft.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTopleftInsetFilled = "rectangle.portrait.topleft.inset.filled"

        /// SF Symbols's name：rectangle.portrait.topright.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitToprightInsetFilled = "rectangle.portrait.topright.inset.filled"

        /// SF Symbols's name：rectangle.portrait.topthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTopthirdInsetFilled = "rectangle.portrait.topthird.inset.filled"

        /// SF Symbols's name：rectangle.portrait.toptrailing.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitToptrailingInsetFilled = "rectangle.portrait.toptrailing.inset.filled"

        /// SF Symbols's name：rectangle.portrait.trailinghalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTrailinghalfInsetFilled = "rectangle.portrait.trailinghalf.inset.filled"

        /// SF Symbols's name：rectangle.portrait.trailingthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectanglePortraitTrailingthirdInsetFilled = "rectangle.portrait.trailingthird.inset.filled"

        /// SF Symbols's name：rectangle.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleRighthalfFilled = "rectangle.righthalf.filled"

        /// SF Symbols's name：rectangle.righthalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleRighthalfInsetFilled = "rectangle.righthalf.inset.filled"

        /// SF Symbols's name：rectangle.righthalf.inset.filled.arrow.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleRighthalfInsetFilledArrowRight = "rectangle.righthalf.inset.filled.arrow.right"

        /// SF Symbols's name：rectangle.rightthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleRightthirdInsetFilled = "rectangle.rightthird.inset.filled"

        /// SF Symbols's name：rectangle.split.2x1.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleSplit2x1Slash = "rectangle.split.2x1.slash"

        /// SF Symbols's name：rectangle.split.2x1.slash.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleSplit2x1SlashFill = "rectangle.split.2x1.slash.fill"

        /// SF Symbols's name：rectangle.stack.badge.person.crop.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleStackBadgePersonCropFill = "rectangle.stack.badge.person.crop.fill"

        /// SF Symbols's name：rectangle.stack.badge.play
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleStackBadgePlay = "rectangle.stack.badge.play"

        /// SF Symbols's name：rectangle.stack.badge.play.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleStackBadgePlayFill = "rectangle.stack.badge.play.fill"

        /// SF Symbols's name：rectangle.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleTophalfFilled = "rectangle.tophalf.filled"

        /// SF Symbols's name：rectangle.tophalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleTophalfInsetFilled = "rectangle.tophalf.inset.filled"

        /// SF Symbols's name：rectangle.topthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleTopthirdInsetFilled = "rectangle.topthird.inset.filled"

        /// SF Symbols's name：rectangle.trailinghalf.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleTrailinghalfInsetFilled = "rectangle.trailinghalf.inset.filled"

        /// SF Symbols's name：rectangle.trailinghalf.inset.filled.arrow.trailing
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleTrailinghalfInsetFilledArrowTrailing = "rectangle.trailinghalf.inset.filled.arrow.trailing"

        /// SF Symbols's name：rectangle.trailingthird.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case rectangleTrailingthirdInsetFilled = "rectangle.trailingthird.inset.filled"

        /// SF Symbols's name：repeat.1.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case repeat1Ar = "repeat.1.ar"

        /// SF Symbols's name：repeat.1.circle.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case repeat1CircleAr = "repeat.1.circle.ar"

        /// SF Symbols's name：repeat.1.circle.fill.ar
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case repeat1CircleFillAr = "repeat.1.circle.fill.ar"

        /// SF Symbols's name：repeat.1.circle.fill.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case repeat1CircleFillHi = "repeat.1.circle.fill.hi"

        /// SF Symbols's name：repeat.1.circle.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case repeat1CircleHi = "repeat.1.circle.hi"

        /// SF Symbols's name：repeat.1.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case repeat1Hi = "repeat.1.hi"

        /// SF Symbols's name：restart.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case restartCircleFill = "restart.circle.fill"

        /// SF Symbols's name：return.left
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case returnLeft = "return.left"

        /// SF Symbols's name：return.right
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case returnRight = "return.right"

        /// SF Symbols's name：scissors.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case scissorsCircle = "scissors.circle"

        /// SF Symbols's name：scissors.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case scissorsCircleFill = "scissors.circle.fill"

        /// SF Symbols's name：scooter
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case scooter = "scooter"

        /// SF Symbols's name：screwdriver
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case screwdriver = "screwdriver"

        /// SF Symbols's name：screwdriver.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case screwdriverFill = "screwdriver.fill"

        /// SF Symbols's name：sensor.tag.radiowaves.forward
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sensorTagRadiowavesForward = "sensor.tag.radiowaves.forward"

        /// SF Symbols's name：sensor.tag.radiowaves.forward.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sensorTagRadiowavesForwardFill = "sensor.tag.radiowaves.forward.fill"

        /// SF Symbols's name：shareplay
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shareplay = "shareplay"

        /// SF Symbols's name：shareplay.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shareplaySlash = "shareplay.slash"

        /// SF Symbols's name：shield.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shieldLefthalfFilled = "shield.lefthalf.filled"

        /// SF Symbols's name：shield.lefthalf.filled.slash
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shieldLefthalfFilledSlash = "shield.lefthalf.filled.slash"

        /// SF Symbols's name：shield.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shieldRighthalfFilled = "shield.righthalf.filled"

        /// SF Symbols's name：shippingbox.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shippingboxCircle = "shippingbox.circle"

        /// SF Symbols's name：shippingbox.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case shippingboxCircleFill = "shippingbox.circle.fill"

        /// SF Symbols's name：signature.ja
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case signatureJa = "signature.ja"

        /// SF Symbols's name：signature.th
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case signatureTh = "signature.th"

        /// SF Symbols's name：signature.zh
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case signatureZh = "signature.zh"

        /// SF Symbols's name：sleep.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sleepCircle = "sleep.circle"

        /// SF Symbols's name：sleep.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sleepCircleFill = "sleep.circle.fill"

        /// SF Symbols's name：slider.horizontal.2.rectangle.and.arrow.triangle.2.circlepath
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sliderHorizontal2RectangleAndArrowTriangle2Circlepath = "slider.horizontal.2.rectangle.and.arrow.triangle.2.circlepath"

        /// SF Symbols's name：slider.horizontal.below.square.filled.and.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sliderHorizontalBelowSquareFilledAndSquare = "slider.horizontal.below.square.filled.and.square"

        /// SF Symbols's name：smallcircle.filled.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case smallcircleFilledCircle = "smallcircle.filled.circle"

        /// SF Symbols's name：smallcircle.filled.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case smallcircleFilledCircleFill = "smallcircle.filled.circle.fill"

        /// SF Symbols's name：snowflake
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case snowflake = "snowflake"

        /// SF Symbols's name：snowflake.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case snowflakeCircle = "snowflake.circle"

        /// SF Symbols's name：snowflake.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case snowflakeCircleFill = "snowflake.circle.fill"

        /// SF Symbols's name：sparkle.magnifyingglass
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sparkleMagnifyingglass = "sparkle.magnifyingglass"

        /// SF Symbols's name：sparkles.square.filled.on.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sparklesSquareFilledOnSquare = "sparkles.square.filled.on.square"

        /// SF Symbols's name：sparkles.tv
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sparklesTv = "sparkles.tv"

        /// SF Symbols's name：sparkles.tv.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sparklesTvFill = "sparkles.tv.fill"

        /// SF Symbols's name：speaker.badge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case speakerBadgeExclamationmark = "speaker.badge.exclamationmark"

        /// SF Symbols's name：speaker.badge.exclamationmark.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case speakerBadgeExclamationmarkFill = "speaker.badge.exclamationmark.fill"

        /// SF Symbols's name：speaker.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case speakerCircle = "speaker.circle"

        /// SF Symbols's name：speaker.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case speakerCircleFill = "speaker.circle.fill"

        /// SF Symbols's name：square.2.stack.3d.bottom.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case square2Stack3dBottomFilled = "square.2.stack.3d.bottom.filled"

        /// SF Symbols's name：square.2.stack.3d.top.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case square2Stack3dTopFilled = "square.2.stack.3d.top.filled"

        /// SF Symbols's name：square.3.stack.3d.bottom.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case square3Stack3dBottomFilled = "square.3.stack.3d.bottom.filled"

        /// SF Symbols's name：square.3.stack.3d.middle.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case square3Stack3dMiddleFilled = "square.3.stack.3d.middle.filled"

        /// SF Symbols's name：square.3.stack.3d.top.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case square3Stack3dTopFilled = "square.3.stack.3d.top.filled"

        /// SF Symbols's name：square.and.arrow.up.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareAndArrowUpCircle = "square.and.arrow.up.circle"

        /// SF Symbols's name：square.and.arrow.up.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareAndArrowUpCircleFill = "square.and.arrow.up.circle.fill"

        /// SF Symbols's name：square.and.arrow.up.trianglebadge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareAndArrowUpTrianglebadgeExclamationmark = "square.and.arrow.up.trianglebadge.exclamationmark"

        /// SF Symbols's name：square.and.at.rectangle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareAndAtRectangleFill = "square.and.at.rectangle.fill"

        /// SF Symbols's name：square.and.line.vertical.and.square.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareAndLineVerticalAndSquareFilled = "square.and.line.vertical.and.square.filled"

        /// SF Symbols's name：square.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareBottomhalfFilled = "square.bottomhalf.filled"

        /// SF Symbols's name：square.dashed.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareDashedInsetFilled = "square.dashed.inset.filled"

        /// SF Symbols's name：square.fill.and.line.vertical.and.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareFillAndLineVerticalAndSquareFill = "square.fill.and.line.vertical.and.square.fill"

        /// SF Symbols's name：square.filled.and.line.vertical.and.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareFilledAndLineVerticalAndSquare = "square.filled.and.line.vertical.and.square"

        /// SF Symbols's name：square.filled.on.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareFilledOnSquare = "square.filled.on.square"

        /// SF Symbols's name：square.grid.3x1.below.line.grid.1x2.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x1BelowLineGrid1x2Fill = "square.grid.3x1.below.line.grid.1x2.fill"

        /// SF Symbols's name：square.grid.3x3.bottomleft.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3BottomleftFilled = "square.grid.3x3.bottomleft.filled"

        /// SF Symbols's name：square.grid.3x3.bottommiddle.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3BottommiddleFilled = "square.grid.3x3.bottommiddle.filled"

        /// SF Symbols's name：square.grid.3x3.bottomright.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3BottomrightFilled = "square.grid.3x3.bottomright.filled"

        /// SF Symbols's name：square.grid.3x3.middle.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3MiddleFilled = "square.grid.3x3.middle.filled"

        /// SF Symbols's name：square.grid.3x3.middleleft.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3MiddleleftFilled = "square.grid.3x3.middleleft.filled"

        /// SF Symbols's name：square.grid.3x3.middleright.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3MiddlerightFilled = "square.grid.3x3.middleright.filled"

        /// SF Symbols's name：square.grid.3x3.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3Square = "square.grid.3x3.square"

        /// SF Symbols's name：square.grid.3x3.topleft.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3TopleftFilled = "square.grid.3x3.topleft.filled"

        /// SF Symbols's name：square.grid.3x3.topmiddle.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3TopmiddleFilled = "square.grid.3x3.topmiddle.filled"

        /// SF Symbols's name：square.grid.3x3.topright.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareGrid3x3ToprightFilled = "square.grid.3x3.topright.filled"

        /// SF Symbols's name：square.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareInsetFilled = "square.inset.filled"

        /// SF Symbols's name：square.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareLefthalfFilled = "square.lefthalf.filled"

        /// SF Symbols's name：square.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareRighthalfFilled = "square.righthalf.filled"

        /// SF Symbols's name：square.text.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareTextSquare = "square.text.square"

        /// SF Symbols's name：square.text.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareTextSquareFill = "square.text.square.fill"

        /// SF Symbols's name：square.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case squareTophalfFilled = "square.tophalf.filled"

        /// SF Symbols's name：star.bubble
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case starBubble = "star.bubble"

        /// SF Symbols's name：star.bubble.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case starBubbleFill = "star.bubble.fill"

        /// SF Symbols's name：star.leadinghalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case starLeadinghalfFilled = "star.leadinghalf.filled"

        /// SF Symbols's name：stethoscope.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case stethoscopeCircle = "stethoscope.circle"

        /// SF Symbols's name：stethoscope.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case stethoscopeCircleFill = "stethoscope.circle.fill"

        /// SF Symbols's name：suitcase
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case suitcase = "suitcase"

        /// SF Symbols's name：suitcase.cart
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case suitcaseCart = "suitcase.cart"

        /// SF Symbols's name：suitcase.cart.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case suitcaseCartFill = "suitcase.cart.fill"

        /// SF Symbols's name：suitcase.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case suitcaseFill = "suitcase.fill"

        /// SF Symbols's name：sun.and.horizon
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sunAndHorizon = "sun.and.horizon"

        /// SF Symbols's name：sun.and.horizon.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sunAndHorizonFill = "sun.and.horizon.fill"

        /// SF Symbols's name：sun.max.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sunMaxCircle = "sun.max.circle"

        /// SF Symbols's name：sun.max.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case sunMaxCircleFill = "sun.max.circle.fill"

        /// SF Symbols's name：tablecells.fill.badge.ellipsis
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tablecellsFillBadgeEllipsis = "tablecells.fill.badge.ellipsis"

        /// SF Symbols's name：tag.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tagSquare = "tag.square"

        /// SF Symbols's name：tag.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tagSquareFill = "tag.square.fill"

        /// SF Symbols's name：takeoutbag.and.cup.and.straw
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case takeoutbagAndCupAndStraw = "takeoutbag.and.cup.and.straw"

        /// SF Symbols's name：takeoutbag.and.cup.and.straw.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case takeoutbagAndCupAndStrawFill = "takeoutbag.and.cup.and.straw.fill"

        /// SF Symbols's name：teletype.answer.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case teletypeAnswerCircle = "teletype.answer.circle"

        /// SF Symbols's name：teletype.answer.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case teletypeAnswerCircleFill = "teletype.answer.circle.fill"

        /// SF Symbols's name：testtube.2
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case testtube2 = "testtube.2"

        /// SF Symbols's name：text.viewfinder
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case textViewfinder = "text.viewfinder"

        /// SF Symbols's name：textformat.123.hi
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case textformat123Hi = "textformat.123.hi"

        /// SF Symbols's name：theatermasks
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case theatermasks = "theatermasks"

        /// SF Symbols's name：theatermasks.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case theatermasksCircle = "theatermasks.circle"

        /// SF Symbols's name：theatermasks.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case theatermasksCircleFill = "theatermasks.circle.fill"

        /// SF Symbols's name：theatermasks.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case theatermasksFill = "theatermasks.fill"

        /// SF Symbols's name：train.side.front.car
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trainSideFrontCar = "train.side.front.car"

        /// SF Symbols's name：train.side.middle.car
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trainSideMiddleCar = "train.side.middle.car"

        /// SF Symbols's name：train.side.rear.car
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trainSideRearCar = "train.side.rear.car"

        /// SF Symbols's name：tram.fill.tunnel
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tramFillTunnel = "tram.fill.tunnel"

        /// SF Symbols's name：trapezoid.and.line.horizontal
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trapezoidAndLineHorizontal = "trapezoid.and.line.horizontal"

        /// SF Symbols's name：trapezoid.and.line.horizontal.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trapezoidAndLineHorizontalFill = "trapezoid.and.line.horizontal.fill"

        /// SF Symbols's name：trapezoid.and.line.vertical
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trapezoidAndLineVertical = "trapezoid.and.line.vertical"

        /// SF Symbols's name：trapezoid.and.line.vertical.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trapezoidAndLineVerticalFill = "trapezoid.and.line.vertical.fill"

        /// SF Symbols's name：trash.slash.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trashSlashCircle = "trash.slash.circle"

        /// SF Symbols's name：trash.slash.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trashSlashCircleFill = "trash.slash.circle.fill"

        /// SF Symbols's name：trash.slash.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trashSlashSquare = "trash.slash.square"

        /// SF Symbols's name：trash.slash.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trashSlashSquareFill = "trash.slash.square.fill"

        /// SF Symbols's name：trash.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trashSquare = "trash.square"

        /// SF Symbols's name：trash.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case trashSquareFill = "trash.square.fill"

        /// SF Symbols's name：triangle.bottomhalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case triangleBottomhalfFilled = "triangle.bottomhalf.filled"

        /// SF Symbols's name：triangle.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case triangleInsetFilled = "triangle.inset.filled"

        /// SF Symbols's name：triangle.lefthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case triangleLefthalfFilled = "triangle.lefthalf.filled"

        /// SF Symbols's name：triangle.righthalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case triangleRighthalfFilled = "triangle.righthalf.filled"

        /// SF Symbols's name：triangle.tophalf.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case triangleTophalfFilled = "triangle.tophalf.filled"

        /// SF Symbols's name：tshirt
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tshirt = "tshirt"

        /// SF Symbols's name：tshirt.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tshirtFill = "tshirt.fill"

        /// SF Symbols's name：tv.inset.filled
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case tvInsetFilled = "tv.inset.filled"

        /// SF Symbols's name：video.and.waveform
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case videoAndWaveform = "video.and.waveform"

        /// SF Symbols's name：video.and.waveform.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case videoAndWaveformFill = "video.and.waveform.fill"

        /// SF Symbols's name：video.badge.ellipsis
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case videoBadgeEllipsis = "video.badge.ellipsis"

        /// SF Symbols's name：video.fill.badge.ellipsis
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case videoFillBadgeEllipsis = "video.fill.badge.ellipsis"

        /// SF Symbols's name：video.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case videoSquare = "video.square"

        /// SF Symbols's name：video.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case videoSquareFill = "video.square.fill"

        /// SF Symbols's name：wake.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case wakeCircle = "wake.circle"

        /// SF Symbols's name：wake.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case wakeCircleFill = "wake.circle.fill"

        /// SF Symbols's name：watchface.applewatch.case
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case watchfaceApplewatchCase = "watchface.applewatch.case"

        /// SF Symbols's name：waveform.and.magnifyingglass
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case waveformAndMagnifyingglass = "waveform.and.magnifyingglass"

        /// SF Symbols's name：waveform.and.mic
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case waveformAndMic = "waveform.and.mic"

        /// SF Symbols's name：waveform.badge.exclamationmark
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case waveformBadgeExclamationmark = "waveform.badge.exclamationmark"

        /// SF Symbols's name：waveform.badge.minus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case waveformBadgeMinus = "waveform.badge.minus"

        /// SF Symbols's name：waveform.badge.plus
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case waveformBadgePlus = "waveform.badge.plus"

        /// SF Symbols's name：wifi.circle
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case wifiCircle = "wifi.circle"

        /// SF Symbols's name：wifi.circle.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case wifiCircleFill = "wifi.circle.fill"

        /// SF Symbols's name：wifi.square
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case wifiSquare = "wifi.square"

        /// SF Symbols's name：wifi.square.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case wifiSquareFill = "wifi.square.fill"

        /// SF Symbols's name：xmark.app
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case xmarkApp = "xmark.app"

        /// SF Symbols's name：xmark.app.fill
        @available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *)
        case xmarkAppFill = "xmark.app.fill"

        /// SF Symbols's name：bolt.ring.closed
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case boltRingClosed = "bolt.ring.closed"

        /// SF Symbols's name：platter.filled.bottom.and.arrow.down.iphone
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case platterFilledBottomAndArrowDownIphone = "platter.filled.bottom.and.arrow.down.iphone"

        /// SF Symbols's name：platter.filled.bottom.iphone
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case platterFilledBottomIphone = "platter.filled.bottom.iphone"

        /// SF Symbols's name：platter.filled.top.and.arrow.up.iphone
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case platterFilledTopAndArrowUpIphone = "platter.filled.top.and.arrow.up.iphone"

        /// SF Symbols's name：platter.filled.top.iphone
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case platterFilledTopIphone = "platter.filled.top.iphone"

        /// SF Symbols's name：square.3.layers.3d.down.backward
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case square3Layers3dDownBackward = "square.3.layers.3d.down.backward"

        /// SF Symbols's name：square.3.layers.3d.down.forward
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case square3Layers3dDownForward = "square.3.layers.3d.down.forward"

        /// SF Symbols's name：square.3.layers.3d.down.left
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case square3Layers3dDownLeft = "square.3.layers.3d.down.left"

        /// SF Symbols's name：square.3.layers.3d.down.right
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case square3Layers3dDownRight = "square.3.layers.3d.down.right"

        /// SF Symbols's name：text.justify.leading
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case textJustifyLeading = "text.justify.leading"

        /// SF Symbols's name：text.justify.left
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case textJustifyLeft = "text.justify.left"

        /// SF Symbols's name：text.justify.right
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case textJustifyRight = "text.justify.right"

        /// SF Symbols's name：text.justify.trailing
        @available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *)
        case textJustifyTrailing = "text.justify.trailing"

        /// SF Symbols's name：airpod.gen3.left
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case airpodGen3Left = "airpod.gen3.left"

        /// SF Symbols's name：airpod.gen3.right
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case airpodGen3Right = "airpod.gen3.right"

        /// SF Symbols's name：airpods.gen3
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case airpodsGen3 = "airpods.gen3"

        /// SF Symbols's name：airpods.gen3.chargingcase.wireless
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case airpodsGen3ChargingcaseWireless = "airpods.gen3.chargingcase.wireless"

        /// SF Symbols's name：airpods.gen3.chargingcase.wireless.fill
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case airpodsGen3ChargingcaseWirelessFill = "airpods.gen3.chargingcase.wireless.fill"

        /// SF Symbols's name：beats.fit.pro
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case beatsFitPro = "beats.fit.pro"

        /// SF Symbols's name：beats.fit.pro.chargingcase
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case beatsFitProChargingcase = "beats.fit.pro.chargingcase"

        /// SF Symbols's name：beats.fit.pro.chargingcase.fill
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case beatsFitProChargingcaseFill = "beats.fit.pro.chargingcase.fill"

        /// SF Symbols's name：beats.fit.pro.left
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case beatsFitProLeft = "beats.fit.pro.left"

        /// SF Symbols's name：beats.fit.pro.right
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case beatsFitProRight = "beats.fit.pro.right"

        /// SF Symbols's name：rectangle.leadinghalf.filled
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case rectangleLeadinghalfFilled = "rectangle.leadinghalf.filled"

        /// SF Symbols's name：rectangle.trailinghalf.filled
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case rectangleTrailinghalfFilled = "rectangle.trailinghalf.filled"

        /// SF Symbols's name：square.3.layers.3d.down.left.slash
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case square3Layers3dDownLeftSlash = "square.3.layers.3d.down.left.slash"

        /// SF Symbols's name：square.3.layers.3d.down.right.slash
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case square3Layers3dDownRightSlash = "square.3.layers.3d.down.right.slash"

        /// SF Symbols's name：square.3.stack.3d.slash
        @available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *)
        case square3Stack3dSlash = "square.3.stack.3d.slash"

        /// SF Symbols's name：camera.macro
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case cameraMacro = "camera.macro"

        /// SF Symbols's name：camera.macro.circle
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case cameraMacroCircle = "camera.macro.circle"

        /// SF Symbols's name：camera.macro.circle.fill
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case cameraMacroCircleFill = "camera.macro.circle.fill"

        /// SF Symbols's name：dots.and.line.vertical.and.cursorarrow.rectangle
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case dotsAndLineVerticalAndCursorarrowRectangle = "dots.and.line.vertical.and.cursorarrow.rectangle"

        /// SF Symbols's name：key.viewfinder
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case keyViewfinder = "key.viewfinder"

        /// SF Symbols's name：person.badge.key
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case personBadgeKey = "person.badge.key"

        /// SF Symbols's name：person.badge.key.fill
        @available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *)
        case personBadgeKeyFill = "person.badge.key.fill"

        /// SF Symbols's name：abs.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case absBrakesignal = "abs.brakesignal"

        /// SF Symbols's name：air.conditioner.horizontal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case airConditionerHorizontal = "air.conditioner.horizontal"

        /// SF Symbols's name：air.conditioner.horizontal.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case airConditionerHorizontalFill = "air.conditioner.horizontal.fill"

        /// SF Symbols's name：air.conditioner.vertical
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case airConditionerVertical = "air.conditioner.vertical"

        /// SF Symbols's name：air.conditioner.vertical.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case airConditionerVerticalFill = "air.conditioner.vertical.fill"

        /// SF Symbols's name：air.purifier
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case airPurifier = "air.purifier"

        /// SF Symbols's name：air.purifier.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case airPurifierFill = "air.purifier.fill"

        /// SF Symbols's name：alarm.waves.left.and.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case alarmWavesLeftAndRight = "alarm.waves.left.and.right"

        /// SF Symbols's name：alarm.waves.left.and.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case alarmWavesLeftAndRightFill = "alarm.waves.left.and.right.fill"

        /// SF Symbols's name：allergens.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case allergensFill = "allergens.fill"

        /// SF Symbols's name：angle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case angle = "angle"

        /// SF Symbols's name：apple.logo
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case appleLogo = "apple.logo"

        /// SF Symbols's name：arrow.down.and.line.horizontal.and.arrow.up
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowDownAndLineHorizontalAndArrowUp = "arrow.down.and.line.horizontal.and.arrow.up"

        /// SF Symbols's name：arrow.down.message
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowDownMessage = "arrow.down.message"

        /// SF Symbols's name：arrow.down.message.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowDownMessageFill = "arrow.down.message.fill"

        /// SF Symbols's name：arrow.left.and.line.vertical.and.arrow.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowLeftAndLineVerticalAndArrowRight = "arrow.left.and.line.vertical.and.arrow.right"

        /// SF Symbols's name：arrow.left.and.right.text.vertical
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowLeftAndRightTextVertical = "arrow.left.and.right.text.vertical"

        /// SF Symbols's name：arrow.right.and.line.vertical.and.arrow.left
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowRightAndLineVerticalAndArrowLeft = "arrow.right.and.line.vertical.and.arrow.left"

        /// SF Symbols's name：arrow.up.and.down.and.sparkles
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowUpAndDownAndSparkles = "arrow.up.and.down.and.sparkles"

        /// SF Symbols's name：arrow.up.and.down.text.horizontal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowUpAndDownTextHorizontal = "arrow.up.and.down.text.horizontal"

        /// SF Symbols's name：arrow.up.and.line.horizontal.and.arrow.down
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowUpAndLineHorizontalAndArrowDown = "arrow.up.and.line.horizontal.and.arrow.down"

        /// SF Symbols's name：arrow.up.circle.badge.clock
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowUpCircleBadgeClock = "arrow.up.circle.badge.clock"

        /// SF Symbols's name：arrowshape.backward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeBackward = "arrowshape.backward"

        /// SF Symbols's name：arrowshape.backward.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeBackwardFill = "arrowshape.backward.fill"

        /// SF Symbols's name：arrowshape.forward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeForward = "arrowshape.forward"

        /// SF Symbols's name：arrowshape.forward.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeForwardFill = "arrowshape.forward.fill"

        /// SF Symbols's name：arrowshape.left
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeLeft = "arrowshape.left"

        /// SF Symbols's name：arrowshape.left.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeLeftFill = "arrowshape.left.fill"

        /// SF Symbols's name：arrowshape.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeRight = "arrowshape.right"

        /// SF Symbols's name：arrowshape.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeRightFill = "arrowshape.right.fill"

        /// SF Symbols's name：arrowshape.turn.up.backward.badge.clock
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeTurnUpBackwardBadgeClock = "arrowshape.turn.up.backward.badge.clock"

        /// SF Symbols's name：arrowshape.turn.up.backward.badge.clock.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeTurnUpBackwardBadgeClockFill = "arrowshape.turn.up.backward.badge.clock.fill"

        /// SF Symbols's name：arrowshape.turn.up.backward.badge.clock.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeTurnUpBackwardBadgeClockFillRtl = "arrowshape.turn.up.backward.badge.clock.fill.rtl"

        /// SF Symbols's name：arrowshape.turn.up.backward.badge.clock.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case arrowshapeTurnUpBackwardBadgeClockRtl = "arrowshape.turn.up.backward.badge.clock.rtl"

        /// SF Symbols's name：australsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case australsign = "australsign"

        /// SF Symbols's name：av.remote
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case avRemote = "av.remote"

        /// SF Symbols's name：av.remote.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case avRemoteFill = "av.remote.fill"

        /// SF Symbols's name：backpack
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case backpack = "backpack"

        /// SF Symbols's name：backpack.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case backpackFill = "backpack.fill"

        /// SF Symbols's name：backward.end.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case backwardEndCircle = "backward.end.circle"

        /// SF Symbols's name：backward.end.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case backwardEndCircleFill = "backward.end.circle.fill"

        /// SF Symbols's name：bag.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bagBadgeQuestionmark = "bag.badge.questionmark"

        /// SF Symbols's name：bag.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bagBadgeQuestionmarkAr = "bag.badge.questionmark.ar"

        /// SF Symbols's name：bag.fill.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bagFillBadgeQuestionmark = "bag.fill.badge.questionmark"

        /// SF Symbols's name：bag.fill.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bagFillBadgeQuestionmarkAr = "bag.fill.badge.questionmark.ar"

        /// SF Symbols's name：bahtsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bahtsign = "bahtsign"

        /// SF Symbols's name：balloon
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case balloon = "balloon"

        /// SF Symbols's name：balloon.2
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case balloon2 = "balloon.2"

        /// SF Symbols's name：balloon.2.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case balloon2Fill = "balloon.2.fill"

        /// SF Symbols's name：balloon.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case balloonFill = "balloon.fill"

        /// SF Symbols's name：baseball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case baseball = "baseball"

        /// SF Symbols's name：baseball.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case baseballCircle = "baseball.circle"

        /// SF Symbols's name：baseball.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case baseballCircleFill = "baseball.circle.fill"

        /// SF Symbols's name：baseball.diamond.bases
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case baseballDiamondBases = "baseball.diamond.bases"

        /// SF Symbols's name：baseball.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case baseballFill = "baseball.fill"

        /// SF Symbols's name：basket
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case basket = "basket"

        /// SF Symbols's name：basket.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case basketFill = "basket.fill"

        /// SF Symbols's name：basketball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case basketball = "basketball"

        /// SF Symbols's name：basketball.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case basketballCircle = "basketball.circle"

        /// SF Symbols's name：basketball.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case basketballCircleFill = "basketball.circle.fill"

        /// SF Symbols's name：basketball.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case basketballFill = "basketball.fill"

        /// SF Symbols's name：bathtub
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bathtub = "bathtub"

        /// SF Symbols's name：bathtub.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bathtubFill = "bathtub.fill"

        /// SF Symbols's name：battery.100.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case battery100Circle = "battery.100.circle"

        /// SF Symbols's name：battery.100.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case battery100CircleFill = "battery.100.circle.fill"

        /// SF Symbols's name：beach.umbrella
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case beachUmbrella = "beach.umbrella"

        /// SF Symbols's name：beach.umbrella.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case beachUmbrellaFill = "beach.umbrella.fill"

        /// SF Symbols's name：bell.and.waves.left.and.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bellAndWavesLeftAndRight = "bell.and.waves.left.and.right"

        /// SF Symbols's name：bell.and.waves.left.and.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bellAndWavesLeftAndRightFill = "bell.and.waves.left.and.right.fill"

        /// SF Symbols's name：bird
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bird = "bird"

        /// SF Symbols's name：bird.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case birdFill = "bird.fill"

        /// SF Symbols's name：birthday.cake
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case birthdayCake = "birthday.cake"

        /// SF Symbols's name：birthday.cake.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case birthdayCakeFill = "birthday.cake.fill"

        /// SF Symbols's name：bitcoinsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bitcoinsign = "bitcoinsign"

        /// SF Symbols's name：blinds.horizontal.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case blindsHorizontalClosed = "blinds.horizontal.closed"

        /// SF Symbols's name：blinds.horizontal.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case blindsHorizontalOpen = "blinds.horizontal.open"

        /// SF Symbols's name：blinds.vertical.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case blindsVerticalClosed = "blinds.vertical.closed"

        /// SF Symbols's name：blinds.vertical.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case blindsVerticalOpen = "blinds.vertical.open"

        /// SF Symbols's name：bolt.badge.clock
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boltBadgeClock = "bolt.badge.clock"

        /// SF Symbols's name：bolt.badge.clock.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boltBadgeClockFill = "bolt.badge.clock.fill"

        /// SF Symbols's name：bolt.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boltBrakesignal = "bolt.brakesignal"

        /// SF Symbols's name：box.truck
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boxTruck = "box.truck"

        /// SF Symbols's name：box.truck.badge.clock
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boxTruckBadgeClock = "box.truck.badge.clock"

        /// SF Symbols's name：box.truck.badge.clock.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boxTruckBadgeClockFill = "box.truck.badge.clock.fill"

        /// SF Symbols's name：box.truck.badge.clock.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boxTruckBadgeClockFillRtl = "box.truck.badge.clock.fill.rtl"

        /// SF Symbols's name：box.truck.badge.clock.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boxTruckBadgeClockRtl = "box.truck.badge.clock.rtl"

        /// SF Symbols's name：box.truck.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case boxTruckFill = "box.truck.fill"

        /// SF Symbols's name：brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case brakesignal = "brakesignal"

        /// SF Symbols's name：brakesignal.dashed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case brakesignalDashed = "brakesignal.dashed"

        /// SF Symbols's name：brazilianrealsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case brazilianrealsign = "brazilianrealsign"

        /// SF Symbols's name：bubbles.and.sparkles
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bubblesAndSparkles = "bubbles.and.sparkles"

        /// SF Symbols's name：bubbles.and.sparkles.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case bubblesAndSparklesFill = "bubbles.and.sparkles.fill"

        /// SF Symbols's name：button.programmable
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case buttonProgrammable = "button.programmable"

        /// SF Symbols's name：button.programmable.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case buttonProgrammableSquare = "button.programmable.square"

        /// SF Symbols's name：button.programmable.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case buttonProgrammableSquareFill = "button.programmable.square.fill"

        /// SF Symbols's name：cabinet
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cabinet = "cabinet"

        /// SF Symbols's name：cabinet.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cabinetFill = "cabinet.fill"

        /// SF Symbols's name：carbon.dioxide.cloud
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case carbonDioxideCloud = "carbon.dioxide.cloud"

        /// SF Symbols's name：carbon.dioxide.cloud.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case carbonDioxideCloudFill = "carbon.dioxide.cloud.fill"

        /// SF Symbols's name：carbon.monoxide.cloud
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case carbonMonoxideCloud = "carbon.monoxide.cloud"

        /// SF Symbols's name：carbon.monoxide.cloud.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case carbonMonoxideCloudFill = "carbon.monoxide.cloud.fill"

        /// SF Symbols's name：carrot
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case carrot = "carrot"

        /// SF Symbols's name：carrot.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case carrotFill = "carrot.fill"

        /// SF Symbols's name：cart.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cartBadgeQuestionmark = "cart.badge.questionmark"

        /// SF Symbols's name：cart.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cartBadgeQuestionmarkAr = "cart.badge.questionmark.ar"

        /// SF Symbols's name：cart.badge.questionmark.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cartBadgeQuestionmarkRtl = "cart.badge.questionmark.rtl"

        /// SF Symbols's name：cart.fill.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cartFillBadgeQuestionmark = "cart.fill.badge.questionmark"

        /// SF Symbols's name：cart.fill.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cartFillBadgeQuestionmarkAr = "cart.fill.badge.questionmark.ar"

        /// SF Symbols's name：cart.fill.badge.questionmark.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cartFillBadgeQuestionmarkRtl = "cart.fill.badge.questionmark.rtl"

        /// SF Symbols's name：cedisign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cedisign = "cedisign"

        /// SF Symbols's name：cellularbars
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cellularbars = "cellularbars"

        /// SF Symbols's name：centsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case centsign = "centsign"

        /// SF Symbols's name：chair
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chair = "chair"

        /// SF Symbols's name：chair.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chairFill = "chair.fill"

        /// SF Symbols's name：chair.lounge
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chairLounge = "chair.lounge"

        /// SF Symbols's name：chair.lounge.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chairLoungeFill = "chair.lounge.fill"

        /// SF Symbols's name：chandelier
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chandelier = "chandelier"

        /// SF Symbols's name：chandelier.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chandelierFill = "chandelier.fill"

        /// SF Symbols's name：character.duployan
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case characterDuployan = "character.duployan"

        /// SF Symbols's name：character.phonetic
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case characterPhonetic = "character.phonetic"

        /// SF Symbols's name：character.sutton
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case characterSutton = "character.sutton"

        /// SF Symbols's name：chart.line.downtrend.xyaxis
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chartLineDowntrendXyaxis = "chart.line.downtrend.xyaxis"

        /// SF Symbols's name：chart.line.downtrend.xyaxis.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chartLineDowntrendXyaxisCircle = "chart.line.downtrend.xyaxis.circle"

        /// SF Symbols's name：chart.line.downtrend.xyaxis.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chartLineDowntrendXyaxisCircleFill = "chart.line.downtrend.xyaxis.circle.fill"

        /// SF Symbols's name：chart.line.flattrend.xyaxis
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chartLineFlattrendXyaxis = "chart.line.flattrend.xyaxis"

        /// SF Symbols's name：chart.line.flattrend.xyaxis.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chartLineFlattrendXyaxisCircle = "chart.line.flattrend.xyaxis.circle"

        /// SF Symbols's name：chart.line.flattrend.xyaxis.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chartLineFlattrendXyaxisCircleFill = "chart.line.flattrend.xyaxis.circle.fill"

        /// SF Symbols's name：checklist.checked
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checklistChecked = "checklist.checked"

        /// SF Symbols's name：checklist.checked.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checklistCheckedRtl = "checklist.checked.rtl"

        /// SF Symbols's name：checklist.unchecked
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checklistUnchecked = "checklist.unchecked"

        /// SF Symbols's name：checkmark.circle.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkCircleBadgeQuestionmark = "checkmark.circle.badge.questionmark"

        /// SF Symbols's name：checkmark.circle.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkCircleBadgeQuestionmarkAr = "checkmark.circle.badge.questionmark.ar"

        /// SF Symbols's name：checkmark.circle.badge.questionmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkCircleBadgeQuestionmarkFill = "checkmark.circle.badge.questionmark.fill"

        /// SF Symbols's name：checkmark.circle.badge.questionmark.fill.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkCircleBadgeQuestionmarkFillAr = "checkmark.circle.badge.questionmark.fill.ar"

        /// SF Symbols's name：checkmark.circle.badge.xmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkCircleBadgeXmark = "checkmark.circle.badge.xmark"

        /// SF Symbols's name：checkmark.circle.badge.xmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkCircleBadgeXmarkFill = "checkmark.circle.badge.xmark.fill"

        /// SF Symbols's name：checkmark.message
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkMessage = "checkmark.message"

        /// SF Symbols's name：checkmark.message.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case checkmarkMessageFill = "checkmark.message.fill"

        /// SF Symbols's name：chevron.backward.to.line
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chevronBackwardToLine = "chevron.backward.to.line"

        /// SF Symbols's name：chevron.forward.to.line
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chevronForwardToLine = "chevron.forward.to.line"

        /// SF Symbols's name：chevron.left.to.line
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chevronLeftToLine = "chevron.left.to.line"

        /// SF Symbols's name：chevron.right.to.line
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case chevronRightToLine = "chevron.right.to.line"

        /// SF Symbols's name：circle.dashed.rectangle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case circleDashedRectangle = "circle.dashed.rectangle"

        /// SF Symbols's name：circle.filled.pattern.diagonalline.rectangle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case circleFilledPatternDiagonallineRectangle = "circle.filled.pattern.diagonalline.rectangle"

        /// SF Symbols's name：circle.rectangle.dashed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case circleRectangleDashed = "circle.rectangle.dashed"

        /// SF Symbols's name：circle.rectangle.filled.pattern.diagonalline
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case circleRectangleFilledPatternDiagonalline = "circle.rectangle.filled.pattern.diagonalline"

        /// SF Symbols's name：clipboard
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clipboard = "clipboard"

        /// SF Symbols's name：clipboard.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clipboardFill = "clipboard.fill"

        /// SF Symbols's name：clock.badge
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadge = "clock.badge"

        /// SF Symbols's name：clock.badge.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeFill = "clock.badge.fill"

        /// SF Symbols's name：clock.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeQuestionmark = "clock.badge.questionmark"

        /// SF Symbols's name：clock.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeQuestionmarkAr = "clock.badge.questionmark.ar"

        /// SF Symbols's name：clock.badge.questionmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeQuestionmarkFill = "clock.badge.questionmark.fill"

        /// SF Symbols's name：clock.badge.questionmark.fill.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeQuestionmarkFillAr = "clock.badge.questionmark.fill.ar"

        /// SF Symbols's name：clock.badge.xmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeXmark = "clock.badge.xmark"

        /// SF Symbols's name：clock.badge.xmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case clockBadgeXmarkFill = "clock.badge.xmark.fill"

        /// SF Symbols's name：cloud.bolt.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudBoltCircle = "cloud.bolt.circle"

        /// SF Symbols's name：cloud.bolt.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudBoltCircleFill = "cloud.bolt.circle.fill"

        /// SF Symbols's name：cloud.bolt.rain.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudBoltRainCircle = "cloud.bolt.rain.circle"

        /// SF Symbols's name：cloud.bolt.rain.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudBoltRainCircleFill = "cloud.bolt.rain.circle.fill"

        /// SF Symbols's name：cloud.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudCircle = "cloud.circle"

        /// SF Symbols's name：cloud.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudCircleFill = "cloud.circle.fill"

        /// SF Symbols's name：cloud.drizzle.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudDrizzleCircle = "cloud.drizzle.circle"

        /// SF Symbols's name：cloud.drizzle.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudDrizzleCircleFill = "cloud.drizzle.circle.fill"

        /// SF Symbols's name：cloud.fog.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudFogCircle = "cloud.fog.circle"

        /// SF Symbols's name：cloud.fog.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudFogCircleFill = "cloud.fog.circle.fill"

        /// SF Symbols's name：cloud.hail.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudHailCircle = "cloud.hail.circle"

        /// SF Symbols's name：cloud.hail.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudHailCircleFill = "cloud.hail.circle.fill"

        /// SF Symbols's name：cloud.heavyrain.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudHeavyrainCircle = "cloud.heavyrain.circle"

        /// SF Symbols's name：cloud.heavyrain.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudHeavyrainCircleFill = "cloud.heavyrain.circle.fill"

        /// SF Symbols's name：cloud.moon.bolt.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudMoonBoltCircle = "cloud.moon.bolt.circle"

        /// SF Symbols's name：cloud.moon.bolt.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudMoonBoltCircleFill = "cloud.moon.bolt.circle.fill"

        /// SF Symbols's name：cloud.moon.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudMoonCircle = "cloud.moon.circle"

        /// SF Symbols's name：cloud.moon.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudMoonCircleFill = "cloud.moon.circle.fill"

        /// SF Symbols's name：cloud.moon.rain.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudMoonRainCircle = "cloud.moon.rain.circle"

        /// SF Symbols's name：cloud.moon.rain.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudMoonRainCircleFill = "cloud.moon.rain.circle.fill"

        /// SF Symbols's name：cloud.rain.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudRainCircle = "cloud.rain.circle"

        /// SF Symbols's name：cloud.rain.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudRainCircleFill = "cloud.rain.circle.fill"

        /// SF Symbols's name：cloud.sleet.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSleetCircle = "cloud.sleet.circle"

        /// SF Symbols's name：cloud.sleet.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSleetCircleFill = "cloud.sleet.circle.fill"

        /// SF Symbols's name：cloud.snow.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSnowCircle = "cloud.snow.circle"

        /// SF Symbols's name：cloud.snow.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSnowCircleFill = "cloud.snow.circle.fill"

        /// SF Symbols's name：cloud.sun.bolt.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSunBoltCircle = "cloud.sun.bolt.circle"

        /// SF Symbols's name：cloud.sun.bolt.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSunBoltCircleFill = "cloud.sun.bolt.circle.fill"

        /// SF Symbols's name：cloud.sun.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSunCircle = "cloud.sun.circle"

        /// SF Symbols's name：cloud.sun.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSunCircleFill = "cloud.sun.circle.fill"

        /// SF Symbols's name：cloud.sun.rain.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSunRainCircle = "cloud.sun.rain.circle"

        /// SF Symbols's name：cloud.sun.rain.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cloudSunRainCircleFill = "cloud.sun.rain.circle.fill"

        /// SF Symbols's name：coloncurrencysign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case coloncurrencysign = "coloncurrencysign"

        /// SF Symbols's name：compass.drawing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case compassDrawing = "compass.drawing"

        /// SF Symbols's name：contact.sensor
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case contactSensor = "contact.sensor"

        /// SF Symbols's name：contact.sensor.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case contactSensorFill = "contact.sensor.fill"

        /// SF Symbols's name：cooktop
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cooktop = "cooktop"

        /// SF Symbols's name：cooktop.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cooktopFill = "cooktop.fill"

        /// SF Symbols's name：creditcard.viewfinder
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case creditcardViewfinder = "creditcard.viewfinder"

        /// SF Symbols's name：cricket.ball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cricketBall = "cricket.ball"

        /// SF Symbols's name：cricket.ball.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cricketBallCircle = "cricket.ball.circle"

        /// SF Symbols's name：cricket.ball.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cricketBallCircleFill = "cricket.ball.circle.fill"

        /// SF Symbols's name：cricket.ball.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cricketBallFill = "cricket.ball.fill"

        /// SF Symbols's name：cruzeirosign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cruzeirosign = "cruzeirosign"

        /// SF Symbols's name：cursorarrow.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case cursorarrowSquareFill = "cursorarrow.square.fill"

        /// SF Symbols's name：curtains.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case curtainsClosed = "curtains.closed"

        /// SF Symbols's name：curtains.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case curtainsOpen = "curtains.open"

        /// SF Symbols's name：dehumidifier
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dehumidifier = "dehumidifier"

        /// SF Symbols's name：dehumidifier.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dehumidifierFill = "dehumidifier.fill"

        /// SF Symbols's name：deskview
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case deskview = "deskview"

        /// SF Symbols's name：deskview.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case deskviewFill = "deskview.fill"

        /// SF Symbols's name：dial.high
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dialHigh = "dial.high"

        /// SF Symbols's name：dial.high.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dialHighFill = "dial.high.fill"

        /// SF Symbols's name：dial.low
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dialLow = "dial.low"

        /// SF Symbols's name：dial.low.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dialLowFill = "dial.low.fill"

        /// SF Symbols's name：dial.medium
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dialMedium = "dial.medium"

        /// SF Symbols's name：dial.medium.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dialMediumFill = "dial.medium.fill"

        /// SF Symbols's name：dishwasher
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dishwasher = "dishwasher"

        /// SF Symbols's name：dishwasher.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dishwasherFill = "dishwasher.fill"

        /// SF Symbols's name：distribute.horizontal.center
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeHorizontalCenter = "distribute.horizontal.center"

        /// SF Symbols's name：distribute.horizontal.center.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeHorizontalCenterFill = "distribute.horizontal.center.fill"

        /// SF Symbols's name：distribute.horizontal.left
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeHorizontalLeft = "distribute.horizontal.left"

        /// SF Symbols's name：distribute.horizontal.left.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeHorizontalLeftFill = "distribute.horizontal.left.fill"

        /// SF Symbols's name：distribute.horizontal.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeHorizontalRight = "distribute.horizontal.right"

        /// SF Symbols's name：distribute.horizontal.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeHorizontalRightFill = "distribute.horizontal.right.fill"

        /// SF Symbols's name：distribute.vertical.bottom
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeVerticalBottom = "distribute.vertical.bottom"

        /// SF Symbols's name：distribute.vertical.bottom.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeVerticalBottomFill = "distribute.vertical.bottom.fill"

        /// SF Symbols's name：distribute.vertical.center
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeVerticalCenter = "distribute.vertical.center"

        /// SF Symbols's name：distribute.vertical.center.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeVerticalCenterFill = "distribute.vertical.center.fill"

        /// SF Symbols's name：distribute.vertical.top
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeVerticalTop = "distribute.vertical.top"

        /// SF Symbols's name：distribute.vertical.top.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case distributeVerticalTopFill = "distribute.vertical.top.fill"

        /// SF Symbols's name：doc.badge.arrow.up
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case docBadgeArrowUp = "doc.badge.arrow.up"

        /// SF Symbols's name：doc.badge.arrow.up.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case docBadgeArrowUpFill = "doc.badge.arrow.up.fill"

        /// SF Symbols's name：dollarsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dollarsign = "dollarsign"

        /// SF Symbols's name：dollarsign.arrow.circlepath
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dollarsignArrowCirclepath = "dollarsign.arrow.circlepath"

        /// SF Symbols's name：dongsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dongsign = "dongsign"

        /// SF Symbols's name：door.french.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorFrenchClosed = "door.french.closed"

        /// SF Symbols's name：door.french.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorFrenchOpen = "door.french.open"

        /// SF Symbols's name：door.garage.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageClosed = "door.garage.closed"

        /// SF Symbols's name：door.garage.closed.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageClosedTrianglebadgeExclamationmark = "door.garage.closed.trianglebadge.exclamationmark"

        /// SF Symbols's name：door.garage.double.bay.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageDoubleBayClosed = "door.garage.double.bay.closed"

        /// SF Symbols's name：door.garage.double.bay.closed.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageDoubleBayClosedTrianglebadgeExclamationmark = "door.garage.double.bay.closed.trianglebadge.exclamationmark"

        /// SF Symbols's name：door.garage.double.bay.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageDoubleBayOpen = "door.garage.double.bay.open"

        /// SF Symbols's name：door.garage.double.bay.open.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageDoubleBayOpenTrianglebadgeExclamationmark = "door.garage.double.bay.open.trianglebadge.exclamationmark"

        /// SF Symbols's name：door.garage.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageOpen = "door.garage.open"

        /// SF Symbols's name：door.garage.open.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorGarageOpenTrianglebadgeExclamationmark = "door.garage.open.trianglebadge.exclamationmark"

        /// SF Symbols's name：door.left.hand.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorLeftHandClosed = "door.left.hand.closed"

        /// SF Symbols's name：door.left.hand.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorLeftHandOpen = "door.left.hand.open"

        /// SF Symbols's name：door.right.hand.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorRightHandClosed = "door.right.hand.closed"

        /// SF Symbols's name：door.right.hand.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorRightHandOpen = "door.right.hand.open"

        /// SF Symbols's name：door.sliding.left.hand.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorSlidingLeftHandClosed = "door.sliding.left.hand.closed"

        /// SF Symbols's name：door.sliding.left.hand.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorSlidingLeftHandOpen = "door.sliding.left.hand.open"

        /// SF Symbols's name：door.sliding.right.hand.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorSlidingRightHandClosed = "door.sliding.right.hand.closed"

        /// SF Symbols's name：door.sliding.right.hand.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case doorSlidingRightHandOpen = "door.sliding.right.hand.open"

        /// SF Symbols's name：drop.degreesign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropDegreesign = "drop.degreesign"

        /// SF Symbols's name：drop.degreesign.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropDegreesignFill = "drop.degreesign.fill"

        /// SF Symbols's name：drop.degreesign.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropDegreesignSlash = "drop.degreesign.slash"

        /// SF Symbols's name：drop.degreesign.slash.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropDegreesignSlashFill = "drop.degreesign.slash.fill"

        /// SF Symbols's name：drop.degreesign.slash.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropDegreesignSlashFillRtl = "drop.degreesign.slash.fill.rtl"

        /// SF Symbols's name：drop.degreesign.slash.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropDegreesignSlashRtl = "drop.degreesign.slash.rtl"

        /// SF Symbols's name：drop.keypad.rectangle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropKeypadRectangle = "drop.keypad.rectangle"

        /// SF Symbols's name：drop.keypad.rectangle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dropKeypadRectangleFill = "drop.keypad.rectangle.fill"

        /// SF Symbols's name：dryer
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dryer = "dryer"

        /// SF Symbols's name：dryer.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dryerFill = "dryer.fill"

        /// SF Symbols's name：dumbbell
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dumbbell = "dumbbell"

        /// SF Symbols's name：dumbbell.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case dumbbellFill = "dumbbell.fill"

        /// SF Symbols's name：ellipsis.message
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case ellipsisMessage = "ellipsis.message"

        /// SF Symbols's name：ellipsis.message.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case ellipsisMessageFill = "ellipsis.message.fill"

        /// SF Symbols's name：entry.lever.keypad
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case entryLeverKeypad = "entry.lever.keypad"

        /// SF Symbols's name：entry.lever.keypad.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case entryLeverKeypadFill = "entry.lever.keypad.fill"

        /// SF Symbols's name：entry.lever.keypad.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case entryLeverKeypadTrianglebadgeExclamationmark = "entry.lever.keypad.trianglebadge.exclamationmark"

        /// SF Symbols's name：entry.lever.keypad.trianglebadge.exclamationmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case entryLeverKeypadTrianglebadgeExclamationmarkFill = "entry.lever.keypad.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：envelope.open.badge.clock
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case envelopeOpenBadgeClock = "envelope.open.badge.clock"

        /// SF Symbols's name：eraser
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case eraser = "eraser"

        /// SF Symbols's name：eraser.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case eraserFill = "eraser.fill"

        /// SF Symbols's name：eraser.line.dashed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case eraserLineDashed = "eraser.line.dashed"

        /// SF Symbols's name：eraser.line.dashed.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case eraserLineDashedFill = "eraser.line.dashed.fill"

        /// SF Symbols's name：eurosign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case eurosign = "eurosign"

        /// SF Symbols's name：exclamationmark.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case exclamationmarkBrakesignal = "exclamationmark.brakesignal"

        /// SF Symbols's name：exclamationmark.lock
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case exclamationmarkLock = "exclamationmark.lock"

        /// SF Symbols's name：exclamationmark.lock.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case exclamationmarkLockFill = "exclamationmark.lock.fill"

        /// SF Symbols's name：exclamationmark.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case exclamationmarkQuestionmark = "exclamationmark.questionmark"

        /// SF Symbols's name：exclamationmark.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case exclamationmarkQuestionmarkAr = "exclamationmark.questionmark.ar"

        /// SF Symbols's name：externaldrive.badge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveBadgeExclamationmark = "externaldrive.badge.exclamationmark"

        /// SF Symbols's name：externaldrive.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveBadgeQuestionmark = "externaldrive.badge.questionmark"

        /// SF Symbols's name：externaldrive.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveBadgeQuestionmarkAr = "externaldrive.badge.questionmark.ar"

        /// SF Symbols's name：externaldrive.fill.badge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveFillBadgeExclamationmark = "externaldrive.fill.badge.exclamationmark"

        /// SF Symbols's name：externaldrive.fill.badge.questionmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveFillBadgeQuestionmark = "externaldrive.fill.badge.questionmark"

        /// SF Symbols's name：externaldrive.fill.badge.questionmark.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveFillBadgeQuestionmarkAr = "externaldrive.fill.badge.questionmark.ar"

        /// SF Symbols's name：externaldrive.fill.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveFillTrianglebadgeExclamationmark = "externaldrive.fill.trianglebadge.exclamationmark"

        /// SF Symbols's name：externaldrive.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case externaldriveTrianglebadgeExclamationmark = "externaldrive.trianglebadge.exclamationmark"

        /// SF Symbols's name：face.smiling.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case faceSmilingInverse = "face.smiling.inverse"

        /// SF Symbols's name：fan.and.light.ceiling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanAndLightCeiling = "fan.and.light.ceiling"

        /// SF Symbols's name：fan.and.light.ceiling.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanAndLightCeilingFill = "fan.and.light.ceiling.fill"

        /// SF Symbols's name：fan.ceiling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanCeiling = "fan.ceiling"

        /// SF Symbols's name：fan.ceiling.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanCeilingFill = "fan.ceiling.fill"

        /// SF Symbols's name：fan.desk
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanDesk = "fan.desk"

        /// SF Symbols's name：fan.desk.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanDeskFill = "fan.desk.fill"

        /// SF Symbols's name：fan.floor
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanFloor = "fan.floor"

        /// SF Symbols's name：fan.floor.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanFloorFill = "fan.floor.fill"

        /// SF Symbols's name：fan.oscillation
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanOscillation = "fan.oscillation"

        /// SF Symbols's name：fan.oscillation.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanOscillationFill = "fan.oscillation.fill"

        /// SF Symbols's name：fanblades.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanbladesSlash = "fanblades.slash"

        /// SF Symbols's name：fanblades.slash.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fanbladesSlashFill = "fanblades.slash.fill"

        /// SF Symbols's name：faxmachine.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case faxmachineFill = "faxmachine.fill"

        /// SF Symbols's name：figure.2.and.child.holdinghands
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figure2AndChildHoldinghands = "figure.2.and.child.holdinghands"

        /// SF Symbols's name：figure.2.arms.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figure2ArmsOpen = "figure.2.arms.open"

        /// SF Symbols's name：figure.american.football
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureAmericanFootball = "figure.american.football"

        /// SF Symbols's name：figure.and.child.holdinghands
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureAndChildHoldinghands = "figure.and.child.holdinghands"

        /// SF Symbols's name：figure.archery
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureArchery = "figure.archery"

        /// SF Symbols's name：figure.arms.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureArmsOpen = "figure.arms.open"

        /// SF Symbols's name：figure.australian.football
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureAustralianFootball = "figure.australian.football"

        /// SF Symbols's name：figure.badminton
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureBadminton = "figure.badminton"

        /// SF Symbols's name：figure.barre
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureBarre = "figure.barre"

        /// SF Symbols's name：figure.baseball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureBaseball = "figure.baseball"

        /// SF Symbols's name：figure.basketball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureBasketball = "figure.basketball"

        /// SF Symbols's name：figure.bowling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureBowling = "figure.bowling"

        /// SF Symbols's name：figure.boxing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureBoxing = "figure.boxing"

        /// SF Symbols's name：figure.climbing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureClimbing = "figure.climbing"

        /// SF Symbols's name：figure.cooldown
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureCooldown = "figure.cooldown"

        /// SF Symbols's name：figure.core.training
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureCoreTraining = "figure.core.training"

        /// SF Symbols's name：figure.cricket
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureCricket = "figure.cricket"

        /// SF Symbols's name：figure.cross.training
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureCrossTraining = "figure.cross.training"

        /// SF Symbols's name：figure.curling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureCurling = "figure.curling"

        /// SF Symbols's name：figure.dance
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureDance = "figure.dance"

        /// SF Symbols's name：figure.disc.sports
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureDiscSports = "figure.disc.sports"

        /// SF Symbols's name：figure.dress.line.vertical.figure
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureDressLineVerticalFigure = "figure.dress.line.vertical.figure"

        /// SF Symbols's name：figure.elliptical
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureElliptical = "figure.elliptical"

        /// SF Symbols's name：figure.equestrian.sports
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureEquestrianSports = "figure.equestrian.sports"

        /// SF Symbols's name：figure.fall
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureFall = "figure.fall"

        /// SF Symbols's name：figure.fall.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureFallCircle = "figure.fall.circle"

        /// SF Symbols's name：figure.fall.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureFallCircleFill = "figure.fall.circle.fill"

        /// SF Symbols's name：figure.fencing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureFencing = "figure.fencing"

        /// SF Symbols's name：figure.fishing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureFishing = "figure.fishing"

        /// SF Symbols's name：figure.flexibility
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureFlexibility = "figure.flexibility"

        /// SF Symbols's name：figure.golf
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureGolf = "figure.golf"

        /// SF Symbols's name：figure.gymnastics
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureGymnastics = "figure.gymnastics"

        /// SF Symbols's name：figure.hand.cycling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureHandCycling = "figure.hand.cycling"

        /// SF Symbols's name：figure.handball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureHandball = "figure.handball"

        /// SF Symbols's name：figure.highintensity.intervaltraining
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureHighintensityIntervaltraining = "figure.highintensity.intervaltraining"

        /// SF Symbols's name：figure.hiking
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureHiking = "figure.hiking"

        /// SF Symbols's name：figure.hockey
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureHockey = "figure.hockey"

        /// SF Symbols's name：figure.hunting
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureHunting = "figure.hunting"

        /// SF Symbols's name：figure.indoor.cycle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureIndoorCycle = "figure.indoor.cycle"

        /// SF Symbols's name：figure.jumprope
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureJumprope = "figure.jumprope"

        /// SF Symbols's name：figure.kickboxing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureKickboxing = "figure.kickboxing"

        /// SF Symbols's name：figure.lacrosse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureLacrosse = "figure.lacrosse"

        /// SF Symbols's name：figure.martial.arts
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureMartialArts = "figure.martial.arts"

        /// SF Symbols's name：figure.mind.and.body
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureMindAndBody = "figure.mind.and.body"

        /// SF Symbols's name：figure.mixed.cardio
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureMixedCardio = "figure.mixed.cardio"

        /// SF Symbols's name：figure.open.water.swim
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureOpenWaterSwim = "figure.open.water.swim"

        /// SF Symbols's name：figure.outdoor.cycle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureOutdoorCycle = "figure.outdoor.cycle"

        /// SF Symbols's name：figure.pickleball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figurePickleball = "figure.pickleball"

        /// SF Symbols's name：figure.pilates
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figurePilates = "figure.pilates"

        /// SF Symbols's name：figure.play
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figurePlay = "figure.play"

        /// SF Symbols's name：figure.pool.swim
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figurePoolSwim = "figure.pool.swim"

        /// SF Symbols's name：figure.racquetball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRacquetball = "figure.racquetball"

        /// SF Symbols's name：figure.roll.runningpace
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRollRunningpace = "figure.roll.runningpace"

        /// SF Symbols's name：figure.rolling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRolling = "figure.rolling"

        /// SF Symbols's name：figure.rower
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRower = "figure.rower"

        /// SF Symbols's name：figure.rugby
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRugby = "figure.rugby"

        /// SF Symbols's name：figure.run
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRun = "figure.run"

        /// SF Symbols's name：figure.run.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRunCircle = "figure.run.circle"

        /// SF Symbols's name：figure.run.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureRunCircleFill = "figure.run.circle.fill"

        /// SF Symbols's name：figure.sailing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSailing = "figure.sailing"

        /// SF Symbols's name：figure.skating
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSkating = "figure.skating"

        /// SF Symbols's name：figure.skiing.crosscountry
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSkiingCrosscountry = "figure.skiing.crosscountry"

        /// SF Symbols's name：figure.skiing.downhill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSkiingDownhill = "figure.skiing.downhill"

        /// SF Symbols's name：figure.snowboarding
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSnowboarding = "figure.snowboarding"

        /// SF Symbols's name：figure.soccer
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSoccer = "figure.soccer"

        /// SF Symbols's name：figure.socialdance
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSocialdance = "figure.socialdance"

        /// SF Symbols's name：figure.softball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSoftball = "figure.softball"

        /// SF Symbols's name：figure.squash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSquash = "figure.squash"

        /// SF Symbols's name：figure.stair.stepper
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureStairStepper = "figure.stair.stepper"

        /// SF Symbols's name：figure.stairs
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureStairs = "figure.stairs"

        /// SF Symbols's name：figure.step.training
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureStepTraining = "figure.step.training"

        /// SF Symbols's name：figure.strengthtraining.functional
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureStrengthtrainingFunctional = "figure.strengthtraining.functional"

        /// SF Symbols's name：figure.strengthtraining.traditional
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureStrengthtrainingTraditional = "figure.strengthtraining.traditional"

        /// SF Symbols's name：figure.surfing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureSurfing = "figure.surfing"

        /// SF Symbols's name：figure.table.tennis
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureTableTennis = "figure.table.tennis"

        /// SF Symbols's name：figure.taichi
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureTaichi = "figure.taichi"

        /// SF Symbols's name：figure.tennis
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureTennis = "figure.tennis"

        /// SF Symbols's name：figure.track.and.field
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureTrackAndField = "figure.track.and.field"

        /// SF Symbols's name：figure.volleyball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureVolleyball = "figure.volleyball"

        /// SF Symbols's name：figure.walk.arrival
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureWalkArrival = "figure.walk.arrival"

        /// SF Symbols's name：figure.walk.departure
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureWalkDeparture = "figure.walk.departure"

        /// SF Symbols's name：figure.walk.motion
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureWalkMotion = "figure.walk.motion"

        /// SF Symbols's name：figure.water.fitness
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureWaterFitness = "figure.water.fitness"

        /// SF Symbols's name：figure.waterpolo
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureWaterpolo = "figure.waterpolo"

        /// SF Symbols's name：figure.wrestling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureWrestling = "figure.wrestling"

        /// SF Symbols's name：figure.yoga
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case figureYoga = "figure.yoga"

        /// SF Symbols's name：film.stack
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case filmStack = "film.stack"

        /// SF Symbols's name：film.stack.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case filmStackFill = "film.stack.fill"

        /// SF Symbols's name：fireplace
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fireplace = "fireplace"

        /// SF Symbols's name：fireplace.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fireplaceFill = "fireplace.fill"

        /// SF Symbols's name：firewall
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case firewall = "firewall"

        /// SF Symbols's name：firewall.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case firewallFill = "firewall.fill"

        /// SF Symbols's name：fish
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fish = "fish"

        /// SF Symbols's name：fish.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fishFill = "fish.fill"

        /// SF Symbols's name：flag.2.crossed.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case flag2CrossedCircle = "flag.2.crossed.circle"

        /// SF Symbols's name：flag.2.crossed.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case flag2CrossedCircleFill = "flag.2.crossed.circle.fill"

        /// SF Symbols's name：flag.checkered
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case flagCheckered = "flag.checkered"

        /// SF Symbols's name：flag.checkered.2.crossed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case flagCheckered2Crossed = "flag.checkered.2.crossed"

        /// SF Symbols's name：fleuron
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fleuron = "fleuron"

        /// SF Symbols's name：fleuron.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fleuronFill = "fleuron.fill"

        /// SF Symbols's name：florinsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case florinsign = "florinsign"

        /// SF Symbols's name：fluid.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fluidBrakesignal = "fluid.brakesignal"

        /// SF Symbols's name：football
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case football = "football"

        /// SF Symbols's name：football.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case footballCircle = "football.circle"

        /// SF Symbols's name：football.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case footballCircleFill = "football.circle.fill"

        /// SF Symbols's name：football.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case footballFill = "football.fill"

        /// SF Symbols's name：forward.end.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case forwardEndCircle = "forward.end.circle"

        /// SF Symbols's name：forward.end.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case forwardEndCircleFill = "forward.end.circle.fill"

        /// SF Symbols's name：fossil.shell
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fossilShell = "fossil.shell"

        /// SF Symbols's name：fossil.shell.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fossilShellFill = "fossil.shell.fill"

        /// SF Symbols's name：francsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case francsign = "francsign"

        /// SF Symbols's name：frying.pan
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fryingPan = "frying.pan"

        /// SF Symbols's name：frying.pan.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case fryingPanFill = "frying.pan.fill"

        /// SF Symbols's name：gauge.high
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gaugeHigh = "gauge.high"

        /// SF Symbols's name：gauge.low
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gaugeLow = "gauge.low"

        /// SF Symbols's name：gauge.medium
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gaugeMedium = "gauge.medium"

        /// SF Symbols's name：gauge.medium.badge.minus
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gaugeMediumBadgeMinus = "gauge.medium.badge.minus"

        /// SF Symbols's name：gauge.medium.badge.plus
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gaugeMediumBadgePlus = "gauge.medium.badge.plus"

        /// SF Symbols's name：gear.badge
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gearBadge = "gear.badge"

        /// SF Symbols's name：gear.badge.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gearBadgeRtl = "gear.badge.rtl"

        /// SF Symbols's name：gearshape.arrow.triangle.2.circlepath
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case gearshapeArrowTriangle2Circlepath = "gearshape.arrow.triangle.2.circlepath"

        /// SF Symbols's name：globe.central.south.asia
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case globeCentralSouthAsia = "globe.central.south.asia"

        /// SF Symbols's name：globe.central.south.asia.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case globeCentralSouthAsiaFill = "globe.central.south.asia.fill"

        /// SF Symbols's name：globe.desk
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case globeDesk = "globe.desk"

        /// SF Symbols's name：globe.desk.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case globeDeskFill = "globe.desk.fill"

        /// SF Symbols's name：guaranisign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case guaranisign = "guaranisign"

        /// SF Symbols's name：hand.app
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case handApp = "hand.app"

        /// SF Symbols's name：hand.app.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case handAppFill = "hand.app.fill"

        /// SF Symbols's name：hand.raised.fingers.spread
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case handRaisedFingersSpread = "hand.raised.fingers.spread"

        /// SF Symbols's name：hand.raised.fingers.spread.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case handRaisedFingersSpreadFill = "hand.raised.fingers.spread.fill"

        /// SF Symbols's name：headlight.high.beam
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case headlightHighBeam = "headlight.high.beam"

        /// SF Symbols's name：headlight.high.beam.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case headlightHighBeamFill = "headlight.high.beam.fill"

        /// SF Symbols's name：headlight.low.beam
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case headlightLowBeam = "headlight.low.beam"

        /// SF Symbols's name：headlight.low.beam.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case headlightLowBeamFill = "headlight.low.beam.fill"

        /// SF Symbols's name：hearingdevice.and.signal.meter
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hearingdeviceAndSignalMeter = "hearingdevice.and.signal.meter"

        /// SF Symbols's name：hearingdevice.and.signal.meter.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hearingdeviceAndSignalMeterFill = "hearingdevice.and.signal.meter.fill"

        /// SF Symbols's name：hearingdevice.ear.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hearingdeviceEarFill = "hearingdevice.ear.fill"

        /// SF Symbols's name：heater.vertical
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case heaterVertical = "heater.vertical"

        /// SF Symbols's name：heater.vertical.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case heaterVerticalFill = "heater.vertical.fill"

        /// SF Symbols's name：hifireceiver
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hifireceiver = "hifireceiver"

        /// SF Symbols's name：hifireceiver.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hifireceiverFill = "hifireceiver.fill"

        /// SF Symbols's name：hifispeaker.and.appletv.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hifispeakerAndAppletvFillRtl = "hifispeaker.and.appletv.fill.rtl"

        /// SF Symbols's name：hifispeaker.and.appletv.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hifispeakerAndAppletvRtl = "hifispeaker.and.appletv.rtl"

        /// SF Symbols's name：hockey.puck
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hockeyPuck = "hockey.puck"

        /// SF Symbols's name：hockey.puck.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hockeyPuckCircle = "hockey.puck.circle"

        /// SF Symbols's name：hockey.puck.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hockeyPuckCircleFill = "hockey.puck.circle.fill"

        /// SF Symbols's name：hockey.puck.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hockeyPuckFill = "hockey.puck.fill"

        /// SF Symbols's name：hold.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case holdBrakesignal = "hold.brakesignal"

        /// SF Symbols's name：homepod.and.appletv.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case homepodAndAppletvFillRtl = "homepod.and.appletv.fill.rtl"

        /// SF Symbols's name：homepod.and.appletv.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case homepodAndAppletvRtl = "homepod.and.appletv.rtl"

        /// SF Symbols's name：homepodmini.and.appletv.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case homepodminiAndAppletvFillRtl = "homepodmini.and.appletv.fill.rtl"

        /// SF Symbols's name：homepodmini.and.appletv.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case homepodminiAndAppletvRtl = "homepodmini.and.appletv.rtl"

        /// SF Symbols's name：hryvniasign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hryvniasign = "hryvniasign"

        /// SF Symbols's name：humidifier
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case humidifier = "humidifier"

        /// SF Symbols's name：humidifier.and.droplets
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case humidifierAndDroplets = "humidifier.and.droplets"

        /// SF Symbols's name：humidifier.and.droplets.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case humidifierAndDropletsFill = "humidifier.and.droplets.fill"

        /// SF Symbols's name：humidifier.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case humidifierFill = "humidifier.fill"

        /// SF Symbols's name：hurricane.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hurricaneCircle = "hurricane.circle"

        /// SF Symbols's name：hurricane.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case hurricaneCircleFill = "hurricane.circle.fill"

        /// SF Symbols's name：indianrupeesign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case indianrupeesign = "indianrupeesign"

        /// SF Symbols's name：info.bubble
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case infoBubble = "info.bubble"

        /// SF Symbols's name：info.bubble.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case infoBubbleFill = "info.bubble.fill"

        /// SF Symbols's name：info.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case infoSquare = "info.square"

        /// SF Symbols's name：info.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case infoSquareFill = "info.square.fill"

        /// SF Symbols's name：keyboard.badge.ellipsis.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardBadgeEllipsisFill = "keyboard.badge.ellipsis.fill"

        /// SF Symbols's name：keyboard.badge.eye
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardBadgeEye = "keyboard.badge.eye"

        /// SF Symbols's name：keyboard.badge.eye.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardBadgeEyeFill = "keyboard.badge.eye.fill"

        /// SF Symbols's name：keyboard.chevron.compact.down.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardChevronCompactDownFill = "keyboard.chevron.compact.down.fill"

        /// SF Symbols's name：keyboard.chevron.compact.left.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardChevronCompactLeftFill = "keyboard.chevron.compact.left.fill"

        /// SF Symbols's name：keyboard.onehanded.left.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardOnehandedLeftFill = "keyboard.onehanded.left.fill"

        /// SF Symbols's name：keyboard.onehanded.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case keyboardOnehandedRightFill = "keyboard.onehanded.right.fill"

        /// SF Symbols's name：kipsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case kipsign = "kipsign"

        /// SF Symbols's name：lamp.ceiling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampCeiling = "lamp.ceiling"

        /// SF Symbols's name：lamp.ceiling.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampCeilingFill = "lamp.ceiling.fill"

        /// SF Symbols's name：lamp.ceiling.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampCeilingInverse = "lamp.ceiling.inverse"

        /// SF Symbols's name：lamp.desk
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampDesk = "lamp.desk"

        /// SF Symbols's name：lamp.desk.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampDeskFill = "lamp.desk.fill"

        /// SF Symbols's name：lamp.floor
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampFloor = "lamp.floor"

        /// SF Symbols's name：lamp.floor.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampFloorFill = "lamp.floor.fill"

        /// SF Symbols's name：lamp.table
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampTable = "lamp.table"

        /// SF Symbols's name：lamp.table.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lampTableFill = "lamp.table.fill"

        /// SF Symbols's name：laptopcomputer.and.ipad
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case laptopcomputerAndIpad = "laptopcomputer.and.ipad"

        /// SF Symbols's name：larisign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case larisign = "larisign"

        /// SF Symbols's name：laurel.leading
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case laurelLeading = "laurel.leading"

        /// SF Symbols's name：laurel.trailing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case laurelTrailing = "laurel.trailing"

        /// SF Symbols's name：light.beacon.max
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightBeaconMax = "light.beacon.max"

        /// SF Symbols's name：light.beacon.max.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightBeaconMaxFill = "light.beacon.max.fill"

        /// SF Symbols's name：light.beacon.min
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightBeaconMin = "light.beacon.min"

        /// SF Symbols's name：light.beacon.min.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightBeaconMinFill = "light.beacon.min.fill"

        /// SF Symbols's name：light.cylindrical.ceiling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightCylindricalCeiling = "light.cylindrical.ceiling"

        /// SF Symbols's name：light.cylindrical.ceiling.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightCylindricalCeilingFill = "light.cylindrical.ceiling.fill"

        /// SF Symbols's name：light.cylindrical.ceiling.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightCylindricalCeilingInverse = "light.cylindrical.ceiling.inverse"

        /// SF Symbols's name：light.panel
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightPanel = "light.panel"

        /// SF Symbols's name：light.panel.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightPanelFill = "light.panel.fill"

        /// SF Symbols's name：light.recessed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRecessed = "light.recessed"

        /// SF Symbols's name：light.recessed.3
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRecessed3 = "light.recessed.3"

        /// SF Symbols's name：light.recessed.3.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRecessed3Fill = "light.recessed.3.fill"

        /// SF Symbols's name：light.recessed.3.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRecessed3Inverse = "light.recessed.3.inverse"

        /// SF Symbols's name：light.recessed.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRecessedFill = "light.recessed.fill"

        /// SF Symbols's name：light.recessed.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRecessedInverse = "light.recessed.inverse"

        /// SF Symbols's name：light.ribbon
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRibbon = "light.ribbon"

        /// SF Symbols's name：light.ribbon.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightRibbonFill = "light.ribbon.fill"

        /// SF Symbols's name：light.strip.2
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightStrip2 = "light.strip.2"

        /// SF Symbols's name：light.strip.2.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightStrip2Fill = "light.strip.2.fill"

        /// SF Symbols's name：lightbulb.2
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightbulb2 = "lightbulb.2"

        /// SF Symbols's name：lightbulb.2.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightbulb2Fill = "lightbulb.2.fill"

        /// SF Symbols's name：lightbulb.led
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightbulbLed = "lightbulb.led"

        /// SF Symbols's name：lightbulb.led.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightbulbLedFill = "lightbulb.led.fill"

        /// SF Symbols's name：lightbulb.led.wide
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightbulbLedWide = "lightbulb.led.wide"

        /// SF Symbols's name：lightbulb.led.wide.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightbulbLedWideFill = "lightbulb.led.wide.fill"

        /// SF Symbols's name：lightswitch.off
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOff = "lightswitch.off"

        /// SF Symbols's name：lightswitch.off.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOffFill = "lightswitch.off.fill"

        /// SF Symbols's name：lightswitch.off.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOffSquare = "lightswitch.off.square"

        /// SF Symbols's name：lightswitch.off.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOffSquareFill = "lightswitch.off.square.fill"

        /// SF Symbols's name：lightswitch.on
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOn = "lightswitch.on"

        /// SF Symbols's name：lightswitch.on.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOnFill = "lightswitch.on.fill"

        /// SF Symbols's name：lightswitch.on.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOnSquare = "lightswitch.on.square"

        /// SF Symbols's name：lightswitch.on.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lightswitchOnSquareFill = "lightswitch.on.square.fill"

        /// SF Symbols's name：lirasign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lirasign = "lirasign"

        /// SF Symbols's name：list.bullet.clipboard
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case listBulletClipboard = "list.bullet.clipboard"

        /// SF Symbols's name：list.bullet.clipboard.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case listBulletClipboardFill = "list.bullet.clipboard.fill"

        /// SF Symbols's name：list.clipboard
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case listClipboard = "list.clipboard"

        /// SF Symbols's name：list.clipboard.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case listClipboardFill = "list.clipboard.fill"

        /// SF Symbols's name：lizard
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lizard = "lizard"

        /// SF Symbols's name：lizard.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lizardFill = "lizard.fill"

        /// SF Symbols's name：location.slash.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case locationSlashCircle = "location.slash.circle"

        /// SF Symbols's name：location.slash.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case locationSlashCircleFill = "location.slash.circle.fill"

        /// SF Symbols's name：lock.open.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lockOpenTrianglebadgeExclamationmark = "lock.open.trianglebadge.exclamationmark"

        /// SF Symbols's name：lock.open.trianglebadge.exclamationmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lockOpenTrianglebadgeExclamationmarkFill = "lock.open.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：lock.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lockTrianglebadgeExclamationmark = "lock.trianglebadge.exclamationmark"

        /// SF Symbols's name：lock.trianglebadge.exclamationmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case lockTrianglebadgeExclamationmarkFill = "lock.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：macstudio
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case macstudio = "macstudio"

        /// SF Symbols's name：macstudio.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case macstudioFill = "macstudio.fill"

        /// SF Symbols's name：manatsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case manatsign = "manatsign"

        /// SF Symbols's name：medal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case medal = "medal"

        /// SF Symbols's name：medal.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case medalFill = "medal.fill"

        /// SF Symbols's name：medical.thermometer
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case medicalThermometer = "medical.thermometer"

        /// SF Symbols's name：medical.thermometer.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case medicalThermometerFill = "medical.thermometer.fill"

        /// SF Symbols's name：message.badge
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadge = "message.badge"

        /// SF Symbols's name：message.badge.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeCircle = "message.badge.circle"

        /// SF Symbols's name：message.badge.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeCircleFill = "message.badge.circle.fill"

        /// SF Symbols's name：message.badge.circle.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeCircleFillRtl = "message.badge.circle.fill.rtl"

        /// SF Symbols's name：message.badge.circle.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeCircleRtl = "message.badge.circle.rtl"

        /// SF Symbols's name：message.badge.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeFill = "message.badge.fill"

        /// SF Symbols's name：message.badge.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeFillRtl = "message.badge.fill.rtl"

        /// SF Symbols's name：message.badge.filled.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeFilledFill = "message.badge.filled.fill"

        /// SF Symbols's name：message.badge.filled.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeFilledFillRtl = "message.badge.filled.fill.rtl"

        /// SF Symbols's name：message.badge.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case messageBadgeRtl = "message.badge.rtl"

        /// SF Symbols's name：mic.and.signal.meter
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case micAndSignalMeter = "mic.and.signal.meter"

        /// SF Symbols's name：mic.and.signal.meter.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case micAndSignalMeterFill = "mic.and.signal.meter.fill"

        /// SF Symbols's name：mic.badge.xmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case micBadgeXmark = "mic.badge.xmark"

        /// SF Symbols's name：mic.fill.badge.xmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case micFillBadgeXmark = "mic.fill.badge.xmark"

        /// SF Symbols's name：microbe
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case microbe = "microbe"

        /// SF Symbols's name：microbe.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case microbeCircle = "microbe.circle"

        /// SF Symbols's name：microbe.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case microbeCircleFill = "microbe.circle.fill"

        /// SF Symbols's name：microbe.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case microbeFill = "microbe.fill"

        /// SF Symbols's name：microwave
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case microwave = "microwave"

        /// SF Symbols's name：microwave.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case microwaveFill = "microwave.fill"

        /// SF Symbols's name：millsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case millsign = "millsign"

        /// SF Symbols's name：mirror.side.left
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case mirrorSideLeft = "mirror.side.left"

        /// SF Symbols's name：mirror.side.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case mirrorSideRight = "mirror.side.right"

        /// SF Symbols's name：moon.haze
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonHaze = "moon.haze"

        /// SF Symbols's name：moon.haze.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonHazeCircle = "moon.haze.circle"

        /// SF Symbols's name：moon.haze.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonHazeCircleFill = "moon.haze.circle.fill"

        /// SF Symbols's name：moon.haze.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonHazeFill = "moon.haze.fill"

        /// SF Symbols's name：moon.stars.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonStarsCircle = "moon.stars.circle"

        /// SF Symbols's name：moon.stars.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonStarsCircleFill = "moon.stars.circle.fill"

        /// SF Symbols's name：moonphase.first.quarter
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseFirstQuarter = "moonphase.first.quarter"

        /// SF Symbols's name：moonphase.first.quarter.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseFirstQuarterInverse = "moonphase.first.quarter.inverse"

        /// SF Symbols's name：moonphase.full.moon
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseFullMoon = "moonphase.full.moon"

        /// SF Symbols's name：moonphase.full.moon.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseFullMoonInverse = "moonphase.full.moon.inverse"

        /// SF Symbols's name：moonphase.last.quarter
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseLastQuarter = "moonphase.last.quarter"

        /// SF Symbols's name：moonphase.last.quarter.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseLastQuarterInverse = "moonphase.last.quarter.inverse"

        /// SF Symbols's name：moonphase.new.moon
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseNewMoon = "moonphase.new.moon"

        /// SF Symbols's name：moonphase.new.moon.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseNewMoonInverse = "moonphase.new.moon.inverse"

        /// SF Symbols's name：moonphase.waning.crescent
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaningCrescent = "moonphase.waning.crescent"

        /// SF Symbols's name：moonphase.waning.crescent.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaningCrescentInverse = "moonphase.waning.crescent.inverse"

        /// SF Symbols's name：moonphase.waning.gibbous
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaningGibbous = "moonphase.waning.gibbous"

        /// SF Symbols's name：moonphase.waning.gibbous.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaningGibbousInverse = "moonphase.waning.gibbous.inverse"

        /// SF Symbols's name：moonphase.waxing.crescent
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaxingCrescent = "moonphase.waxing.crescent"

        /// SF Symbols's name：moonphase.waxing.crescent.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaxingCrescentInverse = "moonphase.waxing.crescent.inverse"

        /// SF Symbols's name：moonphase.waxing.gibbous
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaxingGibbous = "moonphase.waxing.gibbous"

        /// SF Symbols's name：moonphase.waxing.gibbous.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case moonphaseWaxingGibbousInverse = "moonphase.waxing.gibbous.inverse"

        /// SF Symbols's name：nairasign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case nairasign = "nairasign"

        /// SF Symbols's name：nosign.app
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case nosignApp = "nosign.app"

        /// SF Symbols's name：nosign.app.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case nosignAppFill = "nosign.app.fill"

        /// SF Symbols's name：numbersign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case numbersign = "numbersign"

        /// SF Symbols's name：oar.2.crossed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case oar2Crossed = "oar.2.crossed"

        /// SF Symbols's name：opticaldisc.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case opticaldiscFill = "opticaldisc.fill"

        /// SF Symbols's name：oven
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case oven = "oven"

        /// SF Symbols's name：oven.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case ovenFill = "oven.fill"

        /// SF Symbols's name：parkinglight
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case parkinglight = "parkinglight"

        /// SF Symbols's name：parkinglight.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case parkinglightFill = "parkinglight.fill"

        /// SF Symbols's name：parkingsign.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case parkingsignBrakesignal = "parkingsign.brakesignal"

        /// SF Symbols's name：parkingsign.brakesignal.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case parkingsignBrakesignalSlash = "parkingsign.brakesignal.slash"

        /// SF Symbols's name：party.popper
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case partyPopper = "party.popper"

        /// SF Symbols's name：party.popper.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case partyPopperFill = "party.popper.fill"

        /// SF Symbols's name：pedestrian.gate.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pedestrianGateClosed = "pedestrian.gate.closed"

        /// SF Symbols's name：pedestrian.gate.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pedestrianGateOpen = "pedestrian.gate.open"

        /// SF Symbols's name：pencil.and.ruler
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pencilAndRuler = "pencil.and.ruler"

        /// SF Symbols's name：pencil.and.ruler.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pencilAndRulerFill = "pencil.and.ruler.fill"

        /// SF Symbols's name：pencil.line
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pencilLine = "pencil.line"

        /// SF Symbols's name：person.2.badge.gearshape
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case person2BadgeGearshape = "person.2.badge.gearshape"

        /// SF Symbols's name：person.2.badge.gearshape.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case person2BadgeGearshapeFill = "person.2.badge.gearshape.fill"

        /// SF Symbols's name：person.2.gobackward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case person2Gobackward = "person.2.gobackward"

        /// SF Symbols's name：person.2.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case person2Slash = "person.2.slash"

        /// SF Symbols's name：person.2.slash.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case person2SlashFill = "person.2.slash.fill"

        /// SF Symbols's name：person.and.background.dotted
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personAndBackgroundDotted = "person.and.background.dotted"

        /// SF Symbols's name：person.badge.shield.checkmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personBadgeShieldCheckmark = "person.badge.shield.checkmark"

        /// SF Symbols's name：person.badge.shield.checkmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personBadgeShieldCheckmarkFill = "person.badge.shield.checkmark.fill"

        /// SF Symbols's name：person.bust
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personBust = "person.bust"

        /// SF Symbols's name：person.bust.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personBustFill = "person.bust.fill"

        /// SF Symbols's name：person.crop.rectangle.badge.plus
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personCropRectangleBadgePlus = "person.crop.rectangle.badge.plus"

        /// SF Symbols's name：person.crop.rectangle.badge.plus.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personCropRectangleBadgePlusFill = "person.crop.rectangle.badge.plus.fill"

        /// SF Symbols's name：person.line.dotted.person
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personLineDottedPerson = "person.line.dotted.person"

        /// SF Symbols's name：person.line.dotted.person.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case personLineDottedPersonFill = "person.line.dotted.person.fill"

        /// SF Symbols's name：pesetasign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pesetasign = "pesetasign"

        /// SF Symbols's name：pesosign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pesosign = "pesosign"

        /// SF Symbols's name：phone.arrow.down.left.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneArrowDownLeftFill = "phone.arrow.down.left.fill"

        /// SF Symbols's name：phone.arrow.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneArrowRightFill = "phone.arrow.right.fill"

        /// SF Symbols's name：phone.arrow.up.right.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneArrowUpRightCircle = "phone.arrow.up.right.circle"

        /// SF Symbols's name：phone.arrow.up.right.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneArrowUpRightCircleFill = "phone.arrow.up.right.circle.fill"

        /// SF Symbols's name：phone.arrow.up.right.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneArrowUpRightFill = "phone.arrow.up.right.fill"

        /// SF Symbols's name：phone.badge.checkmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneBadgeCheckmark = "phone.badge.checkmark"

        /// SF Symbols's name：phone.connection.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneConnectionFill = "phone.connection.fill"

        /// SF Symbols's name：phone.down.waves.left.and.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneDownWavesLeftAndRight = "phone.down.waves.left.and.right"

        /// SF Symbols's name：phone.fill.badge.checkmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case phoneFillBadgeCheckmark = "phone.fill.badge.checkmark"

        /// SF Symbols's name：photo.stack
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case photoStack = "photo.stack"

        /// SF Symbols's name：photo.stack.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case photoStackFill = "photo.stack.fill"

        /// SF Symbols's name：pill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pill = "pill"

        /// SF Symbols's name：pill.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pillCircle = "pill.circle"

        /// SF Symbols's name：pill.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pillCircleFill = "pill.circle.fill"

        /// SF Symbols's name：pill.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pillFill = "pill.fill"

        /// SF Symbols's name：pipe.and.drop
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pipeAndDrop = "pipe.and.drop"

        /// SF Symbols's name：pipe.and.drop.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case pipeAndDropFill = "pipe.and.drop.fill"

        /// SF Symbols's name：play.desktopcomputer
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case playDesktopcomputer = "play.desktopcomputer"

        /// SF Symbols's name：play.display
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case playDisplay = "play.display"

        /// SF Symbols's name：play.laptopcomputer
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case playLaptopcomputer = "play.laptopcomputer"

        /// SF Symbols's name：playpause.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case playpauseCircle = "playpause.circle"

        /// SF Symbols's name：playpause.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case playpauseCircleFill = "playpause.circle.fill"

        /// SF Symbols's name：playstation.logo
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case playstationLogo = "playstation.logo"

        /// SF Symbols's name：popcorn
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case popcorn = "popcorn"

        /// SF Symbols's name：popcorn.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case popcornCircle = "popcorn.circle"

        /// SF Symbols's name：popcorn.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case popcornCircleFill = "popcorn.circle.fill"

        /// SF Symbols's name：popcorn.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case popcornFill = "popcorn.fill"

        /// SF Symbols's name：poweroutlet.strip
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletStrip = "poweroutlet.strip"

        /// SF Symbols's name：poweroutlet.strip.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletStripFill = "poweroutlet.strip.fill"

        /// SF Symbols's name：poweroutlet.type.a
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeA = "poweroutlet.type.a"

        /// SF Symbols's name：poweroutlet.type.a.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeAFill = "poweroutlet.type.a.fill"

        /// SF Symbols's name：poweroutlet.type.a.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeASquare = "poweroutlet.type.a.square"

        /// SF Symbols's name：poweroutlet.type.a.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeASquareFill = "poweroutlet.type.a.square.fill"

        /// SF Symbols's name：poweroutlet.type.b
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeB = "poweroutlet.type.b"

        /// SF Symbols's name：poweroutlet.type.b.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeBFill = "poweroutlet.type.b.fill"

        /// SF Symbols's name：poweroutlet.type.b.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeBSquare = "poweroutlet.type.b.square"

        /// SF Symbols's name：poweroutlet.type.b.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeBSquareFill = "poweroutlet.type.b.square.fill"

        /// SF Symbols's name：poweroutlet.type.c
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeC = "poweroutlet.type.c"

        /// SF Symbols's name：poweroutlet.type.c.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeCFill = "poweroutlet.type.c.fill"

        /// SF Symbols's name：poweroutlet.type.c.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeCSquare = "poweroutlet.type.c.square"

        /// SF Symbols's name：poweroutlet.type.c.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeCSquareFill = "poweroutlet.type.c.square.fill"

        /// SF Symbols's name：poweroutlet.type.d
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeD = "poweroutlet.type.d"

        /// SF Symbols's name：poweroutlet.type.d.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeDFill = "poweroutlet.type.d.fill"

        /// SF Symbols's name：poweroutlet.type.d.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeDSquare = "poweroutlet.type.d.square"

        /// SF Symbols's name：poweroutlet.type.d.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeDSquareFill = "poweroutlet.type.d.square.fill"

        /// SF Symbols's name：poweroutlet.type.e
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeE = "poweroutlet.type.e"

        /// SF Symbols's name：poweroutlet.type.e.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeEFill = "poweroutlet.type.e.fill"

        /// SF Symbols's name：poweroutlet.type.e.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeESquare = "poweroutlet.type.e.square"

        /// SF Symbols's name：poweroutlet.type.e.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeESquareFill = "poweroutlet.type.e.square.fill"

        /// SF Symbols's name：poweroutlet.type.f
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeF = "poweroutlet.type.f"

        /// SF Symbols's name：poweroutlet.type.f.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeFFill = "poweroutlet.type.f.fill"

        /// SF Symbols's name：poweroutlet.type.f.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeFSquare = "poweroutlet.type.f.square"

        /// SF Symbols's name：poweroutlet.type.f.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeFSquareFill = "poweroutlet.type.f.square.fill"

        /// SF Symbols's name：poweroutlet.type.g
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeG = "poweroutlet.type.g"

        /// SF Symbols's name：poweroutlet.type.g.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeGFill = "poweroutlet.type.g.fill"

        /// SF Symbols's name：poweroutlet.type.g.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeGSquare = "poweroutlet.type.g.square"

        /// SF Symbols's name：poweroutlet.type.g.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeGSquareFill = "poweroutlet.type.g.square.fill"

        /// SF Symbols's name：poweroutlet.type.h
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeH = "poweroutlet.type.h"

        /// SF Symbols's name：poweroutlet.type.h.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeHFill = "poweroutlet.type.h.fill"

        /// SF Symbols's name：poweroutlet.type.h.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeHSquare = "poweroutlet.type.h.square"

        /// SF Symbols's name：poweroutlet.type.h.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeHSquareFill = "poweroutlet.type.h.square.fill"

        /// SF Symbols's name：poweroutlet.type.i
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeI = "poweroutlet.type.i"

        /// SF Symbols's name：poweroutlet.type.i.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeIFill = "poweroutlet.type.i.fill"

        /// SF Symbols's name：poweroutlet.type.i.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeISquare = "poweroutlet.type.i.square"

        /// SF Symbols's name：poweroutlet.type.i.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeISquareFill = "poweroutlet.type.i.square.fill"

        /// SF Symbols's name：poweroutlet.type.j
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeJ = "poweroutlet.type.j"

        /// SF Symbols's name：poweroutlet.type.j.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeJFill = "poweroutlet.type.j.fill"

        /// SF Symbols's name：poweroutlet.type.j.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeJSquare = "poweroutlet.type.j.square"

        /// SF Symbols's name：poweroutlet.type.j.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeJSquareFill = "poweroutlet.type.j.square.fill"

        /// SF Symbols's name：poweroutlet.type.k
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeK = "poweroutlet.type.k"

        /// SF Symbols's name：poweroutlet.type.k.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeKFill = "poweroutlet.type.k.fill"

        /// SF Symbols's name：poweroutlet.type.k.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeKSquare = "poweroutlet.type.k.square"

        /// SF Symbols's name：poweroutlet.type.k.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeKSquareFill = "poweroutlet.type.k.square.fill"

        /// SF Symbols's name：poweroutlet.type.l
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeL = "poweroutlet.type.l"

        /// SF Symbols's name：poweroutlet.type.l.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeLFill = "poweroutlet.type.l.fill"

        /// SF Symbols's name：poweroutlet.type.l.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeLSquare = "poweroutlet.type.l.square"

        /// SF Symbols's name：poweroutlet.type.l.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeLSquareFill = "poweroutlet.type.l.square.fill"

        /// SF Symbols's name：poweroutlet.type.m
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeM = "poweroutlet.type.m"

        /// SF Symbols's name：poweroutlet.type.m.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeMFill = "poweroutlet.type.m.fill"

        /// SF Symbols's name：poweroutlet.type.m.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeMSquare = "poweroutlet.type.m.square"

        /// SF Symbols's name：poweroutlet.type.m.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeMSquareFill = "poweroutlet.type.m.square.fill"

        /// SF Symbols's name：poweroutlet.type.n
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeN = "poweroutlet.type.n"

        /// SF Symbols's name：poweroutlet.type.n.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeNFill = "poweroutlet.type.n.fill"

        /// SF Symbols's name：poweroutlet.type.n.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeNSquare = "poweroutlet.type.n.square"

        /// SF Symbols's name：poweroutlet.type.n.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeNSquareFill = "poweroutlet.type.n.square.fill"

        /// SF Symbols's name：poweroutlet.type.o
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeO = "poweroutlet.type.o"

        /// SF Symbols's name：poweroutlet.type.o.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeOFill = "poweroutlet.type.o.fill"

        /// SF Symbols's name：poweroutlet.type.o.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeOSquare = "poweroutlet.type.o.square"

        /// SF Symbols's name：poweroutlet.type.o.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case poweroutletTypeOSquareFill = "poweroutlet.type.o.square.fill"

        /// SF Symbols's name：questionmark.bubble
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case questionmarkBubble = "questionmark.bubble"

        /// SF Symbols's name：questionmark.bubble.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case questionmarkBubbleAr = "questionmark.bubble.ar"

        /// SF Symbols's name：questionmark.bubble.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case questionmarkBubbleFill = "questionmark.bubble.fill"

        /// SF Symbols's name：questionmark.bubble.fill.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case questionmarkBubbleFillAr = "questionmark.bubble.fill.ar"

        /// SF Symbols's name：quotelevel
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case quotelevel = "quotelevel"

        /// SF Symbols's name：recordingtape.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case recordingtapeCircle = "recordingtape.circle"

        /// SF Symbols's name：recordingtape.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case recordingtapeCircleFill = "recordingtape.circle.fill"

        /// SF Symbols's name：rectangle.portrait.and.arrow.forward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rectanglePortraitAndArrowForward = "rectangle.portrait.and.arrow.forward"

        /// SF Symbols's name：rectangle.portrait.and.arrow.forward.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rectanglePortraitAndArrowForwardFill = "rectangle.portrait.and.arrow.forward.fill"

        /// SF Symbols's name：rectangle.portrait.on.rectangle.portrait.angled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rectanglePortraitOnRectanglePortraitAngled = "rectangle.portrait.on.rectangle.portrait.angled"

        /// SF Symbols's name：rectangle.portrait.on.rectangle.portrait.angled.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rectanglePortraitOnRectanglePortraitAngledFill = "rectangle.portrait.on.rectangle.portrait.angled.fill"

        /// SF Symbols's name：refrigerator
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case refrigerator = "refrigerator"

        /// SF Symbols's name：refrigerator.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case refrigeratorFill = "refrigerator.fill"

        /// SF Symbols's name：road.lanes
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case roadLanes = "road.lanes"

        /// SF Symbols's name：road.lanes.curved.left
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case roadLanesCurvedLeft = "road.lanes.curved.left"

        /// SF Symbols's name：road.lanes.curved.right
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case roadLanesCurvedRight = "road.lanes.curved.right"

        /// SF Symbols's name：roller.shade.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rollerShadeClosed = "roller.shade.closed"

        /// SF Symbols's name：roller.shade.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rollerShadeOpen = "roller.shade.open"

        /// SF Symbols's name：roman.shade.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case romanShadeClosed = "roman.shade.closed"

        /// SF Symbols's name：roman.shade.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case romanShadeOpen = "roman.shade.open"

        /// SF Symbols's name：rublesign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rublesign = "rublesign"

        /// SF Symbols's name：rupeesign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case rupeesign = "rupeesign"

        /// SF Symbols's name：sailboat
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sailboat = "sailboat"

        /// SF Symbols's name：sailboat.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sailboatFill = "sailboat.fill"

        /// SF Symbols's name：sensor
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sensor = "sensor"

        /// SF Symbols's name：sensor.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sensorFill = "sensor.fill"

        /// SF Symbols's name：shared.with.you
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sharedWithYou = "shared.with.you"

        /// SF Symbols's name：shared.with.you.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sharedWithYouSlash = "shared.with.you.slash"

        /// SF Symbols's name：shazam.logo
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shazamLogo = "shazam.logo"

        /// SF Symbols's name：shazam.logo.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shazamLogoFill = "shazam.logo.fill"

        /// SF Symbols's name：shekelsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shekelsign = "shekelsign"

        /// SF Symbols's name：shippingbox.and.arrow.backward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shippingboxAndArrowBackward = "shippingbox.and.arrow.backward"

        /// SF Symbols's name：shippingbox.and.arrow.backward.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shippingboxAndArrowBackwardFill = "shippingbox.and.arrow.backward.fill"

        /// SF Symbols's name：shoeprints.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shoeprintsFill = "shoeprints.fill"

        /// SF Symbols's name：shower
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case shower = "shower"

        /// SF Symbols's name：shower.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case showerFill = "shower.fill"

        /// SF Symbols's name：shower.handheld
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case showerHandheld = "shower.handheld"

        /// SF Symbols's name：shower.handheld.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case showerHandheldFill = "shower.handheld.fill"

        /// SF Symbols's name：shower.sidejet
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case showerSidejet = "shower.sidejet"

        /// SF Symbols's name：shower.sidejet.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case showerSidejetFill = "shower.sidejet.fill"

        /// SF Symbols's name：sink
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sink = "sink"

        /// SF Symbols's name：sink.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sinkFill = "sink.fill"

        /// SF Symbols's name：slider.horizontal.2.gobackward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sliderHorizontal2Gobackward = "slider.horizontal.2.gobackward"

        /// SF Symbols's name：slider.horizontal.2.square.badge.arrow.down
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sliderHorizontal2SquareBadgeArrowDown = "slider.horizontal.2.square.badge.arrow.down"

        /// SF Symbols's name：slider.horizontal.2.square.on.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sliderHorizontal2SquareOnSquare = "slider.horizontal.2.square.on.square"

        /// SF Symbols's name：slider.horizontal.below.square.and.square.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sliderHorizontalBelowSquareAndSquareFilled = "slider.horizontal.below.square.and.square.filled"

        /// SF Symbols's name：smoke.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case smokeCircle = "smoke.circle"

        /// SF Symbols's name：smoke.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case smokeCircleFill = "smoke.circle.fill"

        /// SF Symbols's name：soccerball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case soccerball = "soccerball"

        /// SF Symbols's name：soccerball.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case soccerballCircle = "soccerball.circle"

        /// SF Symbols's name：soccerball.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case soccerballCircleFill = "soccerball.circle.fill"

        /// SF Symbols's name：soccerball.circle.fill.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case soccerballCircleFillInverse = "soccerball.circle.fill.inverse"

        /// SF Symbols's name：soccerball.circle.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case soccerballCircleInverse = "soccerball.circle.inverse"

        /// SF Symbols's name：soccerball.inverse
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case soccerballInverse = "soccerball.inverse"

        /// SF Symbols's name：sofa
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sofa = "sofa"

        /// SF Symbols's name：sofa.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sofaFill = "sofa.fill"

        /// SF Symbols's name：space
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case space = "space"

        /// SF Symbols's name：speaker.minus
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerMinus = "speaker.minus"

        /// SF Symbols's name：speaker.minus.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerMinusFill = "speaker.minus.fill"

        /// SF Symbols's name：speaker.plus
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerPlus = "speaker.plus"

        /// SF Symbols's name：speaker.plus.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerPlusFill = "speaker.plus.fill"

        /// SF Symbols's name：speaker.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerSquare = "speaker.square"

        /// SF Symbols's name：speaker.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerSquareFill = "speaker.square.fill"

        /// SF Symbols's name：speaker.wave.2.bubble.left
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerWave2BubbleLeft = "speaker.wave.2.bubble.left"

        /// SF Symbols's name：speaker.wave.2.bubble.left.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerWave2BubbleLeftFill = "speaker.wave.2.bubble.left.fill"

        /// SF Symbols's name：speaker.wave.2.bubble.left.fill.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerWave2BubbleLeftFillRtl = "speaker.wave.2.bubble.left.fill.rtl"

        /// SF Symbols's name：speaker.wave.2.bubble.left.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case speakerWave2BubbleLeftRtl = "speaker.wave.2.bubble.left.rtl"

        /// SF Symbols's name：spigot
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case spigot = "spigot"

        /// SF Symbols's name：spigot.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case spigotFill = "spigot.fill"

        /// SF Symbols's name：sportscourt.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sportscourtCircle = "sportscourt.circle"

        /// SF Symbols's name：sportscourt.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sportscourtCircleFill = "sportscourt.circle.fill"

        /// SF Symbols's name：sprinkler
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sprinkler = "sprinkler"

        /// SF Symbols's name：sprinkler.and.droplets
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sprinklerAndDroplets = "sprinkler.and.droplets"

        /// SF Symbols's name：sprinkler.and.droplets.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sprinklerAndDropletsFill = "sprinkler.and.droplets.fill"

        /// SF Symbols's name：sprinkler.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sprinklerFill = "sprinkler.fill"

        /// SF Symbols's name：square.2.layers.3d
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square2Layers3d = "square.2.layers.3d"

        /// SF Symbols's name：square.2.layers.3d.bottom.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square2Layers3dBottomFilled = "square.2.layers.3d.bottom.filled"

        /// SF Symbols's name：square.2.layers.3d.top.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square2Layers3dTopFilled = "square.2.layers.3d.top.filled"

        /// SF Symbols's name：square.3.layers.3d
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3d = "square.3.layers.3d"

        /// SF Symbols's name：square.3.layers.3d.bottom.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3dBottomFilled = "square.3.layers.3d.bottom.filled"

        /// SF Symbols's name：square.3.layers.3d.down.backward.slash.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3dDownBackwardSlashRtl = "square.3.layers.3d.down.backward.slash.rtl"

        /// SF Symbols's name：square.3.layers.3d.down.forward.slash.rtl
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3dDownForwardSlashRtl = "square.3.layers.3d.down.forward.slash.rtl"

        /// SF Symbols's name：square.3.layers.3d.middle.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3dMiddleFilled = "square.3.layers.3d.middle.filled"

        /// SF Symbols's name：square.3.layers.3d.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3dSlash = "square.3.layers.3d.slash"

        /// SF Symbols's name：square.3.layers.3d.top.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case square3Layers3dTopFilled = "square.3.layers.3d.top.filled"

        /// SF Symbols's name：square.and.pencil.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareAndPencilCircle = "square.and.pencil.circle"

        /// SF Symbols's name：square.and.pencil.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareAndPencilCircleFill = "square.and.pencil.circle.fill"

        /// SF Symbols's name：square.bottomthird.inset.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareBottomthirdInsetFilled = "square.bottomthird.inset.filled"

        /// SF Symbols's name：square.dotted
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareDotted = "square.dotted"

        /// SF Symbols's name：square.leadingthird.inset.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareLeadingthirdInsetFilled = "square.leadingthird.inset.filled"

        /// SF Symbols's name：square.leftthird.inset.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareLeftthirdInsetFilled = "square.leftthird.inset.filled"

        /// SF Symbols's name：square.on.square.badge.person.crop
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareOnSquareBadgePersonCrop = "square.on.square.badge.person.crop"

        /// SF Symbols's name：square.on.square.badge.person.crop.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareOnSquareBadgePersonCropFill = "square.on.square.badge.person.crop.fill"

        /// SF Symbols's name：square.on.square.intersection.dashed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareOnSquareIntersectionDashed = "square.on.square.intersection.dashed"

        /// SF Symbols's name：square.rightthird.inset.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareRightthirdInsetFilled = "square.rightthird.inset.filled"

        /// SF Symbols's name：square.topthird.inset.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareTopthirdInsetFilled = "square.topthird.inset.filled"

        /// SF Symbols's name：square.trailingthird.inset.filled
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareTrailingthirdInsetFilled = "square.trailingthird.inset.filled"

        /// SF Symbols's name：squares.leading.rectangle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squaresLeadingRectangle = "squares.leading.rectangle"

        /// SF Symbols's name：squareshape.dotted.split.2x2
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case squareshapeDottedSplit2x2 = "squareshape.dotted.split.2x2"

        /// SF Symbols's name：stairs
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case stairs = "stairs"

        /// SF Symbols's name：star.square.on.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case starSquareOnSquare = "star.square.on.square"

        /// SF Symbols's name：star.square.on.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case starSquareOnSquareFill = "star.square.on.square.fill"

        /// SF Symbols's name：sterlingsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sterlingsign = "sterlingsign"

        /// SF Symbols's name：stove
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case stove = "stove"

        /// SF Symbols's name：stove.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case stoveFill = "stove.fill"

        /// SF Symbols's name：sun.and.horizon.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunAndHorizonCircle = "sun.and.horizon.circle"

        /// SF Symbols's name：sun.and.horizon.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunAndHorizonCircleFill = "sun.and.horizon.circle.fill"

        /// SF Symbols's name：sun.dust.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunDustCircle = "sun.dust.circle"

        /// SF Symbols's name：sun.dust.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunDustCircleFill = "sun.dust.circle.fill"

        /// SF Symbols's name：sun.haze.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunHazeCircle = "sun.haze.circle"

        /// SF Symbols's name：sun.haze.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunHazeCircleFill = "sun.haze.circle.fill"

        /// SF Symbols's name：sun.max.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunMaxTrianglebadgeExclamationmark = "sun.max.trianglebadge.exclamationmark"

        /// SF Symbols's name：sun.max.trianglebadge.exclamationmark.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunMaxTrianglebadgeExclamationmarkFill = "sun.max.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：sunrise.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunriseCircle = "sunrise.circle"

        /// SF Symbols's name：sunrise.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunriseCircleFill = "sunrise.circle.fill"

        /// SF Symbols's name：sunset.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunsetCircle = "sunset.circle"

        /// SF Symbols's name：sunset.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case sunsetCircleFill = "sunset.circle.fill"

        /// SF Symbols's name：swatchpalette
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case swatchpalette = "swatchpalette"

        /// SF Symbols's name：swatchpalette.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case swatchpaletteFill = "swatchpalette.fill"

        /// SF Symbols's name：switch.programmable
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case switchProgrammable = "switch.programmable"

        /// SF Symbols's name：switch.programmable.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case switchProgrammableFill = "switch.programmable.fill"

        /// SF Symbols's name：switch.programmable.square
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case switchProgrammableSquare = "switch.programmable.square"

        /// SF Symbols's name：switch.programmable.square.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case switchProgrammableSquareFill = "switch.programmable.square.fill"

        /// SF Symbols's name：syringe
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case syringe = "syringe"

        /// SF Symbols's name：syringe.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case syringeFill = "syringe.fill"

        /// SF Symbols's name：table.furniture
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tableFurniture = "table.furniture"

        /// SF Symbols's name：table.furniture.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tableFurnitureFill = "table.furniture.fill"

        /// SF Symbols's name：teddybear
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case teddybear = "teddybear"

        /// SF Symbols's name：teddybear.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case teddybearFill = "teddybear.fill"

        /// SF Symbols's name：tengesign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tengesign = "tengesign"

        /// SF Symbols's name：tennis.racket
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisRacket = "tennis.racket"

        /// SF Symbols's name：tennis.racket.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisRacketCircle = "tennis.racket.circle"

        /// SF Symbols's name：tennis.racket.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisRacketCircleFill = "tennis.racket.circle.fill"

        /// SF Symbols's name：tennisball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisball = "tennisball"

        /// SF Symbols's name：tennisball.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisballCircle = "tennisball.circle"

        /// SF Symbols's name：tennisball.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisballCircleFill = "tennisball.circle.fill"

        /// SF Symbols's name：tennisball.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tennisballFill = "tennisball.fill"

        /// SF Symbols's name：tent
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tent = "tent"

        /// SF Symbols's name：tent.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tentFill = "tent.fill"

        /// SF Symbols's name：text.line.first.and.arrowtriangle.forward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case textLineFirstAndArrowtriangleForward = "text.line.first.and.arrowtriangle.forward"

        /// SF Symbols's name：text.line.last.and.arrowtriangle.forward
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case textLineLastAndArrowtriangleForward = "text.line.last.and.arrowtriangle.forward"

        /// SF Symbols's name：text.word.spacing
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case textWordSpacing = "text.word.spacing"

        /// SF Symbols's name：textformat.12
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case textformat12 = "textformat.12"

        /// SF Symbols's name：textformat.12.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case textformat12Ar = "textformat.12.ar"

        /// SF Symbols's name：textformat.12.hi
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case textformat12Hi = "textformat.12.hi"

        /// SF Symbols's name：theatermask.and.paintbrush
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case theatermaskAndPaintbrush = "theatermask.and.paintbrush"

        /// SF Symbols's name：theatermask.and.paintbrush.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case theatermaskAndPaintbrushFill = "theatermask.and.paintbrush.fill"

        /// SF Symbols's name：thermometer.brakesignal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerBrakesignal = "thermometer.brakesignal"

        /// SF Symbols's name：thermometer.high
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerHigh = "thermometer.high"

        /// SF Symbols's name：thermometer.low
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerLow = "thermometer.low"

        /// SF Symbols's name：thermometer.medium
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerMedium = "thermometer.medium"

        /// SF Symbols's name：thermometer.medium.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerMediumSlash = "thermometer.medium.slash"

        /// SF Symbols's name：thermometer.snowflake.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerSnowflakeCircle = "thermometer.snowflake.circle"

        /// SF Symbols's name：thermometer.snowflake.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerSnowflakeCircleFill = "thermometer.snowflake.circle.fill"

        /// SF Symbols's name：thermometer.sun.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerSunCircle = "thermometer.sun.circle"

        /// SF Symbols's name：thermometer.sun.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case thermometerSunCircleFill = "thermometer.sun.circle.fill"

        /// SF Symbols's name：timer.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case timerCircle = "timer.circle"

        /// SF Symbols's name：timer.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case timerCircleFill = "timer.circle.fill"

        /// SF Symbols's name：toilet
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case toilet = "toilet"

        /// SF Symbols's name：toilet.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case toiletFill = "toilet.fill"

        /// SF Symbols's name：tornado.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tornadoCircle = "tornado.circle"

        /// SF Symbols's name：tornado.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tornadoCircleFill = "tornado.circle.fill"

        /// SF Symbols's name：trophy
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case trophy = "trophy"

        /// SF Symbols's name：trophy.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case trophyCircle = "trophy.circle"

        /// SF Symbols's name：trophy.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case trophyCircleFill = "trophy.circle.fill"

        /// SF Symbols's name：trophy.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case trophyFill = "trophy.fill"

        /// SF Symbols's name：tropicalstorm.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tropicalstormCircle = "tropicalstorm.circle"

        /// SF Symbols's name：tropicalstorm.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tropicalstormCircleFill = "tropicalstorm.circle.fill"

        /// SF Symbols's name：tugriksign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tugriksign = "tugriksign"

        /// SF Symbols's name：turkishlirasign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case turkishlirasign = "turkishlirasign"

        /// SF Symbols's name：tv.and.mediabox.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case tvAndMediaboxFill = "tv.and.mediabox.fill"

        /// SF Symbols's name：umbrella.percent
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case umbrellaPercent = "umbrella.percent"

        /// SF Symbols's name：umbrella.percent.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case umbrellaPercentAr = "umbrella.percent.ar"

        /// SF Symbols's name：umbrella.percent.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case umbrellaPercentFill = "umbrella.percent.fill"

        /// SF Symbols's name：umbrella.percent.fill.ar
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case umbrellaPercentFillAr = "umbrella.percent.fill.ar"

        /// SF Symbols's name：vial.viewfinder
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case vialViewfinder = "vial.viewfinder"

        /// SF Symbols's name：video.doorbell
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case videoDoorbell = "video.doorbell"

        /// SF Symbols's name：video.doorbell.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case videoDoorbellFill = "video.doorbell.fill"

        /// SF Symbols's name：videoprojector
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case videoprojector = "videoprojector"

        /// SF Symbols's name：videoprojector.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case videoprojectorFill = "videoprojector.fill"

        /// SF Symbols's name：volleyball
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case volleyball = "volleyball"

        /// SF Symbols's name：volleyball.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case volleyballCircle = "volleyball.circle"

        /// SF Symbols's name：volleyball.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case volleyballCircleFill = "volleyball.circle.fill"

        /// SF Symbols's name：volleyball.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case volleyballFill = "volleyball.fill"

        /// SF Symbols's name：washer
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case washer = "washer"

        /// SF Symbols's name：washer.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case washerFill = "washer.fill"

        /// SF Symbols's name：water.waves
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case waterWaves = "water.waves"

        /// SF Symbols's name：water.waves.and.arrow.down
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case waterWavesAndArrowDown = "water.waves.and.arrow.down"

        /// SF Symbols's name：water.waves.and.arrow.down.trianglebadge.exclamationmark
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case waterWavesAndArrowDownTrianglebadgeExclamationmark = "water.waves.and.arrow.down.trianglebadge.exclamationmark"

        /// SF Symbols's name：water.waves.and.arrow.up
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case waterWavesAndArrowUp = "water.waves.and.arrow.up"

        /// SF Symbols's name：water.waves.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case waterWavesSlash = "water.waves.slash"

        /// SF Symbols's name：waveform.slash
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case waveformSlash = "waveform.slash"

        /// SF Symbols's name：web.camera
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case webCamera = "web.camera"

        /// SF Symbols's name：web.camera.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case webCameraFill = "web.camera.fill"

        /// SF Symbols's name：wifi.router
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wifiRouter = "wifi.router"

        /// SF Symbols's name：wifi.router.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wifiRouterFill = "wifi.router.fill"

        /// SF Symbols's name：wind.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windCircle = "wind.circle"

        /// SF Symbols's name：wind.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windCircleFill = "wind.circle.fill"

        /// SF Symbols's name：wind.snow.circle
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windSnowCircle = "wind.snow.circle"

        /// SF Symbols's name：wind.snow.circle.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windSnowCircleFill = "wind.snow.circle.fill"

        /// SF Symbols's name：window.awning
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowAwning = "window.awning"

        /// SF Symbols's name：window.awning.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowAwningClosed = "window.awning.closed"

        /// SF Symbols's name：window.casement
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowCasement = "window.casement"

        /// SF Symbols's name：window.casement.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowCasementClosed = "window.casement.closed"

        /// SF Symbols's name：window.ceiling
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowCeiling = "window.ceiling"

        /// SF Symbols's name：window.ceiling.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowCeilingClosed = "window.ceiling.closed"

        /// SF Symbols's name：window.horizontal
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowHorizontal = "window.horizontal"

        /// SF Symbols's name：window.horizontal.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowHorizontalClosed = "window.horizontal.closed"

        /// SF Symbols's name：window.shade.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowShadeClosed = "window.shade.closed"

        /// SF Symbols's name：window.shade.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowShadeOpen = "window.shade.open"

        /// SF Symbols's name：window.vertical.closed
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowVerticalClosed = "window.vertical.closed"

        /// SF Symbols's name：window.vertical.open
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windowVerticalOpen = "window.vertical.open"

        /// SF Symbols's name：windshield.front.and.fluid
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windshieldFrontAndFluid = "windshield.front.and.fluid"

        /// SF Symbols's name：windshield.front.and.wiper
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windshieldFrontAndWiper = "windshield.front.and.wiper"

        /// SF Symbols's name：windshield.front.and.wiper.and.drop
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windshieldFrontAndWiperAndDrop = "windshield.front.and.wiper.and.drop"

        /// SF Symbols's name：windshield.rear.and.fluid
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windshieldRearAndFluid = "windshield.rear.and.fluid"

        /// SF Symbols's name：windshield.rear.and.wiper
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case windshieldRearAndWiper = "windshield.rear.and.wiper"

        /// SF Symbols's name：wineglass
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wineglass = "wineglass"

        /// SF Symbols's name：wineglass.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wineglassFill = "wineglass.fill"

        /// SF Symbols's name：wonsign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wonsign = "wonsign"

        /// SF Symbols's name：wrench.adjustable
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wrenchAdjustable = "wrench.adjustable"

        /// SF Symbols's name：wrench.adjustable.fill
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case wrenchAdjustableFill = "wrench.adjustable.fill"

        /// SF Symbols's name：xbox.logo
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case xboxLogo = "xbox.logo"

        /// SF Symbols's name：yensign
        @available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *)
        case yensign = "yensign"

        /// SF Symbols's name：0.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _0CircleAr = "0.circle.ar"

        /// SF Symbols's name：0.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _0CircleFillAr = "0.circle.fill.ar"

        /// SF Symbols's name：0.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _0SquareAr = "0.square.ar"

        /// SF Symbols's name：0.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _0SquareFillAr = "0.square.fill.ar"

        /// SF Symbols's name：1.brakesignal
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _1Brakesignal = "1.brakesignal"

        /// SF Symbols's name：1.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _1CircleAr = "1.circle.ar"

        /// SF Symbols's name：1.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _1CircleFillAr = "1.circle.fill.ar"

        /// SF Symbols's name：1.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _1Lane = "1.lane"

        /// SF Symbols's name：1.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _1SquareAr = "1.square.ar"

        /// SF Symbols's name：1.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _1SquareFillAr = "1.square.fill.ar"

        /// SF Symbols's name：10.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _10Lane = "10.lane"

        /// SF Symbols's name：11.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _11Lane = "11.lane"

        /// SF Symbols's name：12.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _12Lane = "12.lane"

        /// SF Symbols's name：2.brakesignal
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _2Brakesignal = "2.brakesignal"

        /// SF Symbols's name：2.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _2CircleAr = "2.circle.ar"

        /// SF Symbols's name：2.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _2CircleFillAr = "2.circle.fill.ar"

        /// SF Symbols's name：2.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _2Lane = "2.lane"

        /// SF Symbols's name：2.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _2SquareAr = "2.square.ar"

        /// SF Symbols's name：2.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _2SquareFillAr = "2.square.fill.ar"

        /// SF Symbols's name：3.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _3CircleAr = "3.circle.ar"

        /// SF Symbols's name：3.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _3CircleFillAr = "3.circle.fill.ar"

        /// SF Symbols's name：3.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _3Lane = "3.lane"

        /// SF Symbols's name：3.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _3SquareAr = "3.square.ar"

        /// SF Symbols's name：3.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _3SquareFillAr = "3.square.fill.ar"

        /// SF Symbols's name：4.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _4CircleAr = "4.circle.ar"

        /// SF Symbols's name：4.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _4CircleFillAr = "4.circle.fill.ar"

        /// SF Symbols's name：4.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _4Lane = "4.lane"

        /// SF Symbols's name：4.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _4SquareAr = "4.square.ar"

        /// SF Symbols's name：4.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _4SquareFillAr = "4.square.fill.ar"

        /// SF Symbols's name：5.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _5CircleAr = "5.circle.ar"

        /// SF Symbols's name：5.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _5CircleFillAr = "5.circle.fill.ar"

        /// SF Symbols's name：5.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _5Lane = "5.lane"

        /// SF Symbols's name：5.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _5SquareAr = "5.square.ar"

        /// SF Symbols's name：5.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _5SquareFillAr = "5.square.fill.ar"

        /// SF Symbols's name：6.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _6CircleAr = "6.circle.ar"

        /// SF Symbols's name：6.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _6CircleFillAr = "6.circle.fill.ar"

        /// SF Symbols's name：6.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _6Lane = "6.lane"

        /// SF Symbols's name：6.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _6SquareAr = "6.square.ar"

        /// SF Symbols's name：6.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _6SquareFillAr = "6.square.fill.ar"

        /// SF Symbols's name：7.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _7CircleAr = "7.circle.ar"

        /// SF Symbols's name：7.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _7CircleFillAr = "7.circle.fill.ar"

        /// SF Symbols's name：7.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _7Lane = "7.lane"

        /// SF Symbols's name：7.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _7SquareAr = "7.square.ar"

        /// SF Symbols's name：7.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _7SquareFillAr = "7.square.fill.ar"

        /// SF Symbols's name：8.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _8CircleAr = "8.circle.ar"

        /// SF Symbols's name：8.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _8CircleFillAr = "8.circle.fill.ar"

        /// SF Symbols's name：8.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _8Lane = "8.lane"

        /// SF Symbols's name：8.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _8SquareAr = "8.square.ar"

        /// SF Symbols's name：8.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _8SquareFillAr = "8.square.fill.ar"

        /// SF Symbols's name：9.circle.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _9CircleAr = "9.circle.ar"

        /// SF Symbols's name：9.circle.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _9CircleFillAr = "9.circle.fill.ar"

        /// SF Symbols's name：9.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _9Lane = "9.lane"

        /// SF Symbols's name：9.square.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _9SquareAr = "9.square.ar"

        /// SF Symbols's name：9.square.fill.ar
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case _9SquareFillAr = "9.square.fill.ar"

        /// SF Symbols's name：abs
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case abs = "abs"

        /// SF Symbols's name：abs.brakesignal.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case absBrakesignalSlash = "abs.brakesignal.slash"

        /// SF Symbols's name：abs.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case absCircle = "abs.circle"

        /// SF Symbols's name：abs.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case absCircleFill = "abs.circle.fill"

        /// SF Symbols's name：auto.brakesignal
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autoBrakesignal = "auto.brakesignal"

        /// SF Symbols's name：auto.headlight.high.beam
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autoHeadlightHighBeam = "auto.headlight.high.beam"

        /// SF Symbols's name：auto.headlight.high.beam.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autoHeadlightHighBeamFill = "auto.headlight.high.beam.fill"

        /// SF Symbols's name：auto.headlight.low.beam
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autoHeadlightLowBeam = "auto.headlight.low.beam"

        /// SF Symbols's name：auto.headlight.low.beam.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autoHeadlightLowBeamFill = "auto.headlight.low.beam.fill"

        /// SF Symbols's name：autostartstop
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autostartstop = "autostartstop"

        /// SF Symbols's name：autostartstop.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autostartstopSlash = "autostartstop.slash"

        /// SF Symbols's name：autostartstop.trianglebadge.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case autostartstopTrianglebadgeExclamationmark = "autostartstop.trianglebadge.exclamationmark"

        /// SF Symbols's name：axel.2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case axel2 = "axel.2"

        /// SF Symbols's name：axel.2.front.and.rear.engaged
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case axel2FrontAndRearEngaged = "axel.2.front.and.rear.engaged"

        /// SF Symbols's name：axel.2.front.engaged
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case axel2FrontEngaged = "axel.2.front.engaged"

        /// SF Symbols's name：axel.2.rear.engaged
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case axel2RearEngaged = "axel.2.rear.engaged"

        /// SF Symbols's name：backpack.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case backpackCircle = "backpack.circle"

        /// SF Symbols's name：backpack.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case backpackCircleFill = "backpack.circle.fill"

        /// SF Symbols's name：batteryblock
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case batteryblock = "batteryblock"

        /// SF Symbols's name：batteryblock.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case batteryblockFill = "batteryblock.fill"

        /// SF Symbols's name：batteryblock.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case batteryblockSlash = "batteryblock.slash"

        /// SF Symbols's name：batteryblock.slash.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case batteryblockSlashFill = "batteryblock.slash.fill"

        /// SF Symbols's name：bolt.trianglebadge.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case boltTrianglebadgeExclamationmark = "bolt.trianglebadge.exclamationmark"

        /// SF Symbols's name：bolt.trianglebadge.exclamationmark.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case boltTrianglebadgeExclamationmarkFill = "bolt.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：car.front.waves.up
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carFrontWavesUp = "car.front.waves.up"

        /// SF Symbols's name：car.front.waves.up.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carFrontWavesUpFill = "car.front.waves.up.fill"

        /// SF Symbols's name：car.rear
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRear = "car.rear"

        /// SF Symbols's name：car.rear.and.tire.marks
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearAndTireMarks = "car.rear.and.tire.marks"

        /// SF Symbols's name：car.rear.and.tire.marks.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearAndTireMarksSlash = "car.rear.and.tire.marks.slash"

        /// SF Symbols's name：car.rear.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearFill = "car.rear.fill"

        /// SF Symbols's name：car.rear.road.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearRoadLane = "car.rear.road.lane"

        /// SF Symbols's name：car.rear.road.lane.dashed
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearRoadLaneDashed = "car.rear.road.lane.dashed"

        /// SF Symbols's name：car.rear.waves.up
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearWavesUp = "car.rear.waves.up"

        /// SF Symbols's name：car.rear.waves.up.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carRearWavesUpFill = "car.rear.waves.up.fill"

        /// SF Symbols's name：car.side
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSide = "car.side"

        /// SF Symbols's name：car.side.air.circulate
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideAirCirculate = "car.side.air.circulate"

        /// SF Symbols's name：car.side.air.circulate.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideAirCirculateFill = "car.side.air.circulate.fill"

        /// SF Symbols's name：car.side.air.fresh
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideAirFresh = "car.side.air.fresh"

        /// SF Symbols's name：car.side.air.fresh.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideAirFreshFill = "car.side.air.fresh.fill"

        /// SF Symbols's name：car.side.and.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideAndExclamationmark = "car.side.and.exclamationmark"

        /// SF Symbols's name：car.side.and.exclamationmark.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideAndExclamationmarkFill = "car.side.and.exclamationmark.fill"

        /// SF Symbols's name：car.side.arrowtriangle.down
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideArrowtriangleDown = "car.side.arrowtriangle.down"

        /// SF Symbols's name：car.side.arrowtriangle.down.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideArrowtriangleDownFill = "car.side.arrowtriangle.down.fill"

        /// SF Symbols's name：car.side.arrowtriangle.up
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideArrowtriangleUp = "car.side.arrowtriangle.up"

        /// SF Symbols's name：car.side.arrowtriangle.up.arrowtriangle.down
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideArrowtriangleUpArrowtriangleDown = "car.side.arrowtriangle.up.arrowtriangle.down"

        /// SF Symbols's name：car.side.arrowtriangle.up.arrowtriangle.down.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideArrowtriangleUpArrowtriangleDownFill = "car.side.arrowtriangle.up.arrowtriangle.down.fill"

        /// SF Symbols's name：car.side.arrowtriangle.up.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideArrowtriangleUpFill = "car.side.arrowtriangle.up.fill"

        /// SF Symbols's name：car.side.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideFill = "car.side.fill"

        /// SF Symbols's name：car.side.front.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideFrontOpen = "car.side.front.open"

        /// SF Symbols's name：car.side.front.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideFrontOpenFill = "car.side.front.open.fill"

        /// SF Symbols's name：car.side.rear.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideRearOpen = "car.side.rear.open"

        /// SF Symbols's name：car.side.rear.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carSideRearOpenFill = "car.side.rear.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightAndRearLeftAndRearRightOpen = "car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightAndRearLeftAndRearRightOpenFill = "car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.and.rear.left.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightAndRearLeftOpen = "car.top.door.front.left.and.front.right.and.rear.left.open"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.and.rear.left.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightAndRearLeftOpenFill = "car.top.door.front.left.and.front.right.and.rear.left.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightAndRearRightOpen = "car.top.door.front.left.and.front.right.and.rear.right.open"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightAndRearRightOpenFill = "car.top.door.front.left.and.front.right.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightOpen = "car.top.door.front.left.and.front.right.open"

        /// SF Symbols's name：car.top.door.front.left.and.front.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndFrontRightOpenFill = "car.top.door.front.left.and.front.right.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.rear.left.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndRearLeftAndRearRightOpen = "car.top.door.front.left.and.rear.left.and.rear.right.open"

        /// SF Symbols's name：car.top.door.front.left.and.rear.left.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndRearLeftAndRearRightOpenFill = "car.top.door.front.left.and.rear.left.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.rear.left.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndRearLeftOpen = "car.top.door.front.left.and.rear.left.open"

        /// SF Symbols's name：car.top.door.front.left.and.rear.left.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndRearLeftOpenFill = "car.top.door.front.left.and.rear.left.open.fill"

        /// SF Symbols's name：car.top.door.front.left.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndRearRightOpen = "car.top.door.front.left.and.rear.right.open"

        /// SF Symbols's name：car.top.door.front.left.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftAndRearRightOpenFill = "car.top.door.front.left.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.front.left.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftOpen = "car.top.door.front.left.open"

        /// SF Symbols's name：car.top.door.front.left.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontLeftOpenFill = "car.top.door.front.left.open.fill"

        /// SF Symbols's name：car.top.door.front.right.and.rear.left.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightAndRearLeftAndRearRightOpen = "car.top.door.front.right.and.rear.left.and.rear.right.open"

        /// SF Symbols's name：car.top.door.front.right.and.rear.left.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightAndRearLeftAndRearRightOpenFill = "car.top.door.front.right.and.rear.left.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.front.right.and.rear.left.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightAndRearLeftOpen = "car.top.door.front.right.and.rear.left.open"

        /// SF Symbols's name：car.top.door.front.right.and.rear.left.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightAndRearLeftOpenFill = "car.top.door.front.right.and.rear.left.open.fill"

        /// SF Symbols's name：car.top.door.front.right.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightAndRearRightOpen = "car.top.door.front.right.and.rear.right.open"

        /// SF Symbols's name：car.top.door.front.right.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightAndRearRightOpenFill = "car.top.door.front.right.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.front.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightOpen = "car.top.door.front.right.open"

        /// SF Symbols's name：car.top.door.front.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorFrontRightOpenFill = "car.top.door.front.right.open.fill"

        /// SF Symbols's name：car.top.door.rear.left.and.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorRearLeftAndRearRightOpen = "car.top.door.rear.left.and.rear.right.open"

        /// SF Symbols's name：car.top.door.rear.left.and.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorRearLeftAndRearRightOpenFill = "car.top.door.rear.left.and.rear.right.open.fill"

        /// SF Symbols's name：car.top.door.rear.left.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorRearLeftOpen = "car.top.door.rear.left.open"

        /// SF Symbols's name：car.top.door.rear.left.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorRearLeftOpenFill = "car.top.door.rear.left.open.fill"

        /// SF Symbols's name：car.top.door.rear.right.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorRearRightOpen = "car.top.door.rear.right.open"

        /// SF Symbols's name：car.top.door.rear.right.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopDoorRearRightOpenFill = "car.top.door.rear.right.open.fill"

        /// SF Symbols's name：car.top.lane.dashed.arrowtriangle.inward
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedArrowtriangleInward = "car.top.lane.dashed.arrowtriangle.inward"

        /// SF Symbols's name：car.top.lane.dashed.arrowtriangle.inward.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedArrowtriangleInwardFill = "car.top.lane.dashed.arrowtriangle.inward.fill"

        /// SF Symbols's name：car.top.lane.dashed.badge.steeringwheel
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedBadgeSteeringwheel = "car.top.lane.dashed.badge.steeringwheel"

        /// SF Symbols's name：car.top.lane.dashed.badge.steeringwheel.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedBadgeSteeringwheelFill = "car.top.lane.dashed.badge.steeringwheel.fill"

        /// SF Symbols's name：car.top.lane.dashed.departure.left
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedDepartureLeft = "car.top.lane.dashed.departure.left"

        /// SF Symbols's name：car.top.lane.dashed.departure.left.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedDepartureLeftFill = "car.top.lane.dashed.departure.left.fill"

        /// SF Symbols's name：car.top.lane.dashed.departure.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedDepartureRight = "car.top.lane.dashed.departure.right"

        /// SF Symbols's name：car.top.lane.dashed.departure.right.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopLaneDashedDepartureRightFill = "car.top.lane.dashed.departure.right.fill"

        /// SF Symbols's name：car.top.radiowaves.front
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesFront = "car.top.radiowaves.front"

        /// SF Symbols's name：car.top.radiowaves.front.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesFrontFill = "car.top.radiowaves.front.fill"

        /// SF Symbols's name：car.top.radiowaves.rear
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRear = "car.top.radiowaves.rear"

        /// SF Symbols's name：car.top.radiowaves.rear.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearFill = "car.top.radiowaves.rear.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.left
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearLeft = "car.top.radiowaves.rear.left"

        /// SF Symbols's name：car.top.radiowaves.rear.left.and.rear.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearLeftAndRearRight = "car.top.radiowaves.rear.left.and.rear.right"

        /// SF Symbols's name：car.top.radiowaves.rear.left.and.rear.right.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearLeftAndRearRightFill = "car.top.radiowaves.rear.left.and.rear.right.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.left.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearLeftFill = "car.top.radiowaves.rear.left.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearRight = "car.top.radiowaves.rear.right"

        /// SF Symbols's name：car.top.radiowaves.rear.right.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case carTopRadiowavesRearRightFill = "car.top.radiowaves.rear.right.fill"

        /// SF Symbols's name：chart.dots.scatter
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case chartDotsScatter = "chart.dots.scatter"

        /// SF Symbols's name：cross.case.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case crossCaseCircle = "cross.case.circle"

        /// SF Symbols's name：cross.case.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case crossCaseCircleFill = "cross.case.circle.fill"

        /// SF Symbols's name：ellipsis.viewfinder
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ellipsisViewfinder = "ellipsis.viewfinder"

        /// SF Symbols's name：engine.combustion
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case engineCombustion = "engine.combustion"

        /// SF Symbols's name：engine.combustion.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case engineCombustionFill = "engine.combustion.fill"

        /// SF Symbols's name：exclamationmark.transmission
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case exclamationmarkTransmission = "exclamationmark.transmission"

        /// SF Symbols's name：figure.run.square.stack
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureRunSquareStack = "figure.run.square.stack"

        /// SF Symbols's name：figure.run.square.stack.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureRunSquareStackFill = "figure.run.square.stack.fill"

        /// SF Symbols's name：figure.seated.seatbelt
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSeatbelt = "figure.seated.seatbelt"

        /// SF Symbols's name：figure.seated.seatbelt.and.airbag.off
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSeatbeltAndAirbagOff = "figure.seated.seatbelt.and.airbag.off"

        /// SF Symbols's name：figure.seated.seatbelt.and.airbag.on
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSeatbeltAndAirbagOn = "figure.seated.seatbelt.and.airbag.on"

        /// SF Symbols's name：figure.seated.side.air.lower
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirLower = "figure.seated.side.air.lower"

        /// SF Symbols's name：figure.seated.side.air.upper
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirUpper = "figure.seated.side.air.upper"

        /// SF Symbols's name：figure.seated.side.air.upper.and.lower
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirUpperAndLower = "figure.seated.side.air.upper.and.lower"

        /// SF Symbols's name：figure.seated.side.air.windshield
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirWindshield = "figure.seated.side.air.windshield"

        /// SF Symbols's name：figure.seated.side.airbag.off
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirbagOff = "figure.seated.side.airbag.off"

        /// SF Symbols's name：figure.seated.side.airbag.off.2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirbagOff2 = "figure.seated.side.airbag.off.2"

        /// SF Symbols's name：figure.seated.side.airbag.on
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirbagOn = "figure.seated.side.airbag.on"

        /// SF Symbols's name：figure.seated.side.airbag.on.2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideAirbagOn2 = "figure.seated.side.airbag.on.2"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case figureSeatedSideWindshieldFrontAndHeatWaves = "figure.seated.side.windshield.front.and.heat.waves"

        /// SF Symbols's name：fish.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case fishCircle = "fish.circle"

        /// SF Symbols's name：fish.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case fishCircleFill = "fish.circle.fill"

        /// SF Symbols's name：flag.checkered.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case flagCheckeredCircle = "flag.checkered.circle"

        /// SF Symbols's name：flag.checkered.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case flagCheckeredCircleFill = "flag.checkered.circle.fill"

        /// SF Symbols's name：fluid.transmission
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case fluidTransmission = "fluid.transmission"

        /// SF Symbols's name：glowplug
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case glowplug = "glowplug"

        /// SF Symbols's name：hand.raised.app
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case handRaisedApp = "hand.raised.app"

        /// SF Symbols's name：hand.raised.app.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case handRaisedAppFill = "hand.raised.app.fill"

        /// SF Symbols's name：hand.raised.brakesignal
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case handRaisedBrakesignal = "hand.raised.brakesignal"

        /// SF Symbols's name：hand.raised.brakesignal.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case handRaisedBrakesignalSlash = "hand.raised.brakesignal.slash"

        /// SF Symbols's name：handbag
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case handbag = "handbag"

        /// SF Symbols's name：handbag.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case handbagFill = "handbag.fill"

        /// SF Symbols's name：hazardsign
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case hazardsign = "hazardsign"

        /// SF Symbols's name：hazardsign.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case hazardsignFill = "hazardsign.fill"

        /// SF Symbols's name：headlight.daytime
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case headlightDaytime = "headlight.daytime"

        /// SF Symbols's name：headlight.daytime.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case headlightDaytimeFill = "headlight.daytime.fill"

        /// SF Symbols's name：headlight.fog
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case headlightFog = "headlight.fog"

        /// SF Symbols's name：headlight.fog.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case headlightFogFill = "headlight.fog.fill"

        /// SF Symbols's name：heat.element.windshield
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case heatElementWindshield = "heat.element.windshield"

        /// SF Symbols's name：house.and.flag
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseAndFlag = "house.and.flag"

        /// SF Symbols's name：house.and.flag.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseAndFlagCircle = "house.and.flag.circle"

        /// SF Symbols's name：house.and.flag.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseAndFlagCircleFill = "house.and.flag.circle.fill"

        /// SF Symbols's name：house.and.flag.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseAndFlagFill = "house.and.flag.fill"

        /// SF Symbols's name：house.lodge
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseLodge = "house.lodge"

        /// SF Symbols's name：house.lodge.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseLodgeCircle = "house.lodge.circle"

        /// SF Symbols's name：house.lodge.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseLodgeCircleFill = "house.lodge.circle.fill"

        /// SF Symbols's name：house.lodge.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case houseLodgeFill = "house.lodge.fill"

        /// SF Symbols's name：info.windshield
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case infoWindshield = "info.windshield"

        /// SF Symbols's name：ipad.and.iphone.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadAndIphoneSlash = "ipad.and.iphone.slash"

        /// SF Symbols's name：ipad.gen1
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen1 = "ipad.gen1"

        /// SF Symbols's name：ipad.gen1.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen1BadgePlay = "ipad.gen1.badge.play"

        /// SF Symbols's name：ipad.gen1.landscape
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen1Landscape = "ipad.gen1.landscape"

        /// SF Symbols's name：ipad.gen1.landscape.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen1LandscapeBadgePlay = "ipad.gen1.landscape.badge.play"

        /// SF Symbols's name：ipad.gen2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen2 = "ipad.gen2"

        /// SF Symbols's name：ipad.gen2.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen2BadgePlay = "ipad.gen2.badge.play"

        /// SF Symbols's name：ipad.gen2.landscape
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen2Landscape = "ipad.gen2.landscape"

        /// SF Symbols's name：ipad.gen2.landscape.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case ipadGen2LandscapeBadgePlay = "ipad.gen2.landscape.badge.play"

        /// SF Symbols's name：iphone.gen1
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1 = "iphone.gen1"

        /// SF Symbols's name：iphone.gen1.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1BadgePlay = "iphone.gen1.badge.play"

        /// SF Symbols's name：iphone.gen1.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1Circle = "iphone.gen1.circle"

        /// SF Symbols's name：iphone.gen1.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1CircleFill = "iphone.gen1.circle.fill"

        /// SF Symbols's name：iphone.gen1.landscape
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1Landscape = "iphone.gen1.landscape"

        /// SF Symbols's name：iphone.gen1.radiowaves.left.and.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1RadiowavesLeftAndRight = "iphone.gen1.radiowaves.left.and.right"

        /// SF Symbols's name：iphone.gen1.radiowaves.left.and.right.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1RadiowavesLeftAndRightCircle = "iphone.gen1.radiowaves.left.and.right.circle"

        /// SF Symbols's name：iphone.gen1.radiowaves.left.and.right.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1RadiowavesLeftAndRightCircleFill = "iphone.gen1.radiowaves.left.and.right.circle.fill"

        /// SF Symbols's name：iphone.gen1.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1Slash = "iphone.gen1.slash"

        /// SF Symbols's name：iphone.gen1.slash.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1SlashCircle = "iphone.gen1.slash.circle"

        /// SF Symbols's name：iphone.gen1.slash.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen1SlashCircleFill = "iphone.gen1.slash.circle.fill"

        /// SF Symbols's name：iphone.gen2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2 = "iphone.gen2"

        /// SF Symbols's name：iphone.gen2.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2BadgePlay = "iphone.gen2.badge.play"

        /// SF Symbols's name：iphone.gen2.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2Circle = "iphone.gen2.circle"

        /// SF Symbols's name：iphone.gen2.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2CircleFill = "iphone.gen2.circle.fill"

        /// SF Symbols's name：iphone.gen2.landscape
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2Landscape = "iphone.gen2.landscape"

        /// SF Symbols's name：iphone.gen2.radiowaves.left.and.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2RadiowavesLeftAndRight = "iphone.gen2.radiowaves.left.and.right"

        /// SF Symbols's name：iphone.gen2.radiowaves.left.and.right.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2RadiowavesLeftAndRightCircle = "iphone.gen2.radiowaves.left.and.right.circle"

        /// SF Symbols's name：iphone.gen2.radiowaves.left.and.right.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2RadiowavesLeftAndRightCircleFill = "iphone.gen2.radiowaves.left.and.right.circle.fill"

        /// SF Symbols's name：iphone.gen2.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2Slash = "iphone.gen2.slash"

        /// SF Symbols's name：iphone.gen2.slash.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2SlashCircle = "iphone.gen2.slash.circle"

        /// SF Symbols's name：iphone.gen2.slash.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen2SlashCircleFill = "iphone.gen2.slash.circle.fill"

        /// SF Symbols's name：iphone.gen3
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3 = "iphone.gen3"

        /// SF Symbols's name：iphone.gen3.badge.play
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3BadgePlay = "iphone.gen3.badge.play"

        /// SF Symbols's name：iphone.gen3.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3Circle = "iphone.gen3.circle"

        /// SF Symbols's name：iphone.gen3.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3CircleFill = "iphone.gen3.circle.fill"

        /// SF Symbols's name：iphone.gen3.landscape
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3Landscape = "iphone.gen3.landscape"

        /// SF Symbols's name：iphone.gen3.radiowaves.left.and.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3RadiowavesLeftAndRight = "iphone.gen3.radiowaves.left.and.right"

        /// SF Symbols's name：iphone.gen3.radiowaves.left.and.right.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3RadiowavesLeftAndRightCircle = "iphone.gen3.radiowaves.left.and.right.circle"

        /// SF Symbols's name：iphone.gen3.radiowaves.left.and.right.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3RadiowavesLeftAndRightCircleFill = "iphone.gen3.radiowaves.left.and.right.circle.fill"

        /// SF Symbols's name：iphone.gen3.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3Slash = "iphone.gen3.slash"

        /// SF Symbols's name：iphone.gen3.slash.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3SlashCircle = "iphone.gen3.slash.circle"

        /// SF Symbols's name：iphone.gen3.slash.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case iphoneGen3SlashCircleFill = "iphone.gen3.slash.circle.fill"

        /// SF Symbols's name：key.horizontal
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case keyHorizontal = "key.horizontal"

        /// SF Symbols's name：key.horizontal.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case keyHorizontalFill = "key.horizontal.fill"

        /// SF Symbols's name：key.radiowaves.forward
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case keyRadiowavesForward = "key.radiowaves.forward"

        /// SF Symbols's name：key.radiowaves.forward.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case keyRadiowavesForwardFill = "key.radiowaves.forward.fill"

        /// SF Symbols's name：kph
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case kph = "kph"

        /// SF Symbols's name：kph.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case kphCircle = "kph.circle"

        /// SF Symbols's name：kph.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case kphCircleFill = "kph.circle.fill"

        /// SF Symbols's name：lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case lane = "lane"

        /// SF Symbols's name：laptopcomputer.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case laptopcomputerSlash = "laptopcomputer.slash"

        /// SF Symbols's name：light.overhead.left
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case lightOverheadLeft = "light.overhead.left"

        /// SF Symbols's name：light.overhead.left.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case lightOverheadLeftFill = "light.overhead.left.fill"

        /// SF Symbols's name：light.overhead.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case lightOverheadRight = "light.overhead.right"

        /// SF Symbols's name：light.overhead.right.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case lightOverheadRightFill = "light.overhead.right.fill"

        /// SF Symbols's name：lock.open.rotation
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case lockOpenRotation = "lock.open.rotation"

        /// SF Symbols's name：macbook.and.ipad
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case macbookAndIpad = "macbook.and.ipad"

        /// SF Symbols's name：macbook.and.iphone
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case macbookAndIphone = "macbook.and.iphone"

        /// SF Symbols's name：minus.plus.and.fluid.batteryblock
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusAndFluidBatteryblock = "minus.plus.and.fluid.batteryblock"

        /// SF Symbols's name：minus.plus.batteryblock.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockExclamationmark = "minus.plus.batteryblock.exclamationmark"

        /// SF Symbols's name：minus.plus.batteryblock.exclamationmark.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockExclamationmarkFill = "minus.plus.batteryblock.exclamationmark.fill"

        /// SF Symbols's name：minus.plus.batteryblock.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockSlash = "minus.plus.batteryblock.slash"

        /// SF Symbols's name：minus.plus.batteryblock.slash.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockSlashFill = "minus.plus.batteryblock.slash.fill"

        /// SF Symbols's name：minus.plus.batteryblock.stack
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockStack = "minus.plus.batteryblock.stack"

        /// SF Symbols's name：minus.plus.batteryblock.stack.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockStackExclamationmark = "minus.plus.batteryblock.stack.exclamationmark"

        /// SF Symbols's name：minus.plus.batteryblock.stack.exclamationmark.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockStackExclamationmarkFill = "minus.plus.batteryblock.stack.exclamationmark.fill"

        /// SF Symbols's name：minus.plus.batteryblock.stack.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case minusPlusBatteryblockStackFill = "minus.plus.batteryblock.stack.fill"

        /// SF Symbols's name：mirror.side.left.and.arrow.turn.down.right
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mirrorSideLeftAndArrowTurnDownRight = "mirror.side.left.and.arrow.turn.down.right"

        /// SF Symbols's name：mirror.side.left.and.heat.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mirrorSideLeftAndHeatWaves = "mirror.side.left.and.heat.waves"

        /// SF Symbols's name：mirror.side.right.and.arrow.turn.down.left
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mirrorSideRightAndArrowTurnDownLeft = "mirror.side.right.and.arrow.turn.down.left"

        /// SF Symbols's name：mirror.side.right.and.heat.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mirrorSideRightAndHeatWaves = "mirror.side.right.and.heat.waves"

        /// SF Symbols's name：mountain.2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mountain2 = "mountain.2"

        /// SF Symbols's name：mountain.2.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mountain2Circle = "mountain.2.circle"

        /// SF Symbols's name：mountain.2.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mountain2CircleFill = "mountain.2.circle.fill"

        /// SF Symbols's name：mountain.2.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mountain2Fill = "mountain.2.fill"

        /// SF Symbols's name：mph
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mph = "mph"

        /// SF Symbols's name：mph.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mphCircle = "mph.circle"

        /// SF Symbols's name：mph.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mphCircleFill = "mph.circle.fill"

        /// SF Symbols's name：mug
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mug = "mug"

        /// SF Symbols's name：mug.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case mugFill = "mug.fill"

        /// SF Symbols's name：oilcan
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case oilcan = "oilcan"

        /// SF Symbols's name：oilcan.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case oilcanFill = "oilcan.fill"

        /// SF Symbols's name：person.crop.circle.dashed
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case personCropCircleDashed = "person.crop.circle.dashed"

        /// SF Symbols's name：play.square.stack
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case playSquareStack = "play.square.stack"

        /// SF Symbols's name：play.square.stack.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case playSquareStackFill = "play.square.stack.fill"

        /// SF Symbols's name：questionmark.key.filled
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case questionmarkKeyFilled = "questionmark.key.filled"

        /// SF Symbols's name：retarder.brakesignal
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case retarderBrakesignal = "retarder.brakesignal"

        /// SF Symbols's name：road.lane.arrowtriangle.2.inward
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case roadLaneArrowtriangle2Inward = "road.lane.arrowtriangle.2.inward"

        /// SF Symbols's name：sailboat.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case sailboatCircle = "sailboat.circle"

        /// SF Symbols's name：sailboat.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case sailboatCircleFill = "sailboat.circle.fill"

        /// SF Symbols's name：signpost.and.arrowtriangle.up
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostAndArrowtriangleUp = "signpost.and.arrowtriangle.up"

        /// SF Symbols's name：signpost.and.arrowtriangle.up.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostAndArrowtriangleUpCircle = "signpost.and.arrowtriangle.up.circle"

        /// SF Symbols's name：signpost.and.arrowtriangle.up.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostAndArrowtriangleUpCircleFill = "signpost.and.arrowtriangle.up.circle.fill"

        /// SF Symbols's name：signpost.and.arrowtriangle.up.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostAndArrowtriangleUpFill = "signpost.and.arrowtriangle.up.fill"

        /// SF Symbols's name：signpost.left.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostLeftCircle = "signpost.left.circle"

        /// SF Symbols's name：signpost.left.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostLeftCircleFill = "signpost.left.circle.fill"

        /// SF Symbols's name：signpost.right.and.left
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostRightAndLeft = "signpost.right.and.left"

        /// SF Symbols's name：signpost.right.and.left.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostRightAndLeftCircle = "signpost.right.and.left.circle"

        /// SF Symbols's name：signpost.right.and.left.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostRightAndLeftCircleFill = "signpost.right.and.left.circle.fill"

        /// SF Symbols's name：signpost.right.and.left.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostRightAndLeftFill = "signpost.right.and.left.fill"

        /// SF Symbols's name：signpost.right.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostRightCircle = "signpost.right.circle"

        /// SF Symbols's name：signpost.right.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case signpostRightCircleFill = "signpost.right.circle.fill"

        /// SF Symbols's name：snowflake.road.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case snowflakeRoadLane = "snowflake.road.lane"

        /// SF Symbols's name：snowflake.road.lane.dashed
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case snowflakeRoadLaneDashed = "snowflake.road.lane.dashed"

        /// SF Symbols's name：snowflake.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case snowflakeSlash = "snowflake.slash"

        /// SF Symbols's name：sos
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case sos = "sos"

        /// SF Symbols's name：sos.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case sosCircle = "sos.circle"

        /// SF Symbols's name：sos.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case sosCircleFill = "sos.circle.fill"

        /// SF Symbols's name：steeringwheel
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheel = "steeringwheel"

        /// SF Symbols's name：steeringwheel.and.heat.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelAndHeatWaves = "steeringwheel.and.heat.waves"

        /// SF Symbols's name：steeringwheel.and.key
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelAndKey = "steeringwheel.and.key"

        /// SF Symbols's name：steeringwheel.and.lock
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelAndLock = "steeringwheel.and.lock"

        /// SF Symbols's name：steeringwheel.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelExclamationmark = "steeringwheel.exclamationmark"

        /// SF Symbols's name：steeringwheel.road.lane
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelRoadLane = "steeringwheel.road.lane"

        /// SF Symbols's name：steeringwheel.road.lane.dashed
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelRoadLaneDashed = "steeringwheel.road.lane.dashed"

        /// SF Symbols's name：steeringwheel.slash
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case steeringwheelSlash = "steeringwheel.slash"

        /// SF Symbols's name：stroller
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case stroller = "stroller"

        /// SF Symbols's name：stroller.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case strollerFill = "stroller.fill"

        /// SF Symbols's name：suitcase.rolling
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suitcaseRolling = "suitcase.rolling"

        /// SF Symbols's name：suitcase.rolling.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suitcaseRollingFill = "suitcase.rolling.fill"

        /// SF Symbols's name：suv.side
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSide = "suv.side"

        /// SF Symbols's name：suv.side.air.circulate
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideAirCirculate = "suv.side.air.circulate"

        /// SF Symbols's name：suv.side.air.circulate.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideAirCirculateFill = "suv.side.air.circulate.fill"

        /// SF Symbols's name：suv.side.air.fresh
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideAirFresh = "suv.side.air.fresh"

        /// SF Symbols's name：suv.side.air.fresh.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideAirFreshFill = "suv.side.air.fresh.fill"

        /// SF Symbols's name：suv.side.and.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideAndExclamationmark = "suv.side.and.exclamationmark"

        /// SF Symbols's name：suv.side.and.exclamationmark.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideAndExclamationmarkFill = "suv.side.and.exclamationmark.fill"

        /// SF Symbols's name：suv.side.arrowtriangle.down
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideArrowtriangleDown = "suv.side.arrowtriangle.down"

        /// SF Symbols's name：suv.side.arrowtriangle.down.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideArrowtriangleDownFill = "suv.side.arrowtriangle.down.fill"

        /// SF Symbols's name：suv.side.arrowtriangle.up
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideArrowtriangleUp = "suv.side.arrowtriangle.up"

        /// SF Symbols's name：suv.side.arrowtriangle.up.arrowtriangle.down
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideArrowtriangleUpArrowtriangleDown = "suv.side.arrowtriangle.up.arrowtriangle.down"

        /// SF Symbols's name：suv.side.arrowtriangle.up.arrowtriangle.down.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideArrowtriangleUpArrowtriangleDownFill = "suv.side.arrowtriangle.up.arrowtriangle.down.fill"

        /// SF Symbols's name：suv.side.arrowtriangle.up.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideArrowtriangleUpFill = "suv.side.arrowtriangle.up.fill"

        /// SF Symbols's name：suv.side.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideFill = "suv.side.fill"

        /// SF Symbols's name：suv.side.front.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideFrontOpen = "suv.side.front.open"

        /// SF Symbols's name：suv.side.front.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideFrontOpenFill = "suv.side.front.open.fill"

        /// SF Symbols's name：suv.side.rear.open
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideRearOpen = "suv.side.rear.open"

        /// SF Symbols's name：suv.side.rear.open.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case suvSideRearOpenFill = "suv.side.rear.open.fill"

        /// SF Symbols's name：taillight.fog
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case taillightFog = "taillight.fog"

        /// SF Symbols's name：taillight.fog.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case taillightFogFill = "taillight.fog.fill"

        /// SF Symbols's name：tent.2
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tent2 = "tent.2"

        /// SF Symbols's name：tent.2.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tent2Circle = "tent.2.circle"

        /// SF Symbols's name：tent.2.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tent2CircleFill = "tent.2.circle.fill"

        /// SF Symbols's name：tent.2.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tent2Fill = "tent.2.fill"

        /// SF Symbols's name：tent.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tentCircle = "tent.circle"

        /// SF Symbols's name：tent.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tentCircleFill = "tent.circle.fill"

        /// SF Symbols's name：thermometer.and.liquid.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case thermometerAndLiquidWaves = "thermometer.and.liquid.waves"

        /// SF Symbols's name：thermometer.transmission
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case thermometerTransmission = "thermometer.transmission"

        /// SF Symbols's name：toilet.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case toiletCircle = "toilet.circle"

        /// SF Symbols's name：toilet.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case toiletCircleFill = "toilet.circle.fill"

        /// SF Symbols's name：transmission
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case transmission = "transmission"

        /// SF Symbols's name：tree
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case tree = "tree"

        /// SF Symbols's name：tree.circle
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case treeCircle = "tree.circle"

        /// SF Symbols's name：tree.circle.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case treeCircleFill = "tree.circle.fill"

        /// SF Symbols's name：tree.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case treeFill = "tree.fill"

        /// SF Symbols's name：windshield.front.and.fluid.and.spray
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldFrontAndFluidAndSpray = "windshield.front.and.fluid.and.spray"

        /// SF Symbols's name：windshield.front.and.heat.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldFrontAndHeatWaves = "windshield.front.and.heat.waves"

        /// SF Symbols's name：windshield.front.and.spray
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldFrontAndSpray = "windshield.front.and.spray"

        /// SF Symbols's name：windshield.front.and.wiper.and.spray
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldFrontAndWiperAndSpray = "windshield.front.and.wiper.and.spray"

        /// SF Symbols's name：windshield.front.and.wiper.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldFrontAndWiperExclamationmark = "windshield.front.and.wiper.exclamationmark"

        /// SF Symbols's name：windshield.front.and.wiper.intermittent
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldFrontAndWiperIntermittent = "windshield.front.and.wiper.intermittent"

        /// SF Symbols's name：windshield.rear.and.fluid.and.spray
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndFluidAndSpray = "windshield.rear.and.fluid.and.spray"

        /// SF Symbols's name：windshield.rear.and.heat.waves
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndHeatWaves = "windshield.rear.and.heat.waves"

        /// SF Symbols's name：windshield.rear.and.spray
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndSpray = "windshield.rear.and.spray"

        /// SF Symbols's name：windshield.rear.and.wiper.and.drop
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndWiperAndDrop = "windshield.rear.and.wiper.and.drop"

        /// SF Symbols's name：windshield.rear.and.wiper.and.spray
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndWiperAndSpray = "windshield.rear.and.wiper.and.spray"

        /// SF Symbols's name：windshield.rear.and.wiper.exclamationmark
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndWiperExclamationmark = "windshield.rear.and.wiper.exclamationmark"

        /// SF Symbols's name：windshield.rear.and.wiper.intermittent
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case windshieldRearAndWiperIntermittent = "windshield.rear.and.wiper.intermittent"

        /// SF Symbols's name：wrongwaysign
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case wrongwaysign = "wrongwaysign"

        /// SF Symbols's name：wrongwaysign.fill
        @available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *)
        case wrongwaysignFill = "wrongwaysign.fill"

        /// SF Symbols's name：1.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _1LaneAr = "1.lane.ar"

        /// SF Symbols's name：1.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _1LaneHi = "1.lane.hi"

        /// SF Symbols's name：10.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _10LaneAr = "10.lane.ar"

        /// SF Symbols's name：10.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _10LaneHi = "10.lane.hi"

        /// SF Symbols's name：11.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _11LaneAr = "11.lane.ar"

        /// SF Symbols's name：11.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _11LaneHi = "11.lane.hi"

        /// SF Symbols's name：12.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _12LaneAr = "12.lane.ar"

        /// SF Symbols's name：12.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _12LaneHi = "12.lane.hi"

        /// SF Symbols's name：2.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _2LaneAr = "2.lane.ar"

        /// SF Symbols's name：2.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _2LaneHi = "2.lane.hi"

        /// SF Symbols's name：3.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _3LaneAr = "3.lane.ar"

        /// SF Symbols's name：3.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _3LaneHi = "3.lane.hi"

        /// SF Symbols's name：4.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _4LaneAr = "4.lane.ar"

        /// SF Symbols's name：4.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _4LaneHi = "4.lane.hi"

        /// SF Symbols's name：5.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _5LaneAr = "5.lane.ar"

        /// SF Symbols's name：5.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _5LaneHi = "5.lane.hi"

        /// SF Symbols's name：6.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _6LaneAr = "6.lane.ar"

        /// SF Symbols's name：6.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _6LaneHi = "6.lane.hi"

        /// SF Symbols's name：7.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _7LaneAr = "7.lane.ar"

        /// SF Symbols's name：7.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _7LaneHi = "7.lane.hi"

        /// SF Symbols's name：8.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _8LaneAr = "8.lane.ar"

        /// SF Symbols's name：8.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _8LaneHi = "8.lane.hi"

        /// SF Symbols's name：9.lane.ar
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _9LaneAr = "9.lane.ar"

        /// SF Symbols's name：9.lane.hi
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case _9LaneHi = "9.lane.hi"

        /// SF Symbols's name：axle.2
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case axle2 = "axle.2"

        /// SF Symbols's name：axle.2.front.and.rear.engaged
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case axle2FrontAndRearEngaged = "axle.2.front.and.rear.engaged"

        /// SF Symbols's name：axle.2.front.engaged
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case axle2FrontEngaged = "axle.2.front.engaged"

        /// SF Symbols's name：axle.2.rear.engaged
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case axle2RearEngaged = "axle.2.rear.engaged"

        /// SF Symbols's name：beats.powerbeats.left
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case beatsPowerbeatsLeft = "beats.powerbeats.left"

        /// SF Symbols's name：beats.powerbeats.right
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case beatsPowerbeatsRight = "beats.powerbeats.right"

        /// SF Symbols's name：beats.powerbeats3.left
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case beatsPowerbeats3Left = "beats.powerbeats3.left"

        /// SF Symbols's name：beats.powerbeats3.right
        @available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *)
        case beatsPowerbeats3Right = "beats.powerbeats3.right"

        /// SF Symbols's name：2h
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _2h = "2h"

        /// SF Symbols's name：2h.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _2hCircle = "2h.circle"

        /// SF Symbols's name：2h.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _2hCircleFill = "2h.circle.fill"

        /// SF Symbols's name：4a
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4a = "4a"

        /// SF Symbols's name：4a.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4aCircle = "4a.circle"

        /// SF Symbols's name：4a.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4aCircleFill = "4a.circle.fill"

        /// SF Symbols's name：4h
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4h = "4h"

        /// SF Symbols's name：4h.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4hCircle = "4h.circle"

        /// SF Symbols's name：4h.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4hCircleFill = "4h.circle.fill"

        /// SF Symbols's name：4l
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4l = "4l"

        /// SF Symbols's name：4l.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4lCircle = "4l.circle"

        /// SF Symbols's name：4l.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case _4lCircleFill = "4l.circle.fill"

        /// SF Symbols's name：accessibility
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case accessibility = "accessibility"

        /// SF Symbols's name：accessibility.badge.arrow.up.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case accessibilityBadgeArrowUpRight = "accessibility.badge.arrow.up.right"

        /// SF Symbols's name：accessibility.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case accessibilityFill = "accessibility.fill"

        /// SF Symbols's name：airpodspro.chargingcase.wireless.radiowaves.left.and.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case airpodsproChargingcaseWirelessRadiowavesLeftAndRight = "airpodspro.chargingcase.wireless.radiowaves.left.and.right"

        /// SF Symbols's name：airpodspro.chargingcase.wireless.radiowaves.left.and.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case airpodsproChargingcaseWirelessRadiowavesLeftAndRightFill = "airpodspro.chargingcase.wireless.radiowaves.left.and.right.fill"

        /// SF Symbols's name：apple.terminal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case appleTerminal = "apple.terminal"

        /// SF Symbols's name：apple.terminal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case appleTerminalFill = "apple.terminal.fill"

        /// SF Symbols's name：apple.terminal.on.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case appleTerminalOnRectangle = "apple.terminal.on.rectangle"

        /// SF Symbols's name：apple.terminal.on.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case appleTerminalOnRectangleFill = "apple.terminal.on.rectangle.fill"

        /// SF Symbols's name：applepencil.adapter.usb.c
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applepencilAdapterUsbC = "applepencil.adapter.usb.c"

        /// SF Symbols's name：applepencil.adapter.usb.c.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applepencilAdapterUsbCFill = "applepencil.adapter.usb.c.fill"

        /// SF Symbols's name：applepencil.and.scribble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applepencilAndScribble = "applepencil.and.scribble"

        /// SF Symbols's name：applepencil.gen1
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applepencilGen1 = "applepencil.gen1"

        /// SF Symbols's name：applepencil.gen2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applepencilGen2 = "applepencil.gen2"

        /// SF Symbols's name：applepencil.tip
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applepencilTip = "applepencil.tip"

        /// SF Symbols's name：applewatch.and.arrow.forward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applewatchAndArrowForward = "applewatch.and.arrow.forward"

        /// SF Symbols's name：applewatch.and.arrow.forward.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case applewatchAndArrowForwardRtl = "applewatch.and.arrow.forward.rtl"

        /// SF Symbols's name：appwindow.swipe.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case appwindowSwipeRectangle = "appwindow.swipe.rectangle"

        /// SF Symbols's name：arcade.stick
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStick = "arcade.stick"

        /// SF Symbols's name：arcade.stick.and.arrow.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickAndArrowDown = "arcade.stick.and.arrow.down"

        /// SF Symbols's name：arcade.stick.and.arrow.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickAndArrowLeft = "arcade.stick.and.arrow.left"

        /// SF Symbols's name：arcade.stick.and.arrow.left.and.arrow.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickAndArrowLeftAndArrowRight = "arcade.stick.and.arrow.left.and.arrow.right"

        /// SF Symbols's name：arcade.stick.and.arrow.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickAndArrowRight = "arcade.stick.and.arrow.right"

        /// SF Symbols's name：arcade.stick.and.arrow.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickAndArrowUp = "arcade.stick.and.arrow.up"

        /// SF Symbols's name：arcade.stick.and.arrow.up.and.arrow.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickAndArrowUpAndArrowDown = "arcade.stick.and.arrow.up.and.arrow.down"

        /// SF Symbols's name：arcade.stick.console
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickConsole = "arcade.stick.console"

        /// SF Symbols's name：arcade.stick.console.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arcadeStickConsoleFill = "arcade.stick.console.fill"

        /// SF Symbols's name：arrow.backward.to.line.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowBackwardToLineSquare = "arrow.backward.to.line.square"

        /// SF Symbols's name：arrow.backward.to.line.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowBackwardToLineSquareFill = "arrow.backward.to.line.square.fill"

        /// SF Symbols's name：arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowCirclepath = "arrow.circlepath"

        /// SF Symbols's name：arrow.clockwise.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowClockwiseSquare = "arrow.clockwise.square"

        /// SF Symbols's name：arrow.clockwise.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowClockwiseSquareFill = "arrow.clockwise.square.fill"

        /// SF Symbols's name：arrow.counterclockwise.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowCounterclockwiseSquare = "arrow.counterclockwise.square"

        /// SF Symbols's name：arrow.counterclockwise.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowCounterclockwiseSquareFill = "arrow.counterclockwise.square.fill"

        /// SF Symbols's name：arrow.down.applewatch
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownApplewatch = "arrow.down.applewatch"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardAndArrowUpForward = "arrow.down.backward.and.arrow.up.forward"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardAndArrowUpForwardCircle = "arrow.down.backward.and.arrow.up.forward.circle"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardAndArrowUpForwardCircleFill = "arrow.down.backward.and.arrow.up.forward.circle.fill"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardAndArrowUpForwardSquare = "arrow.down.backward.and.arrow.up.forward.square"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardAndArrowUpForwardSquareFill = "arrow.down.backward.and.arrow.up.forward.square.fill"

        /// SF Symbols's name：arrow.down.backward.toptrailing.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardToptrailingRectangle = "arrow.down.backward.toptrailing.rectangle"

        /// SF Symbols's name：arrow.down.backward.toptrailing.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownBackwardToptrailingRectangleFill = "arrow.down.backward.toptrailing.rectangle.fill"

        /// SF Symbols's name：arrow.down.circle.dotted
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownCircleDotted = "arrow.down.circle.dotted"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownForwardAndArrowUpBackwardSquare = "arrow.down.forward.and.arrow.up.backward.square"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownForwardAndArrowUpBackwardSquareFill = "arrow.down.forward.and.arrow.up.backward.square.fill"

        /// SF Symbols's name：arrow.down.forward.topleading.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownForwardTopleadingRectangle = "arrow.down.forward.topleading.rectangle"

        /// SF Symbols's name：arrow.down.forward.topleading.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownForwardTopleadingRectangleFill = "arrow.down.forward.topleading.rectangle.fill"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftAndArrowUpRight = "arrow.down.left.and.arrow.up.right"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftAndArrowUpRightCircle = "arrow.down.left.and.arrow.up.right.circle"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftAndArrowUpRightCircleFill = "arrow.down.left.and.arrow.up.right.circle.fill"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftAndArrowUpRightSquare = "arrow.down.left.and.arrow.up.right.square"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftAndArrowUpRightSquareFill = "arrow.down.left.and.arrow.up.right.square.fill"

        /// SF Symbols's name：arrow.down.left.arrow.up.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftArrowUpRight = "arrow.down.left.arrow.up.right"

        /// SF Symbols's name：arrow.down.left.arrow.up.right.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftArrowUpRightCircle = "arrow.down.left.arrow.up.right.circle"

        /// SF Symbols's name：arrow.down.left.arrow.up.right.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftArrowUpRightCircleFill = "arrow.down.left.arrow.up.right.circle.fill"

        /// SF Symbols's name：arrow.down.left.arrow.up.right.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftArrowUpRightSquare = "arrow.down.left.arrow.up.right.square"

        /// SF Symbols's name：arrow.down.left.arrow.up.right.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftArrowUpRightSquareFill = "arrow.down.left.arrow.up.right.square.fill"

        /// SF Symbols's name：arrow.down.left.topright.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftToprightRectangle = "arrow.down.left.topright.rectangle"

        /// SF Symbols's name：arrow.down.left.topright.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownLeftToprightRectangleFill = "arrow.down.left.topright.rectangle.fill"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownRightAndArrowUpLeftSquare = "arrow.down.right.and.arrow.up.left.square"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownRightAndArrowUpLeftSquareFill = "arrow.down.right.and.arrow.up.left.square.fill"

        /// SF Symbols's name：arrow.down.right.topleft.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownRightTopleftRectangle = "arrow.down.right.topleft.rectangle"

        /// SF Symbols's name：arrow.down.right.topleft.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownRightTopleftRectangleFill = "arrow.down.right.topleft.rectangle.fill"

        /// SF Symbols's name：arrow.down.to.line.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownToLineSquare = "arrow.down.to.line.square"

        /// SF Symbols's name：arrow.down.to.line.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowDownToLineSquareFill = "arrow.down.to.line.square.fill"

        /// SF Symbols's name：arrow.forward.to.line.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowForwardToLineSquare = "arrow.forward.to.line.square"

        /// SF Symbols's name：arrow.forward.to.line.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowForwardToLineSquareFill = "arrow.forward.to.line.square.fill"

        /// SF Symbols's name：arrow.left.to.line.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowLeftToLineSquare = "arrow.left.to.line.square"

        /// SF Symbols's name：arrow.left.to.line.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowLeftToLineSquareFill = "arrow.left.to.line.square.fill"

        /// SF Symbols's name：arrow.right.to.line.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowRightToLineSquare = "arrow.right.to.line.square"

        /// SF Symbols's name：arrow.right.to.line.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowRightToLineSquareFill = "arrow.right.to.line.square.fill"

        /// SF Symbols's name：arrow.triangle.2.circlepath.icloud
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowTriangle2CirclepathIcloud = "arrow.triangle.2.circlepath.icloud"

        /// SF Symbols's name：arrow.triangle.2.circlepath.icloud.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowTriangle2CirclepathIcloudFill = "arrow.triangle.2.circlepath.icloud.fill"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpBackwardAndArrowDownForwardSquare = "arrow.up.backward.and.arrow.down.forward.square"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpBackwardAndArrowDownForwardSquareFill = "arrow.up.backward.and.arrow.down.forward.square.fill"

        /// SF Symbols's name：arrow.up.backward.bottomtrailing.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpBackwardBottomtrailingRectangle = "arrow.up.backward.bottomtrailing.rectangle"

        /// SF Symbols's name：arrow.up.backward.bottomtrailing.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpBackwardBottomtrailingRectangleFill = "arrow.up.backward.bottomtrailing.rectangle.fill"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardAndArrowDownBackward = "arrow.up.forward.and.arrow.down.backward"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardAndArrowDownBackwardCircle = "arrow.up.forward.and.arrow.down.backward.circle"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardAndArrowDownBackwardCircleFill = "arrow.up.forward.and.arrow.down.backward.circle.fill"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardAndArrowDownBackwardSquare = "arrow.up.forward.and.arrow.down.backward.square"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardAndArrowDownBackwardSquareFill = "arrow.up.forward.and.arrow.down.backward.square.fill"

        /// SF Symbols's name：arrow.up.forward.bottomleading.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardBottomleadingRectangle = "arrow.up.forward.bottomleading.rectangle"

        /// SF Symbols's name：arrow.up.forward.bottomleading.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpForwardBottomleadingRectangleFill = "arrow.up.forward.bottomleading.rectangle.fill"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftAndArrowDownRightSquare = "arrow.up.left.and.arrow.down.right.square"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftAndArrowDownRightSquareFill = "arrow.up.left.and.arrow.down.right.square.fill"

        /// SF Symbols's name：arrow.up.left.arrow.down.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftArrowDownRight = "arrow.up.left.arrow.down.right"

        /// SF Symbols's name：arrow.up.left.arrow.down.right.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftArrowDownRightCircle = "arrow.up.left.arrow.down.right.circle"

        /// SF Symbols's name：arrow.up.left.arrow.down.right.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftArrowDownRightCircleFill = "arrow.up.left.arrow.down.right.circle.fill"

        /// SF Symbols's name：arrow.up.left.arrow.down.right.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftArrowDownRightSquare = "arrow.up.left.arrow.down.right.square"

        /// SF Symbols's name：arrow.up.left.arrow.down.right.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftArrowDownRightSquareFill = "arrow.up.left.arrow.down.right.square.fill"

        /// SF Symbols's name：arrow.up.left.bottomright.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftBottomrightRectangle = "arrow.up.left.bottomright.rectangle"

        /// SF Symbols's name：arrow.up.left.bottomright.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpLeftBottomrightRectangleFill = "arrow.up.left.bottomright.rectangle.fill"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightAndArrowDownLeft = "arrow.up.right.and.arrow.down.left"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightAndArrowDownLeftCircle = "arrow.up.right.and.arrow.down.left.circle"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightAndArrowDownLeftCircleFill = "arrow.up.right.and.arrow.down.left.circle.fill"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightAndArrowDownLeftSquare = "arrow.up.right.and.arrow.down.left.square"

        /// SF Symbols's name：arrow.up.right.and.arrow.down.left.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightAndArrowDownLeftSquareFill = "arrow.up.right.and.arrow.down.left.square.fill"

        /// SF Symbols's name：arrow.up.right.bottomleft.rectangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightBottomleftRectangle = "arrow.up.right.bottomleft.rectangle"

        /// SF Symbols's name：arrow.up.right.bottomleft.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpRightBottomleftRectangleFill = "arrow.up.right.bottomleft.rectangle.fill"

        /// SF Symbols's name：arrow.up.to.line.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpToLineSquare = "arrow.up.to.line.square"

        /// SF Symbols's name：arrow.up.to.line.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpToLineSquareFill = "arrow.up.to.line.square.fill"

        /// SF Symbols's name：arrow.up.trash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpTrash = "arrow.up.trash"

        /// SF Symbols's name：arrow.up.trash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowUpTrashFill = "arrow.up.trash.fill"

        /// SF Symbols's name：arrowkeys
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowkeys = "arrowkeys"

        /// SF Symbols's name：arrowkeys.down.filled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowkeysDownFilled = "arrowkeys.down.filled"

        /// SF Symbols's name：arrowkeys.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowkeysFill = "arrowkeys.fill"

        /// SF Symbols's name：arrowkeys.left.filled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowkeysLeftFilled = "arrowkeys.left.filled"

        /// SF Symbols's name：arrowkeys.right.filled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowkeysRightFilled = "arrowkeys.right.filled"

        /// SF Symbols's name：arrowkeys.up.filled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowkeysUpFilled = "arrowkeys.up.filled"

        /// SF Symbols's name：arrowshape.backward.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeBackwardCircle = "arrowshape.backward.circle"

        /// SF Symbols's name：arrowshape.backward.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeBackwardCircleFill = "arrowshape.backward.circle.fill"

        /// SF Symbols's name：arrowshape.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeDown = "arrowshape.down"

        /// SF Symbols's name：arrowshape.down.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeDownCircle = "arrowshape.down.circle"

        /// SF Symbols's name：arrowshape.down.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeDownCircleFill = "arrowshape.down.circle.fill"

        /// SF Symbols's name：arrowshape.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeDownFill = "arrowshape.down.fill"

        /// SF Symbols's name：arrowshape.forward.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeForwardCircle = "arrowshape.forward.circle"

        /// SF Symbols's name：arrowshape.forward.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeForwardCircleFill = "arrowshape.forward.circle.fill"

        /// SF Symbols's name：arrowshape.left.arrowshape.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeLeftArrowshapeRight = "arrowshape.left.arrowshape.right"

        /// SF Symbols's name：arrowshape.left.arrowshape.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeLeftArrowshapeRightFill = "arrowshape.left.arrowshape.right.fill"

        /// SF Symbols's name：arrowshape.left.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeLeftCircle = "arrowshape.left.circle"

        /// SF Symbols's name：arrowshape.left.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeLeftCircleFill = "arrowshape.left.circle.fill"

        /// SF Symbols's name：arrowshape.right.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeRightCircle = "arrowshape.right.circle"

        /// SF Symbols's name：arrowshape.right.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeRightCircleFill = "arrowshape.right.circle.fill"

        /// SF Symbols's name：arrowshape.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeUp = "arrowshape.up"

        /// SF Symbols's name：arrowshape.up.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeUpCircle = "arrowshape.up.circle"

        /// SF Symbols's name：arrowshape.up.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeUpCircleFill = "arrowshape.up.circle.fill"

        /// SF Symbols's name：arrowshape.up.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowshapeUpFill = "arrowshape.up.fill"

        /// SF Symbols's name：arrowtriangle.up.arrowtriangle.down.window.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowtriangleUpArrowtriangleDownWindowLeft = "arrowtriangle.up.arrowtriangle.down.window.left"

        /// SF Symbols's name：arrowtriangle.up.arrowtriangle.down.window.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case arrowtriangleUpArrowtriangleDownWindowRight = "arrowtriangle.up.arrowtriangle.down.window.right"

        /// SF Symbols's name：australiandollarsign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australiandollarsign = "australiandollarsign"

        /// SF Symbols's name：australiandollarsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australiandollarsignArrowCirclepath = "australiandollarsign.arrow.circlepath"

        /// SF Symbols's name：australiandollarsign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australiandollarsignCircle = "australiandollarsign.circle"

        /// SF Symbols's name：australiandollarsign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australiandollarsignCircleFill = "australiandollarsign.circle.fill"

        /// SF Symbols's name：australiandollarsign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australiandollarsignSquare = "australiandollarsign.square"

        /// SF Symbols's name：australiandollarsign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australiandollarsignSquareFill = "australiandollarsign.square.fill"

        /// SF Symbols's name：australsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case australsignArrowCirclepath = "australsign.arrow.circlepath"

        /// SF Symbols's name：automatic.brakesignal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case automaticBrakesignal = "automatic.brakesignal"

        /// SF Symbols's name：automatic.headlight.high.beam
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case automaticHeadlightHighBeam = "automatic.headlight.high.beam"

        /// SF Symbols's name：automatic.headlight.high.beam.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case automaticHeadlightHighBeamFill = "automatic.headlight.high.beam.fill"

        /// SF Symbols's name：automatic.headlight.low.beam
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case automaticHeadlightLowBeam = "automatic.headlight.low.beam"

        /// SF Symbols's name：automatic.headlight.low.beam.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case automaticHeadlightLowBeamFill = "automatic.headlight.low.beam.fill"

        /// SF Symbols's name：axle.2.driveshaft.disengaged
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case axle2DriveshaftDisengaged = "axle.2.driveshaft.disengaged"

        /// SF Symbols's name：axle.2.front.disengaged
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case axle2FrontDisengaged = "axle.2.front.disengaged"

        /// SF Symbols's name：axle.2.rear.disengaged
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case axle2RearDisengaged = "axle.2.rear.disengaged"

        /// SF Symbols's name：axle.2.rear.lock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case axle2RearLock = "axle.2.rear.lock"

        /// SF Symbols's name：bahtsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bahtsignArrowCirclepath = "bahtsign.arrow.circlepath"

        /// SF Symbols's name：battery.0percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery0percent = "battery.0percent"

        /// SF Symbols's name：battery.100percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery100percent = "battery.100percent"

        /// SF Symbols's name：battery.100percent.bolt
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery100percentBolt = "battery.100percent.bolt"

        /// SF Symbols's name：battery.100percent.bolt.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery100percentBoltRtl = "battery.100percent.bolt.rtl"

        /// SF Symbols's name：battery.100percent.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery100percentCircle = "battery.100percent.circle"

        /// SF Symbols's name：battery.100percent.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery100percentCircleFill = "battery.100percent.circle.fill"

        /// SF Symbols's name：battery.25percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery25percent = "battery.25percent"

        /// SF Symbols's name：battery.50percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery50percent = "battery.50percent"

        /// SF Symbols's name：battery.75percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case battery75percent = "battery.75percent"

        /// SF Symbols's name：beats.fitpro
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsFitpro = "beats.fitpro"

        /// SF Symbols's name：beats.fitpro.chargingcase
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsFitproChargingcase = "beats.fitpro.chargingcase"

        /// SF Symbols's name：beats.fitpro.chargingcase.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsFitproChargingcaseFill = "beats.fitpro.chargingcase.fill"

        /// SF Symbols's name：beats.fitpro.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsFitproLeft = "beats.fitpro.left"

        /// SF Symbols's name：beats.fitpro.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsFitproRight = "beats.fitpro.right"

        /// SF Symbols's name：beats.studiobudsplus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsStudiobudsplus = "beats.studiobudsplus"

        /// SF Symbols's name：beats.studiobudsplus.chargingcase
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsStudiobudsplusChargingcase = "beats.studiobudsplus.chargingcase"

        /// SF Symbols's name：beats.studiobudsplus.chargingcase.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsStudiobudsplusChargingcaseFill = "beats.studiobudsplus.chargingcase.fill"

        /// SF Symbols's name：beats.studiobudsplus.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsStudiobudsplusLeft = "beats.studiobudsplus.left"

        /// SF Symbols's name：beats.studiobudsplus.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case beatsStudiobudsplusRight = "beats.studiobudsplus.right"

        /// SF Symbols's name：bell.badge.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bellBadgeSlash = "bell.badge.slash"

        /// SF Symbols's name：bell.badge.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bellBadgeSlashFill = "bell.badge.slash.fill"

        /// SF Symbols's name：bell.badge.slash.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bellBadgeSlashFillRtl = "bell.badge.slash.fill.rtl"

        /// SF Symbols's name：bell.badge.slash.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bellBadgeSlashRtl = "bell.badge.slash.rtl"

        /// SF Symbols's name：bell.badge.waveform
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bellBadgeWaveform = "bell.badge.waveform"

        /// SF Symbols's name：bell.badge.waveform.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bellBadgeWaveformFill = "bell.badge.waveform.fill"

        /// SF Symbols's name：binoculars.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case binocularsCircle = "binoculars.circle"

        /// SF Symbols's name：binoculars.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case binocularsCircleFill = "binoculars.circle.fill"

        /// SF Symbols's name：bird.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case birdCircle = "bird.circle"

        /// SF Symbols's name：bird.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case birdCircleFill = "bird.circle.fill"

        /// SF Symbols's name：bitcoinsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bitcoinsignArrowCirclepath = "bitcoinsign.arrow.circlepath"

        /// SF Symbols's name：bolt.badge.automatic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case boltBadgeAutomatic = "bolt.badge.automatic"

        /// SF Symbols's name：bolt.badge.automatic.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case boltBadgeAutomaticFill = "bolt.badge.automatic.fill"

        /// SF Symbols's name：bolt.badge.checkmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case boltBadgeCheckmark = "bolt.badge.checkmark"

        /// SF Symbols's name：bolt.badge.checkmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case boltBadgeCheckmarkFill = "bolt.badge.checkmark.fill"

        /// SF Symbols's name：bolt.badge.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case boltBadgeXmark = "bolt.badge.xmark"

        /// SF Symbols's name：bolt.badge.xmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case boltBadgeXmarkFill = "bolt.badge.xmark.fill"

        /// SF Symbols's name：book.and.wrench
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bookAndWrench = "book.and.wrench"

        /// SF Symbols's name：book.and.wrench.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bookAndWrenchFill = "book.and.wrench.fill"

        /// SF Symbols's name：book.pages
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bookPages = "book.pages"

        /// SF Symbols's name：book.pages.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bookPagesFill = "book.pages.fill"

        /// SF Symbols's name：brain.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case brainFill = "brain.fill"

        /// SF Symbols's name：brain.filled.head.profile
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case brainFilledHeadProfile = "brain.filled.head.profile"

        /// SF Symbols's name：brain.head.profile.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case brainHeadProfileFill = "brain.head.profile.fill"

        /// SF Symbols's name：brazilianrealsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case brazilianrealsignArrowCirclepath = "brazilianrealsign.arrow.circlepath"

        /// SF Symbols's name：bubble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubble = "bubble"

        /// SF Symbols's name：bubble.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleCircle = "bubble.circle"

        /// SF Symbols's name：bubble.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleCircleFill = "bubble.circle.fill"

        /// SF Symbols's name：bubble.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleFill = "bubble.fill"

        /// SF Symbols's name：bubble.left.and.text.bubble.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleLeftAndTextBubbleRight = "bubble.left.and.text.bubble.right"

        /// SF Symbols's name：bubble.left.and.text.bubble.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleLeftAndTextBubbleRightFill = "bubble.left.and.text.bubble.right.fill"

        /// SF Symbols's name：bubble.left.and.text.bubble.right.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleLeftAndTextBubbleRightFillRtl = "bubble.left.and.text.bubble.right.fill.rtl"

        /// SF Symbols's name：bubble.left.and.text.bubble.right.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case bubbleLeftAndTextBubbleRightRtl = "bubble.left.and.text.bubble.right.rtl"

        /// SF Symbols's name：button.angledbottom.horizontal.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledbottomHorizontalLeft = "button.angledbottom.horizontal.left"

        /// SF Symbols's name：button.angledbottom.horizontal.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledbottomHorizontalLeftFill = "button.angledbottom.horizontal.left.fill"

        /// SF Symbols's name：button.angledbottom.horizontal.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledbottomHorizontalRight = "button.angledbottom.horizontal.right"

        /// SF Symbols's name：button.angledbottom.horizontal.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledbottomHorizontalRightFill = "button.angledbottom.horizontal.right.fill"

        /// SF Symbols's name：button.angledtop.vertical.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledtopVerticalLeft = "button.angledtop.vertical.left"

        /// SF Symbols's name：button.angledtop.vertical.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledtopVerticalLeftFill = "button.angledtop.vertical.left.fill"

        /// SF Symbols's name：button.angledtop.vertical.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledtopVerticalRight = "button.angledtop.vertical.right"

        /// SF Symbols's name：button.angledtop.vertical.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonAngledtopVerticalRightFill = "button.angledtop.vertical.right.fill"

        /// SF Symbols's name：button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonHorizontal = "button.horizontal"

        /// SF Symbols's name：button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonHorizontalFill = "button.horizontal.fill"

        /// SF Symbols's name：button.horizontal.top.press
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonHorizontalTopPress = "button.horizontal.top.press"

        /// SF Symbols's name：button.horizontal.top.press.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonHorizontalTopPressFill = "button.horizontal.top.press.fill"

        /// SF Symbols's name：button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonRoundedbottomHorizontal = "button.roundedbottom.horizontal"

        /// SF Symbols's name：button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonRoundedbottomHorizontalFill = "button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonRoundedtopHorizontal = "button.roundedtop.horizontal"

        /// SF Symbols's name：button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonRoundedtopHorizontalFill = "button.roundedtop.horizontal.fill"

        /// SF Symbols's name：button.vertical.left.press
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonVerticalLeftPress = "button.vertical.left.press"

        /// SF Symbols's name：button.vertical.left.press.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonVerticalLeftPressFill = "button.vertical.left.press.fill"

        /// SF Symbols's name：button.vertical.right.press
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonVerticalRightPress = "button.vertical.right.press"

        /// SF Symbols's name：button.vertical.right.press.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case buttonVerticalRightPressFill = "button.vertical.right.press.fill"

        /// SF Symbols's name：cable.coaxial
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cableCoaxial = "cable.coaxial"

        /// SF Symbols's name：cable.connector.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cableConnectorSlash = "cable.connector.slash"

        /// SF Symbols's name：calendar.badge.checkmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case calendarBadgeCheckmark = "calendar.badge.checkmark"

        /// SF Symbols's name：calendar.badge.checkmark.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case calendarBadgeCheckmarkRtl = "calendar.badge.checkmark.rtl"

        /// SF Symbols's name：camera.badge.clock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cameraBadgeClock = "camera.badge.clock"

        /// SF Symbols's name：camera.badge.clock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cameraBadgeClockFill = "camera.badge.clock.fill"

        /// SF Symbols's name：camera.badge.ellipsis.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cameraBadgeEllipsisFill = "camera.badge.ellipsis.fill"

        /// SF Symbols's name：car.front.waves.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carFrontWavesDown = "car.front.waves.down"

        /// SF Symbols's name：car.front.waves.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carFrontWavesDownFill = "car.front.waves.down.fill"

        /// SF Symbols's name：car.rear.and.collision.road.lane
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carRearAndCollisionRoadLane = "car.rear.and.collision.road.lane"

        /// SF Symbols's name：car.rear.and.collision.road.lane.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carRearAndCollisionRoadLaneSlash = "car.rear.and.collision.road.lane.slash"

        /// SF Symbols's name：car.side.hill.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideHillDown = "car.side.hill.down"

        /// SF Symbols's name：car.side.hill.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideHillDownFill = "car.side.hill.down.fill"

        /// SF Symbols's name：car.side.hill.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideHillUp = "car.side.hill.up"

        /// SF Symbols's name：car.side.hill.up.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideHillUpFill = "car.side.hill.up.fill"

        /// SF Symbols's name：car.side.lock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideLock = "car.side.lock"

        /// SF Symbols's name：car.side.lock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideLockFill = "car.side.lock.fill"

        /// SF Symbols's name：car.side.lock.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideLockOpen = "car.side.lock.open"

        /// SF Symbols's name：car.side.lock.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideLockOpenFill = "car.side.lock.open.fill"

        /// SF Symbols's name：car.side.rear.and.collision.and.car.side.front
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideRearAndCollisionAndCarSideFront = "car.side.rear.and.collision.and.car.side.front"

        /// SF Symbols's name：car.side.rear.and.collision.and.car.side.front.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideRearAndCollisionAndCarSideFrontSlash = "car.side.rear.and.collision.and.car.side.front.slash"

        /// SF Symbols's name：car.side.rear.and.exclamationmark.and.car.side.front
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideRearAndExclamationmarkAndCarSideFront = "car.side.rear.and.exclamationmark.and.car.side.front"

        /// SF Symbols's name：car.side.rear.and.wave.3.and.car.side.front
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carSideRearAndWave3AndCarSideFront = "car.side.rear.and.wave.3.and.car.side.front"

        /// SF Symbols's name：car.top.door.sliding.left.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopDoorSlidingLeftOpen = "car.top.door.sliding.left.open"

        /// SF Symbols's name：car.top.door.sliding.left.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopDoorSlidingLeftOpenFill = "car.top.door.sliding.left.open.fill"

        /// SF Symbols's name：car.top.door.sliding.right.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopDoorSlidingRightOpen = "car.top.door.sliding.right.open"

        /// SF Symbols's name：car.top.door.sliding.right.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopDoorSlidingRightOpenFill = "car.top.door.sliding.right.open.fill"

        /// SF Symbols's name：car.top.frontleft.arrowtriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopFrontleftArrowtriangle = "car.top.frontleft.arrowtriangle"

        /// SF Symbols's name：car.top.frontleft.arrowtriangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopFrontleftArrowtriangleFill = "car.top.frontleft.arrowtriangle.fill"

        /// SF Symbols's name：car.top.frontright.arrowtriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopFrontrightArrowtriangle = "car.top.frontright.arrowtriangle"

        /// SF Symbols's name：car.top.frontright.arrowtriangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopFrontrightArrowtriangleFill = "car.top.frontright.arrowtriangle.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.right.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRadiowavesRearRightBadgeExclamationmark = "car.top.radiowaves.rear.right.badge.exclamationmark"

        /// SF Symbols's name：car.top.radiowaves.rear.right.badge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRadiowavesRearRightBadgeExclamationmarkFill = "car.top.radiowaves.rear.right.badge.exclamationmark.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.right.badge.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRadiowavesRearRightBadgeXmark = "car.top.radiowaves.rear.right.badge.xmark"

        /// SF Symbols's name：car.top.radiowaves.rear.right.badge.xmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRadiowavesRearRightBadgeXmarkFill = "car.top.radiowaves.rear.right.badge.xmark.fill"

        /// SF Symbols's name：car.top.rearleft.arrowtriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRearleftArrowtriangle = "car.top.rearleft.arrowtriangle"

        /// SF Symbols's name：car.top.rearleft.arrowtriangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRearleftArrowtriangleFill = "car.top.rearleft.arrowtriangle.fill"

        /// SF Symbols's name：car.top.rearright.arrowtriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRearrightArrowtriangle = "car.top.rearright.arrowtriangle"

        /// SF Symbols's name：car.top.rearright.arrowtriangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carTopRearrightArrowtriangleFill = "car.top.rearright.arrowtriangle.fill"

        /// SF Symbols's name：car.window.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowLeft = "car.window.left"

        /// SF Symbols's name：car.window.left.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowLeftBadgeExclamationmark = "car.window.left.badge.exclamationmark"

        /// SF Symbols's name：car.window.left.badge.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowLeftBadgeXmark = "car.window.left.badge.xmark"

        /// SF Symbols's name：car.window.left.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowLeftExclamationmark = "car.window.left.exclamationmark"

        /// SF Symbols's name：car.window.left.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowLeftXmark = "car.window.left.xmark"

        /// SF Symbols's name：car.window.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowRight = "car.window.right"

        /// SF Symbols's name：car.window.right.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowRightBadgeExclamationmark = "car.window.right.badge.exclamationmark"

        /// SF Symbols's name：car.window.right.badge.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowRightBadgeXmark = "car.window.right.badge.xmark"

        /// SF Symbols's name：car.window.right.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowRightExclamationmark = "car.window.right.exclamationmark"

        /// SF Symbols's name：car.window.right.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carWindowRightXmark = "car.window.right.xmark"

        /// SF Symbols's name：carseat.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft = "carseat.left"

        /// SF Symbols's name：carseat.left.1
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft1 = "carseat.left.1"

        /// SF Symbols's name：carseat.left.1.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft1Fill = "carseat.left.1.fill"

        /// SF Symbols's name：carseat.left.2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft2 = "carseat.left.2"

        /// SF Symbols's name：carseat.left.2.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft2Fill = "carseat.left.2.fill"

        /// SF Symbols's name：carseat.left.3
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft3 = "carseat.left.3"

        /// SF Symbols's name：carseat.left.3.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeft3Fill = "carseat.left.3.fill"

        /// SF Symbols's name：carseat.left.and.heat.waves
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftAndHeatWaves = "carseat.left.and.heat.waves"

        /// SF Symbols's name：carseat.left.and.heat.waves.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftAndHeatWavesFill = "carseat.left.and.heat.waves.fill"

        /// SF Symbols's name：carseat.left.backrest.up.and.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftBackrestUpAndDown = "carseat.left.backrest.up.and.down"

        /// SF Symbols's name：carseat.left.backrest.up.and.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftBackrestUpAndDownFill = "carseat.left.backrest.up.and.down.fill"

        /// SF Symbols's name：carseat.left.fan
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftFan = "carseat.left.fan"

        /// SF Symbols's name：carseat.left.fan.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftFanFill = "carseat.left.fan.fill"

        /// SF Symbols's name：carseat.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftFill = "carseat.left.fill"

        /// SF Symbols's name：carseat.left.forward.and.backward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftForwardAndBackward = "carseat.left.forward.and.backward"

        /// SF Symbols's name：carseat.left.forward.and.backward.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftForwardAndBackwardFill = "carseat.left.forward.and.backward.fill"

        /// SF Symbols's name：carseat.left.massage
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftMassage = "carseat.left.massage"

        /// SF Symbols's name：carseat.left.massage.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftMassageFill = "carseat.left.massage.fill"

        /// SF Symbols's name：carseat.left.up.and.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftUpAndDown = "carseat.left.up.and.down"

        /// SF Symbols's name：carseat.left.up.and.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatLeftUpAndDownFill = "carseat.left.up.and.down.fill"

        /// SF Symbols's name：carseat.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight = "carseat.right"

        /// SF Symbols's name：carseat.right.1
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight1 = "carseat.right.1"

        /// SF Symbols's name：carseat.right.1.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight1Fill = "carseat.right.1.fill"

        /// SF Symbols's name：carseat.right.2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight2 = "carseat.right.2"

        /// SF Symbols's name：carseat.right.2.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight2Fill = "carseat.right.2.fill"

        /// SF Symbols's name：carseat.right.3
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight3 = "carseat.right.3"

        /// SF Symbols's name：carseat.right.3.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRight3Fill = "carseat.right.3.fill"

        /// SF Symbols's name：carseat.right.and.heat.waves
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightAndHeatWaves = "carseat.right.and.heat.waves"

        /// SF Symbols's name：carseat.right.and.heat.waves.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightAndHeatWavesFill = "carseat.right.and.heat.waves.fill"

        /// SF Symbols's name：carseat.right.backrest.up.and.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightBackrestUpAndDown = "carseat.right.backrest.up.and.down"

        /// SF Symbols's name：carseat.right.backrest.up.and.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightBackrestUpAndDownFill = "carseat.right.backrest.up.and.down.fill"

        /// SF Symbols's name：carseat.right.fan
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightFan = "carseat.right.fan"

        /// SF Symbols's name：carseat.right.fan.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightFanFill = "carseat.right.fan.fill"

        /// SF Symbols's name：carseat.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightFill = "carseat.right.fill"

        /// SF Symbols's name：carseat.right.forward.and.backward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightForwardAndBackward = "carseat.right.forward.and.backward"

        /// SF Symbols's name：carseat.right.forward.and.backward.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightForwardAndBackwardFill = "carseat.right.forward.and.backward.fill"

        /// SF Symbols's name：carseat.right.massage
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightMassage = "carseat.right.massage"

        /// SF Symbols's name：carseat.right.massage.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightMassageFill = "carseat.right.massage.fill"

        /// SF Symbols's name：carseat.right.up.and.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightUpAndDown = "carseat.right.up.and.down"

        /// SF Symbols's name：carseat.right.up.and.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case carseatRightUpAndDownFill = "carseat.right.up.and.down.fill"

        /// SF Symbols's name：cat
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cat = "cat"

        /// SF Symbols's name：cat.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case catCircle = "cat.circle"

        /// SF Symbols's name：cat.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case catCircleFill = "cat.circle.fill"

        /// SF Symbols's name：cat.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case catFill = "cat.fill"

        /// SF Symbols's name：cedisign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cedisignArrowCirclepath = "cedisign.arrow.circlepath"

        /// SF Symbols's name：centsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case centsignArrowCirclepath = "centsign.arrow.circlepath"

        /// SF Symbols's name：character.magnify
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnify = "character.magnify"

        /// SF Symbols's name：character.magnify.ar
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyAr = "character.magnify.ar"

        /// SF Symbols's name：character.magnify.he
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyHe = "character.magnify.he"

        /// SF Symbols's name：character.magnify.hi
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyHi = "character.magnify.hi"

        /// SF Symbols's name：character.magnify.ja
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyJa = "character.magnify.ja"

        /// SF Symbols's name：character.magnify.ko
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyKo = "character.magnify.ko"

        /// SF Symbols's name：character.magnify.th
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyTh = "character.magnify.th"

        /// SF Symbols's name：character.magnify.zh
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case characterMagnifyZh = "character.magnify.zh"

        /// SF Symbols's name：chart.bar.xaxis.ascending
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chartBarXaxisAscending = "chart.bar.xaxis.ascending"

        /// SF Symbols's name：chart.bar.xaxis.ascending.badge.clock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chartBarXaxisAscendingBadgeClock = "chart.bar.xaxis.ascending.badge.clock"

        /// SF Symbols's name：chart.bar.xaxis.ascending.badge.clock.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chartBarXaxisAscendingBadgeClockRtl = "chart.bar.xaxis.ascending.badge.clock.rtl"

        /// SF Symbols's name：checkmark.applewatch
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case checkmarkApplewatch = "checkmark.applewatch"

        /// SF Symbols's name：checkmark.bubble.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case checkmarkBubbleFillRtl = "checkmark.bubble.fill.rtl"

        /// SF Symbols's name：checkmark.bubble.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case checkmarkBubbleRtl = "checkmark.bubble.rtl"

        /// SF Symbols's name：checkmark.gobackward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case checkmarkGobackward = "checkmark.gobackward"

        /// SF Symbols's name：checkmark.rectangle.stack
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case checkmarkRectangleStack = "checkmark.rectangle.stack"

        /// SF Symbols's name：checkmark.rectangle.stack.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case checkmarkRectangleStackFill = "checkmark.rectangle.stack.fill"

        /// SF Symbols's name：chineseyuanrenminbisign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chineseyuanrenminbisign = "chineseyuanrenminbisign"

        /// SF Symbols's name：chineseyuanrenminbisign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chineseyuanrenminbisignArrowCirclepath = "chineseyuanrenminbisign.arrow.circlepath"

        /// SF Symbols's name：chineseyuanrenminbisign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chineseyuanrenminbisignCircle = "chineseyuanrenminbisign.circle"

        /// SF Symbols's name：chineseyuanrenminbisign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chineseyuanrenminbisignCircleFill = "chineseyuanrenminbisign.circle.fill"

        /// SF Symbols's name：chineseyuanrenminbisign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chineseyuanrenminbisignSquare = "chineseyuanrenminbisign.square"

        /// SF Symbols's name：chineseyuanrenminbisign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case chineseyuanrenminbisignSquareFill = "chineseyuanrenminbisign.square.fill"

        /// SF Symbols's name：circle.badge.checkmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeCheckmark = "circle.badge.checkmark"

        /// SF Symbols's name：circle.badge.checkmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeCheckmarkFill = "circle.badge.checkmark.fill"

        /// SF Symbols's name：circle.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeExclamationmark = "circle.badge.exclamationmark"

        /// SF Symbols's name：circle.badge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeExclamationmarkFill = "circle.badge.exclamationmark.fill"

        /// SF Symbols's name：circle.badge.minus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeMinus = "circle.badge.minus"

        /// SF Symbols's name：circle.badge.minus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeMinusFill = "circle.badge.minus.fill"

        /// SF Symbols's name：circle.badge.plus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgePlus = "circle.badge.plus"

        /// SF Symbols's name：circle.badge.plus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgePlusFill = "circle.badge.plus.fill"

        /// SF Symbols's name：circle.badge.questionmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeQuestionmark = "circle.badge.questionmark"

        /// SF Symbols's name：circle.badge.questionmark.ar
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeQuestionmarkAr = "circle.badge.questionmark.ar"

        /// SF Symbols's name：circle.badge.questionmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeQuestionmarkFill = "circle.badge.questionmark.fill"

        /// SF Symbols's name：circle.badge.questionmark.fill.ar
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeQuestionmarkFillAr = "circle.badge.questionmark.fill.ar"

        /// SF Symbols's name：circle.badge.xmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeXmark = "circle.badge.xmark"

        /// SF Symbols's name：circle.badge.xmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBadgeXmarkFill = "circle.badge.xmark.fill"

        /// SF Symbols's name：circle.bottomhalf.filled.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBottomhalfFilledInverse = "circle.bottomhalf.filled.inverse"

        /// SF Symbols's name：circle.bottomrighthalf.checkered
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleBottomrighthalfCheckered = "circle.bottomrighthalf.checkered"

        /// SF Symbols's name：circle.dotted.and.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleDottedAndCircle = "circle.dotted.and.circle"

        /// SF Symbols's name：circle.dotted.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleDottedCircle = "circle.dotted.circle"

        /// SF Symbols's name：circle.dotted.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleDottedCircleFill = "circle.dotted.circle.fill"

        /// SF Symbols's name：circle.filled.ipad
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleFilledIpad = "circle.filled.ipad"

        /// SF Symbols's name：circle.filled.ipad.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleFilledIpadFill = "circle.filled.ipad.fill"

        /// SF Symbols's name：circle.filled.ipad.landscape
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleFilledIpadLandscape = "circle.filled.ipad.landscape"

        /// SF Symbols's name：circle.filled.ipad.landscape.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleFilledIpadLandscapeFill = "circle.filled.ipad.landscape.fill"

        /// SF Symbols's name：circle.filled.iphone
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleFilledIphone = "circle.filled.iphone"

        /// SF Symbols's name：circle.filled.iphone.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleFilledIphoneFill = "circle.filled.iphone.fill"

        /// SF Symbols's name：circle.lefthalf.filled.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleLefthalfFilledInverse = "circle.lefthalf.filled.inverse"

        /// SF Symbols's name：circle.lefthalf.filled.righthalf.striped.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleLefthalfFilledRighthalfStripedHorizontal = "circle.lefthalf.filled.righthalf.striped.horizontal"

        /// SF Symbols's name：circle.lefthalf.filled.righthalf.striped.horizontal.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleLefthalfFilledRighthalfStripedHorizontalInverse = "circle.lefthalf.filled.righthalf.striped.horizontal.inverse"

        /// SF Symbols's name：circle.lefthalf.striped.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleLefthalfStripedHorizontal = "circle.lefthalf.striped.horizontal"

        /// SF Symbols's name：circle.lefthalf.striped.horizontal.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleLefthalfStripedHorizontalInverse = "circle.lefthalf.striped.horizontal.inverse"

        /// SF Symbols's name：circle.righthalf.filled.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleRighthalfFilledInverse = "circle.righthalf.filled.inverse"

        /// SF Symbols's name：circle.tophalf.filled.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case circleTophalfFilledInverse = "circle.tophalf.filled.inverse"

        /// SF Symbols's name：cloud.rainbow.half
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cloudRainbowHalf = "cloud.rainbow.half"

        /// SF Symbols's name：cloud.rainbow.half.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cloudRainbowHalfFill = "cloud.rainbow.half.fill"

        /// SF Symbols's name：coloncurrencysign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case coloncurrencysignArrowCirclepath = "coloncurrencysign.arrow.circlepath"

        /// SF Symbols's name：creditcard.trianglebadge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case creditcardTrianglebadgeExclamationmarkFill = "creditcard.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：cruzeirosign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cruzeirosignArrowCirclepath = "cruzeirosign.arrow.circlepath"

        /// SF Symbols's name：cursorarrow.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cursorarrowSlash = "cursorarrow.slash"

        /// SF Symbols's name：cursorarrow.slash.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cursorarrowSlashSquare = "cursorarrow.slash.square"

        /// SF Symbols's name：cursorarrow.slash.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case cursorarrowSlashSquareFill = "cursorarrow.slash.square.fill"

        /// SF Symbols's name：danishkronesign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case danishkronesign = "danishkronesign"

        /// SF Symbols's name：danishkronesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case danishkronesignArrowCirclepath = "danishkronesign.arrow.circlepath"

        /// SF Symbols's name：danishkronesign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case danishkronesignCircle = "danishkronesign.circle"

        /// SF Symbols's name：danishkronesign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case danishkronesignCircleFill = "danishkronesign.circle.fill"

        /// SF Symbols's name：danishkronesign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case danishkronesignSquare = "danishkronesign.square"

        /// SF Symbols's name：danishkronesign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case danishkronesignSquareFill = "danishkronesign.square.fill"

        /// SF Symbols's name：dishwasher.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dishwasherCircle = "dishwasher.circle"

        /// SF Symbols's name：dishwasher.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dishwasherCircleFill = "dishwasher.circle.fill"

        /// SF Symbols's name：doc.badge.clock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docBadgeClock = "doc.badge.clock"

        /// SF Symbols's name：doc.badge.clock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docBadgeClockFill = "doc.badge.clock.fill"

        /// SF Symbols's name：doc.questionmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docQuestionmark = "doc.questionmark"

        /// SF Symbols's name：doc.questionmark.ar
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docQuestionmarkAr = "doc.questionmark.ar"

        /// SF Symbols's name：doc.questionmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docQuestionmarkFill = "doc.questionmark.fill"

        /// SF Symbols's name：doc.questionmark.fill.ar
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docQuestionmarkFillAr = "doc.questionmark.fill.ar"

        /// SF Symbols's name：doc.questionmark.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docQuestionmarkFillRtl = "doc.questionmark.fill.rtl"

        /// SF Symbols's name：doc.questionmark.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case docQuestionmarkRtl = "doc.questionmark.rtl"

        /// SF Symbols's name：dog
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dog = "dog"

        /// SF Symbols's name：dog.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dogCircle = "dog.circle"

        /// SF Symbols's name：dog.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dogCircleFill = "dog.circle.fill"

        /// SF Symbols's name：dog.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dogFill = "dog.fill"

        /// SF Symbols's name：dongsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dongsignArrowCirclepath = "dongsign.arrow.circlepath"

        /// SF Symbols's name：dot.scope
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dotScope = "dot.scope"

        /// SF Symbols's name：dot.scope.display
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dotScopeDisplay = "dot.scope.display"

        /// SF Symbols's name：dot.scope.laptopcomputer
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dotScopeLaptopcomputer = "dot.scope.laptopcomputer"

        /// SF Symbols's name：drop.halffull
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dropHalffull = "drop.halffull"

        /// SF Symbols's name：drop.transmission
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dropTransmission = "drop.transmission"

        /// SF Symbols's name：dryer.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dryerCircle = "dryer.circle"

        /// SF Symbols's name：dryer.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case dryerCircleFill = "dryer.circle.fill"

        /// SF Symbols's name：ear.badge.waveform
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case earBadgeWaveform = "ear.badge.waveform"

        /// SF Symbols's name：engine.combustion.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case engineCombustionBadgeExclamationmark = "engine.combustion.badge.exclamationmark"

        /// SF Symbols's name：engine.combustion.badge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case engineCombustionBadgeExclamationmarkFill = "engine.combustion.badge.exclamationmark.fill"

        /// SF Symbols's name：envelope.badge.person.crop
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case envelopeBadgePersonCrop = "envelope.badge.person.crop"

        /// SF Symbols's name：envelope.badge.person.crop.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case envelopeBadgePersonCropFill = "envelope.badge.person.crop.fill"

        /// SF Symbols's name：eurosign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurosignArrowCirclepath = "eurosign.arrow.circlepath"

        /// SF Symbols's name：eurozonesign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurozonesign = "eurozonesign"

        /// SF Symbols's name：eurozonesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurozonesignArrowCirclepath = "eurozonesign.arrow.circlepath"

        /// SF Symbols's name：eurozonesign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurozonesignCircle = "eurozonesign.circle"

        /// SF Symbols's name：eurozonesign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurozonesignCircleFill = "eurozonesign.circle.fill"

        /// SF Symbols's name：eurozonesign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurozonesignSquare = "eurozonesign.square"

        /// SF Symbols's name：eurozonesign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eurozonesignSquareFill = "eurozonesign.square.fill"

        /// SF Symbols's name：ev.charger
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evCharger = "ev.charger"

        /// SF Symbols's name：ev.charger.arrowtriangle.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerArrowtriangleLeft = "ev.charger.arrowtriangle.left"

        /// SF Symbols's name：ev.charger.arrowtriangle.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerArrowtriangleLeftFill = "ev.charger.arrowtriangle.left.fill"

        /// SF Symbols's name：ev.charger.arrowtriangle.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerArrowtriangleRight = "ev.charger.arrowtriangle.right"

        /// SF Symbols's name：ev.charger.arrowtriangle.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerArrowtriangleRightFill = "ev.charger.arrowtriangle.right.fill"

        /// SF Symbols's name：ev.charger.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerExclamationmark = "ev.charger.exclamationmark"

        /// SF Symbols's name：ev.charger.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerExclamationmarkFill = "ev.charger.exclamationmark.fill"

        /// SF Symbols's name：ev.charger.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerFill = "ev.charger.fill"

        /// SF Symbols's name：ev.charger.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerSlash = "ev.charger.slash"

        /// SF Symbols's name：ev.charger.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evChargerSlashFill = "ev.charger.slash.fill"

        /// SF Symbols's name：ev.plug.ac.gb.t
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugAcGbT = "ev.plug.ac.gb.t"

        /// SF Symbols's name：ev.plug.ac.gb.t.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugAcGbTFill = "ev.plug.ac.gb.t.fill"

        /// SF Symbols's name：ev.plug.ac.type.1
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugAcType1 = "ev.plug.ac.type.1"

        /// SF Symbols's name：ev.plug.ac.type.1.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugAcType1Fill = "ev.plug.ac.type.1.fill"

        /// SF Symbols's name：ev.plug.ac.type.2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugAcType2 = "ev.plug.ac.type.2"

        /// SF Symbols's name：ev.plug.ac.type.2.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugAcType2Fill = "ev.plug.ac.type.2.fill"

        /// SF Symbols's name：ev.plug.dc.ccs1
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcCcs1 = "ev.plug.dc.ccs1"

        /// SF Symbols's name：ev.plug.dc.ccs1.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcCcs1Fill = "ev.plug.dc.ccs1.fill"

        /// SF Symbols's name：ev.plug.dc.ccs2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcCcs2 = "ev.plug.dc.ccs2"

        /// SF Symbols's name：ev.plug.dc.ccs2.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcCcs2Fill = "ev.plug.dc.ccs2.fill"

        /// SF Symbols's name：ev.plug.dc.chademo
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcChademo = "ev.plug.dc.chademo"

        /// SF Symbols's name：ev.plug.dc.chademo.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcChademoFill = "ev.plug.dc.chademo.fill"

        /// SF Symbols's name：ev.plug.dc.gb.t
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcGbT = "ev.plug.dc.gb.t"

        /// SF Symbols's name：ev.plug.dc.gb.t.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcGbTFill = "ev.plug.dc.gb.t.fill"

        /// SF Symbols's name：ev.plug.dc.nacs
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcNacs = "ev.plug.dc.nacs"

        /// SF Symbols's name：ev.plug.dc.nacs.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case evPlugDcNacsFill = "ev.plug.dc.nacs.fill"

        /// SF Symbols's name：exclamationmark.magnifyingglass
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case exclamationmarkMagnifyingglass = "exclamationmark.magnifyingglass"

        /// SF Symbols's name：exclamationmark.tirepressure
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case exclamationmarkTirepressure = "exclamationmark.tirepressure"

        /// SF Symbols's name：exclamationmark.warninglight
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case exclamationmarkWarninglight = "exclamationmark.warninglight"

        /// SF Symbols's name：exclamationmark.warninglight.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case exclamationmarkWarninglightFill = "exclamationmark.warninglight.fill"

        /// SF Symbols's name：eyeglasses.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case eyeglassesSlash = "eyeglasses.slash"

        /// SF Symbols's name：fan
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fan = "fan"

        /// SF Symbols's name：fan.badge.automatic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fanBadgeAutomatic = "fan.badge.automatic"

        /// SF Symbols's name：fan.badge.automatic.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fanBadgeAutomaticFill = "fan.badge.automatic.fill"

        /// SF Symbols's name：fan.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fanFill = "fan.fill"

        /// SF Symbols's name：fan.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fanSlash = "fan.slash"

        /// SF Symbols's name：fan.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fanSlashFill = "fan.slash.fill"

        /// SF Symbols's name：field.of.view.ultrawide
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fieldOfViewUltrawide = "field.of.view.ultrawide"

        /// SF Symbols's name：field.of.view.ultrawide.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fieldOfViewUltrawideFill = "field.of.view.ultrawide.fill"

        /// SF Symbols's name：field.of.view.wide
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fieldOfViewWide = "field.of.view.wide"

        /// SF Symbols's name：field.of.view.wide.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fieldOfViewWideFill = "field.of.view.wide.fill"

        /// SF Symbols's name：figure
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figure = "figure"

        /// SF Symbols's name：figure.2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figure2 = "figure.2"

        /// SF Symbols's name：figure.2.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figure2Circle = "figure.2.circle"

        /// SF Symbols's name：figure.2.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figure2CircleFill = "figure.2.circle.fill"

        /// SF Symbols's name：figure.child
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChild = "figure.child"

        /// SF Symbols's name：figure.child.and.lock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChildAndLock = "figure.child.and.lock"

        /// SF Symbols's name：figure.child.and.lock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChildAndLockFill = "figure.child.and.lock.fill"

        /// SF Symbols's name：figure.child.and.lock.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChildAndLockOpen = "figure.child.and.lock.open"

        /// SF Symbols's name：figure.child.and.lock.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChildAndLockOpenFill = "figure.child.and.lock.open.fill"

        /// SF Symbols's name：figure.child.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChildCircle = "figure.child.circle"

        /// SF Symbols's name：figure.child.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureChildCircleFill = "figure.child.circle.fill"

        /// SF Symbols's name：figure.seated.side
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSide = "figure.seated.side"

        /// SF Symbols's name：figure.seated.side.air.distribution.lower
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionLower = "figure.seated.side.air.distribution.lower"

        /// SF Symbols's name：figure.seated.side.air.distribution.middle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionMiddle = "figure.seated.side.air.distribution.middle"

        /// SF Symbols's name：figure.seated.side.air.distribution.middle.and.lower
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionMiddleAndLower = "figure.seated.side.air.distribution.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.air.distribution.middle.and.lower.angled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionMiddleAndLowerAngled = "figure.seated.side.air.distribution.middle.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.air.distribution.upper
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionUpper = "figure.seated.side.air.distribution.upper"

        /// SF Symbols's name：figure.seated.side.air.distribution.upper.angled.and.lower.angled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionUpperAngledAndLowerAngled = "figure.seated.side.air.distribution.upper.angled.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.air.distribution.upper.angled.and.middle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionUpperAngledAndMiddle = "figure.seated.side.air.distribution.upper.angled.and.middle"

        /// SF Symbols's name：figure.seated.side.air.distribution.upper.angled.and.middle.and.lower.angled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAirDistributionUpperAngledAndMiddleAndLowerAngled = "figure.seated.side.air.distribution.upper.angled.and.middle.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.automatic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideAutomatic = "figure.seated.side.automatic"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.lower
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionLower = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.lower"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.middle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionMiddle = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.middle"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.middle.and.lower
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpper = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper.and.lower
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpperAndLower = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper.and.lower"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper.and.middle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper.and.middle"

        /// SF Symbols's name：figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower = "figure.seated.side.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower"

        /// SF Symbols's name：figure.walk.motion.trianglebadge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case figureWalkMotionTrianglebadgeExclamationmark = "figure.walk.motion.trianglebadge.exclamationmark"

        /// SF Symbols's name：fireworks
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fireworks = "fireworks"

        /// SF Symbols's name：flashlight.off.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightOffCircle = "flashlight.off.circle"

        /// SF Symbols's name：flashlight.off.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightOffCircleFill = "flashlight.off.circle.fill"

        /// SF Symbols's name：flashlight.on.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightOnCircle = "flashlight.on.circle"

        /// SF Symbols's name：flashlight.on.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightOnCircleFill = "flashlight.on.circle.fill"

        /// SF Symbols's name：flashlight.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightSlash = "flashlight.slash"

        /// SF Symbols's name：flashlight.slash.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightSlashCircle = "flashlight.slash.circle"

        /// SF Symbols's name：flashlight.slash.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flashlightSlashCircleFill = "flashlight.slash.circle.fill"

        /// SF Symbols's name：flask
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flask = "flask"

        /// SF Symbols's name：flask.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case flaskFill = "flask.fill"

        /// SF Symbols's name：florinsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case florinsignArrowCirclepath = "florinsign.arrow.circlepath"

        /// SF Symbols's name：francsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case francsignArrowCirclepath = "francsign.arrow.circlepath"

        /// SF Symbols's name：fuelpump.arrowtriangle.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpArrowtriangleLeft = "fuelpump.arrowtriangle.left"

        /// SF Symbols's name：fuelpump.arrowtriangle.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpArrowtriangleLeftFill = "fuelpump.arrowtriangle.left.fill"

        /// SF Symbols's name：fuelpump.arrowtriangle.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpArrowtriangleRight = "fuelpump.arrowtriangle.right"

        /// SF Symbols's name：fuelpump.arrowtriangle.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpArrowtriangleRightFill = "fuelpump.arrowtriangle.right.fill"

        /// SF Symbols's name：fuelpump.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpExclamationmark = "fuelpump.exclamationmark"

        /// SF Symbols's name：fuelpump.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpExclamationmarkFill = "fuelpump.exclamationmark.fill"

        /// SF Symbols's name：fuelpump.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpSlash = "fuelpump.slash"

        /// SF Symbols's name：fuelpump.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case fuelpumpSlashFill = "fuelpump.slash.fill"

        /// SF Symbols's name：gauge.open.with.lines.needle.33percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeOpenWithLinesNeedle33percent = "gauge.open.with.lines.needle.33percent"

        /// SF Symbols's name：gauge.open.with.lines.needle.33percent.and.arrowtriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeOpenWithLinesNeedle33percentAndArrowtriangle = "gauge.open.with.lines.needle.33percent.and.arrowtriangle"

        /// SF Symbols's name：gauge.open.with.lines.needle.33percent.and.arrowtriangle.from.0percent.to.50percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeOpenWithLinesNeedle33percentAndArrowtriangleFrom0percentTo50percent = "gauge.open.with.lines.needle.33percent.and.arrowtriangle.from.0percent.to.50percent"

        /// SF Symbols's name：gauge.open.with.lines.needle.67percent.and.arrowtriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeOpenWithLinesNeedle67percentAndArrowtriangle = "gauge.open.with.lines.needle.67percent.and.arrowtriangle"

        /// SF Symbols's name：gauge.open.with.lines.needle.67percent.and.arrowtriangle.and.car
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeOpenWithLinesNeedle67percentAndArrowtriangleAndCar = "gauge.open.with.lines.needle.67percent.and.arrowtriangle.and.car"

        /// SF Symbols's name：gauge.open.with.lines.needle.84percent.exclamation
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeOpenWithLinesNeedle84percentExclamation = "gauge.open.with.lines.needle.84percent.exclamation"

        /// SF Symbols's name：gauge.with.dots.needle.0percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedle0percent = "gauge.with.dots.needle.0percent"

        /// SF Symbols's name：gauge.with.dots.needle.100percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedle100percent = "gauge.with.dots.needle.100percent"

        /// SF Symbols's name：gauge.with.dots.needle.33percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedle33percent = "gauge.with.dots.needle.33percent"

        /// SF Symbols's name：gauge.with.dots.needle.50percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedle50percent = "gauge.with.dots.needle.50percent"

        /// SF Symbols's name：gauge.with.dots.needle.67percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedle67percent = "gauge.with.dots.needle.67percent"

        /// SF Symbols's name：gauge.with.dots.needle.bottom.0percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedleBottom0percent = "gauge.with.dots.needle.bottom.0percent"

        /// SF Symbols's name：gauge.with.dots.needle.bottom.100percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedleBottom100percent = "gauge.with.dots.needle.bottom.100percent"

        /// SF Symbols's name：gauge.with.dots.needle.bottom.50percent
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedleBottom50percent = "gauge.with.dots.needle.bottom.50percent"

        /// SF Symbols's name：gauge.with.dots.needle.bottom.50percent.badge.minus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedleBottom50percentBadgeMinus = "gauge.with.dots.needle.bottom.50percent.badge.minus"

        /// SF Symbols's name：gauge.with.dots.needle.bottom.50percent.badge.plus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithDotsNeedleBottom50percentBadgePlus = "gauge.with.dots.needle.bottom.50percent.badge.plus"

        /// SF Symbols's name：gauge.with.needle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithNeedle = "gauge.with.needle"

        /// SF Symbols's name：gauge.with.needle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gaugeWithNeedleFill = "gauge.with.needle.fill"

        /// SF Symbols's name：gearshift.layout.sixspeed
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gearshiftLayoutSixspeed = "gearshift.layout.sixspeed"

        /// SF Symbols's name：guaranisign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case guaranisignArrowCirclepath = "guaranisign.arrow.circlepath"

        /// SF Symbols's name：gym.bag
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gymBag = "gym.bag"

        /// SF Symbols's name：gym.bag.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case gymBagFill = "gym.bag.fill"

        /// SF Symbols's name：hand.point.up.left.and.text
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case handPointUpLeftAndText = "hand.point.up.left.and.text"

        /// SF Symbols's name：hand.point.up.left.and.text.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case handPointUpLeftAndTextFill = "hand.point.up.left.and.text.fill"

        /// SF Symbols's name：handbag.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case handbagCircle = "handbag.circle"

        /// SF Symbols's name：handbag.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case handbagCircleFill = "handbag.circle.fill"

        /// SF Symbols's name：hands.and.sparkles
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case handsAndSparkles = "hands.and.sparkles"

        /// SF Symbols's name：hands.and.sparkles.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case handsAndSparklesFill = "hands.and.sparkles.fill"

        /// SF Symbols's name：hanger
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hanger = "hanger"

        /// SF Symbols's name：hare.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hareCircle = "hare.circle"

        /// SF Symbols's name：hare.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hareCircleFill = "hare.circle.fill"

        /// SF Symbols's name：head.profile.arrow.forward.and.visionpro
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case headProfileArrowForwardAndVisionpro = "head.profile.arrow.forward.and.visionpro"

        /// SF Symbols's name：heat.waves
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case heatWaves = "heat.waves"

        /// SF Symbols's name：horn
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case horn = "horn"

        /// SF Symbols's name：horn.blast
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hornBlast = "horn.blast"

        /// SF Symbols's name：horn.blast.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hornBlastFill = "horn.blast.fill"

        /// SF Symbols's name：horn.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hornFill = "horn.fill"

        /// SF Symbols's name：hourglass.and.lock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hourglassAndLock = "hourglass.and.lock"

        /// SF Symbols's name：hryvniasign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case hryvniasignArrowCirclepath = "hryvniasign.arrow.circlepath"

        /// SF Symbols's name：indianrupeesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case indianrupeesignArrowCirclepath = "indianrupeesign.arrow.circlepath"

        /// SF Symbols's name：info.bubble.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case infoBubbleFillRtl = "info.bubble.fill.rtl"

        /// SF Symbols's name：info.bubble.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case infoBubbleRtl = "info.bubble.rtl"

        /// SF Symbols's name：ipad.case
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ipadCase = "ipad.case"

        /// SF Symbols's name：ipad.case.and.iphone.case
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ipadCaseAndIphoneCase = "ipad.case.and.iphone.case"

        /// SF Symbols's name：ipad.sizes
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ipadSizes = "ipad.sizes"

        /// SF Symbols's name：iphone.and.arrow.left.and.arrow.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case iphoneAndArrowLeftAndArrowRight = "iphone.and.arrow.left.and.arrow.right"

        /// SF Symbols's name：iphone.case
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case iphoneCase = "iphone.case"

        /// SF Symbols's name：iphone.sizes
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case iphoneSizes = "iphone.sizes"

        /// SF Symbols's name：kashida.arabic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case kashidaArabic = "kashida.arabic"

        /// SF Symbols's name：key.radiowaves.forward.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case keyRadiowavesForwardSlash = "key.radiowaves.forward.slash"

        /// SF Symbols's name：key.radiowaves.forward.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case keyRadiowavesForwardSlashFill = "key.radiowaves.forward.slash.fill"

        /// SF Symbols's name：key.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case keySlash = "key.slash"

        /// SF Symbols's name：key.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case keySlashFill = "key.slash.fill"

        /// SF Symbols's name：kipsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case kipsignArrowCirclepath = "kipsign.arrow.circlepath"

        /// SF Symbols's name：l.button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lButtonRoundedbottomHorizontal = "l.button.roundedbottom.horizontal"

        /// SF Symbols's name：l.button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lButtonRoundedbottomHorizontalFill = "l.button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：l1.button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l1ButtonRoundedbottomHorizontal = "l1.button.roundedbottom.horizontal"

        /// SF Symbols's name：l1.button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l1ButtonRoundedbottomHorizontalFill = "l1.button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：l1.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l1Circle = "l1.circle"

        /// SF Symbols's name：l1.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l1CircleFill = "l1.circle.fill"

        /// SF Symbols's name：l2.button.angledtop.vertical.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l2ButtonAngledtopVerticalLeft = "l2.button.angledtop.vertical.left"

        /// SF Symbols's name：l2.button.angledtop.vertical.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l2ButtonAngledtopVerticalLeftFill = "l2.button.angledtop.vertical.left.fill"

        /// SF Symbols's name：l2.button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l2ButtonRoundedtopHorizontal = "l2.button.roundedtop.horizontal"

        /// SF Symbols's name：l2.button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l2ButtonRoundedtopHorizontalFill = "l2.button.roundedtop.horizontal.fill"

        /// SF Symbols's name：l2.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l2Circle = "l2.circle"

        /// SF Symbols's name：l2.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l2CircleFill = "l2.circle.fill"

        /// SF Symbols's name：l3.button.angledbottom.horizontal.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l3ButtonAngledbottomHorizontalLeft = "l3.button.angledbottom.horizontal.left"

        /// SF Symbols's name：l3.button.angledbottom.horizontal.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l3ButtonAngledbottomHorizontalLeftFill = "l3.button.angledbottom.horizontal.left.fill"

        /// SF Symbols's name：l4.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l4ButtonHorizontal = "l4.button.horizontal"

        /// SF Symbols's name：l4.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case l4ButtonHorizontalFill = "l4.button.horizontal.fill"

        /// SF Symbols's name：ladybug.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ladybugCircle = "ladybug.circle"

        /// SF Symbols's name：ladybug.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ladybugCircleFill = "ladybug.circle.fill"

        /// SF Symbols's name：larisign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case larisignArrowCirclepath = "larisign.arrow.circlepath"

        /// SF Symbols's name：laser.burst
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case laserBurst = "laser.burst"

        /// SF Symbols's name：lasso.badge.sparkles
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lassoBadgeSparkles = "lasso.badge.sparkles"

        /// SF Symbols's name：lb.button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lbButtonRoundedbottomHorizontal = "lb.button.roundedbottom.horizontal"

        /// SF Symbols's name：lb.button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lbButtonRoundedbottomHorizontalFill = "lb.button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：lb.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lbCircle = "lb.circle"

        /// SF Symbols's name：lb.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lbCircleFill = "lb.circle.fill"

        /// SF Symbols's name：left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case left = "left"

        /// SF Symbols's name：left.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case leftCircle = "left.circle"

        /// SF Symbols's name：left.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case leftCircleFill = "left.circle.fill"

        /// SF Symbols's name：licenseplate
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case licenseplate = "licenseplate"

        /// SF Symbols's name：licenseplate.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case licenseplateFill = "licenseplate.fill"

        /// SF Symbols's name：lightbulb.max
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightbulbMax = "lightbulb.max"

        /// SF Symbols's name：lightbulb.max.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightbulbMaxFill = "lightbulb.max.fill"

        /// SF Symbols's name：lightbulb.min
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightbulbMin = "lightbulb.min"

        /// SF Symbols's name：lightbulb.min.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightbulbMinBadgeExclamationmark = "lightbulb.min.badge.exclamationmark"

        /// SF Symbols's name：lightbulb.min.badge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightbulbMinBadgeExclamationmarkFill = "lightbulb.min.badge.exclamationmark.fill"

        /// SF Symbols's name：lightbulb.min.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightbulbMinFill = "lightbulb.min.fill"

        /// SF Symbols's name：lightrail
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightrail = "lightrail"

        /// SF Symbols's name：lightrail.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightrailFill = "lightrail.fill"

        /// SF Symbols's name：lightspectrum.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lightspectrumHorizontal = "lightspectrum.horizontal"

        /// SF Symbols's name：line.3.horizontal.button.angledtop.vertical.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case line3HorizontalButtonAngledtopVerticalRight = "line.3.horizontal.button.angledtop.vertical.right"

        /// SF Symbols's name：line.3.horizontal.button.angledtop.vertical.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case line3HorizontalButtonAngledtopVerticalRightFill = "line.3.horizontal.button.angledtop.vertical.right.fill"

        /// SF Symbols's name：lines.measurement.vertical
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case linesMeasurementVertical = "lines.measurement.vertical"

        /// SF Symbols's name：lirasign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lirasignArrowCirclepath = "lirasign.arrow.circlepath"

        /// SF Symbols's name：livephoto.badge.automatic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case livephotoBadgeAutomatic = "livephoto.badge.automatic"

        /// SF Symbols's name：lizard.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lizardCircle = "lizard.circle"

        /// SF Symbols's name：lizard.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lizardCircleFill = "lizard.circle.fill"

        /// SF Symbols's name：lm.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lmButtonHorizontal = "lm.button.horizontal"

        /// SF Symbols's name：lm.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lmButtonHorizontalFill = "lm.button.horizontal.fill"

        /// SF Symbols's name：lock.app.dashed
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lockAppDashed = "lock.app.dashed"

        /// SF Symbols's name：lock.badge.clock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lockBadgeClock = "lock.badge.clock"

        /// SF Symbols's name：lock.badge.clock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lockBadgeClockFill = "lock.badge.clock.fill"

        /// SF Symbols's name：lock.circle.dotted
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lockCircleDotted = "lock.circle.dotted"

        /// SF Symbols's name：lsb.button.angledbottom.horizontal.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lsbButtonAngledbottomHorizontalLeft = "lsb.button.angledbottom.horizontal.left"

        /// SF Symbols's name：lsb.button.angledbottom.horizontal.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case lsbButtonAngledbottomHorizontalLeftFill = "lsb.button.angledbottom.horizontal.left.fill"

        /// SF Symbols's name：lt.button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ltButtonRoundedtopHorizontal = "lt.button.roundedtop.horizontal"

        /// SF Symbols's name：lt.button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ltButtonRoundedtopHorizontalFill = "lt.button.roundedtop.horizontal.fill"

        /// SF Symbols's name：lt.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ltCircle = "lt.circle"

        /// SF Symbols's name：lt.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case ltCircleFill = "lt.circle.fill"

        /// SF Symbols's name：m1.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m1ButtonHorizontal = "m1.button.horizontal"

        /// SF Symbols's name：m1.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m1ButtonHorizontalFill = "m1.button.horizontal.fill"

        /// SF Symbols's name：m2.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m2ButtonHorizontal = "m2.button.horizontal"

        /// SF Symbols's name：m2.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m2ButtonHorizontalFill = "m2.button.horizontal.fill"

        /// SF Symbols's name：m3.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m3ButtonHorizontal = "m3.button.horizontal"

        /// SF Symbols's name：m3.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m3ButtonHorizontalFill = "m3.button.horizontal.fill"

        /// SF Symbols's name：m4.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m4ButtonHorizontal = "m4.button.horizontal"

        /// SF Symbols's name：m4.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case m4ButtonHorizontalFill = "m4.button.horizontal.fill"

        /// SF Symbols's name：macbook
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case macbook = "macbook"

        /// SF Symbols's name：macbook.and.visionpro
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case macbookAndVisionpro = "macbook.and.visionpro"

        /// SF Symbols's name：macbook.gen1
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case macbookGen1 = "macbook.gen1"

        /// SF Symbols's name：macbook.gen2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case macbookGen2 = "macbook.gen2"

        /// SF Symbols's name：macwindow.and.cursorarrow
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case macwindowAndCursorarrow = "macwindow.and.cursorarrow"

        /// SF Symbols's name：macwindow.and.cursorarrow.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case macwindowAndCursorarrowRtl = "macwindow.and.cursorarrow.rtl"

        /// SF Symbols's name：manatsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case manatsignArrowCirclepath = "manatsign.arrow.circlepath"

        /// SF Symbols's name：mappin.and.ellipse.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case mappinAndEllipseCircle = "mappin.and.ellipse.circle"

        /// SF Symbols's name：mappin.and.ellipse.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case mappinAndEllipseCircleFill = "mappin.and.ellipse.circle.fill"

        /// SF Symbols's name：message.badge.waveform
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case messageBadgeWaveform = "message.badge.waveform"

        /// SF Symbols's name：message.badge.waveform.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case messageBadgeWaveformFill = "message.badge.waveform.fill"

        /// SF Symbols's name：millsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case millsignArrowCirclepath = "millsign.arrow.circlepath"

        /// SF Symbols's name：moon.dust
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonDust = "moon.dust"

        /// SF Symbols's name：moon.dust.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonDustCircle = "moon.dust.circle"

        /// SF Symbols's name：moon.dust.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonDustCircleFill = "moon.dust.circle.fill"

        /// SF Symbols's name：moon.dust.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonDustFill = "moon.dust.fill"

        /// SF Symbols's name：moonrise
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonrise = "moonrise"

        /// SF Symbols's name：moonrise.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonriseCircle = "moonrise.circle"

        /// SF Symbols's name：moonrise.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonriseCircleFill = "moonrise.circle.fill"

        /// SF Symbols's name：moonrise.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonriseFill = "moonrise.fill"

        /// SF Symbols's name：moonset
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonset = "moonset"

        /// SF Symbols's name：moonset.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonsetCircle = "moonset.circle"

        /// SF Symbols's name：moonset.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonsetCircleFill = "moonset.circle.fill"

        /// SF Symbols's name：moonset.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case moonsetFill = "moonset.fill"

        /// SF Symbols's name：movieclapper
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case movieclapper = "movieclapper"

        /// SF Symbols's name：movieclapper.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case movieclapperFill = "movieclapper.fill"

        /// SF Symbols's name：nairasign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case nairasignArrowCirclepath = "nairasign.arrow.circlepath"

        /// SF Symbols's name：network.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case networkSlash = "network.slash"

        /// SF Symbols's name：norwegiankronesign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case norwegiankronesign = "norwegiankronesign"

        /// SF Symbols's name：norwegiankronesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case norwegiankronesignArrowCirclepath = "norwegiankronesign.arrow.circlepath"

        /// SF Symbols's name：norwegiankronesign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case norwegiankronesignCircle = "norwegiankronesign.circle"

        /// SF Symbols's name：norwegiankronesign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case norwegiankronesignCircleFill = "norwegiankronesign.circle.fill"

        /// SF Symbols's name：norwegiankronesign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case norwegiankronesignSquare = "norwegiankronesign.square"

        /// SF Symbols's name：norwegiankronesign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case norwegiankronesignSquareFill = "norwegiankronesign.square.fill"

        /// SF Symbols's name：opticid
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case opticid = "opticid"

        /// SF Symbols's name：opticid.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case opticidFill = "opticid.fill"

        /// SF Symbols's name：p1.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p1ButtonHorizontal = "p1.button.horizontal"

        /// SF Symbols's name：p1.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p1ButtonHorizontalFill = "p1.button.horizontal.fill"

        /// SF Symbols's name：p2.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p2ButtonHorizontal = "p2.button.horizontal"

        /// SF Symbols's name：p2.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p2ButtonHorizontalFill = "p2.button.horizontal.fill"

        /// SF Symbols's name：p3.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p3ButtonHorizontal = "p3.button.horizontal"

        /// SF Symbols's name：p3.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p3ButtonHorizontalFill = "p3.button.horizontal.fill"

        /// SF Symbols's name：p4.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p4ButtonHorizontal = "p4.button.horizontal"

        /// SF Symbols's name：p4.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case p4ButtonHorizontalFill = "p4.button.horizontal.fill"

        /// SF Symbols's name：paddleshifter.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case paddleshifterLeft = "paddleshifter.left"

        /// SF Symbols's name：paddleshifter.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case paddleshifterLeftFill = "paddleshifter.left.fill"

        /// SF Symbols's name：paddleshifter.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case paddleshifterRight = "paddleshifter.right"

        /// SF Symbols's name：paddleshifter.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case paddleshifterRightFill = "paddleshifter.right.fill"

        /// SF Symbols's name：pano.badge.play
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case panoBadgePlay = "pano.badge.play"

        /// SF Symbols's name：pano.badge.play.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case panoBadgePlayFill = "pano.badge.play.fill"

        /// SF Symbols's name：parkingsign.radiowaves.left.and.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case parkingsignRadiowavesLeftAndRight = "parkingsign.radiowaves.left.and.right"

        /// SF Symbols's name：parkingsign.radiowaves.right.and.safetycone
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case parkingsignRadiowavesRightAndSafetycone = "parkingsign.radiowaves.right.and.safetycone"

        /// SF Symbols's name：parkingsign.steeringwheel
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case parkingsignSteeringwheel = "parkingsign.steeringwheel"

        /// SF Symbols's name：pedal.accelerator
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pedalAccelerator = "pedal.accelerator"

        /// SF Symbols's name：pedal.accelerator.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pedalAcceleratorFill = "pedal.accelerator.fill"

        /// SF Symbols's name：pedal.brake
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pedalBrake = "pedal.brake"

        /// SF Symbols's name：pedal.brake.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pedalBrakeFill = "pedal.brake.fill"

        /// SF Symbols's name：pedal.clutch
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pedalClutch = "pedal.clutch"

        /// SF Symbols's name：pedal.clutch.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pedalClutchFill = "pedal.clutch.fill"

        /// SF Symbols's name：pencil.and.list.clipboard
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilAndListClipboard = "pencil.and.list.clipboard"

        /// SF Symbols's name：pencil.and.list.clipboard.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilAndListClipboardRtl = "pencil.and.list.clipboard.rtl"

        /// SF Symbols's name：pencil.and.scribble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilAndScribble = "pencil.and.scribble"

        /// SF Symbols's name：pencil.tip.crop.circle.badge.arrow.forward.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilTipCropCircleBadgeArrowForwardFill = "pencil.tip.crop.circle.badge.arrow.forward.fill"

        /// SF Symbols's name：pencil.tip.crop.circle.badge.minus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilTipCropCircleBadgeMinusFill = "pencil.tip.crop.circle.badge.minus.fill"

        /// SF Symbols's name：pencil.tip.crop.circle.badge.plus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilTipCropCircleBadgePlusFill = "pencil.tip.crop.circle.badge.plus.fill"

        /// SF Symbols's name：pencil.tip.crop.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pencilTipCropCircleFill = "pencil.tip.crop.circle.fill"

        /// SF Symbols's name：person.2.badge.key
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case person2BadgeKey = "person.2.badge.key"

        /// SF Symbols's name：person.2.badge.key.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case person2BadgeKeyFill = "person.2.badge.key.fill"

        /// SF Symbols's name：person.and.background.striped.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personAndBackgroundStripedHorizontal = "person.and.background.striped.horizontal"

        /// SF Symbols's name：person.bubble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personBubble = "person.bubble"

        /// SF Symbols's name：person.bubble.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personBubbleFill = "person.bubble.fill"

        /// SF Symbols's name：person.bust.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personBustCircle = "person.bust.circle"

        /// SF Symbols's name：person.bust.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personBustCircleFill = "person.bust.circle.fill"

        /// SF Symbols's name：person.crop.circle.dashed.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personCropCircleDashedCircle = "person.crop.circle.dashed.circle"

        /// SF Symbols's name：person.crop.circle.dashed.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personCropCircleDashedCircleFill = "person.crop.circle.dashed.circle.fill"

        /// SF Symbols's name：person.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personSlash = "person.slash"

        /// SF Symbols's name：person.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case personSlashFill = "person.slash.fill"

        /// SF Symbols's name：pesetasign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pesetasignArrowCirclepath = "pesetasign.arrow.circlepath"

        /// SF Symbols's name：pesosign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pesosignArrowCirclepath = "pesosign.arrow.circlepath"

        /// SF Symbols's name：phone.badge.waveform
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case phoneBadgeWaveform = "phone.badge.waveform"

        /// SF Symbols's name：phone.badge.waveform.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case phoneBadgeWaveformFill = "phone.badge.waveform.fill"

        /// SF Symbols's name：phone.bubble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case phoneBubble = "phone.bubble"

        /// SF Symbols's name：phone.bubble.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case phoneBubbleFill = "phone.bubble.fill"

        /// SF Symbols's name：phone.bubble.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case phoneBubbleFillRtl = "phone.bubble.fill.rtl"

        /// SF Symbols's name：phone.bubble.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case phoneBubbleRtl = "phone.bubble.rtl"

        /// SF Symbols's name：photo.artframe.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoArtframeCircle = "photo.artframe.circle"

        /// SF Symbols's name：photo.artframe.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoArtframeCircleFill = "photo.artframe.circle.fill"

        /// SF Symbols's name：photo.badge.arrow.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoBadgeArrowDown = "photo.badge.arrow.down"

        /// SF Symbols's name：photo.badge.arrow.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoBadgeArrowDownFill = "photo.badge.arrow.down.fill"

        /// SF Symbols's name：photo.badge.checkmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoBadgeCheckmark = "photo.badge.checkmark"

        /// SF Symbols's name：photo.badge.checkmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoBadgeCheckmarkFill = "photo.badge.checkmark.fill"

        /// SF Symbols's name：photo.badge.plus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoBadgePlus = "photo.badge.plus"

        /// SF Symbols's name：photo.badge.plus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case photoBadgePlusFill = "photo.badge.plus.fill"

        /// SF Symbols's name：play.house
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case playHouse = "play.house"

        /// SF Symbols's name：play.house.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case playHouseFill = "play.house.fill"

        /// SF Symbols's name：point.bottomleft.filled.forward.to.point.topright.scurvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointBottomleftFilledForwardToPointToprightScurvepath = "point.bottomleft.filled.forward.to.point.topright.scurvepath"

        /// SF Symbols's name：point.bottomleft.forward.to.arrowtriangle.uturn.scurvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointBottomleftForwardToArrowtriangleUturnScurvepath = "point.bottomleft.forward.to.arrowtriangle.uturn.scurvepath"

        /// SF Symbols's name：point.bottomleft.forward.to.arrowtriangle.uturn.scurvepath.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointBottomleftForwardToArrowtriangleUturnScurvepathFill = "point.bottomleft.forward.to.arrowtriangle.uturn.scurvepath.fill"

        /// SF Symbols's name：point.bottomleft.forward.to.point.topright.filled.scurvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointBottomleftForwardToPointToprightFilledScurvepath = "point.bottomleft.forward.to.point.topright.filled.scurvepath"

        /// SF Symbols's name：point.bottomleft.forward.to.point.topright.scurvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointBottomleftForwardToPointToprightScurvepath = "point.bottomleft.forward.to.point.topright.scurvepath"

        /// SF Symbols's name：point.bottomleft.forward.to.point.topright.scurvepath.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointBottomleftForwardToPointToprightScurvepathFill = "point.bottomleft.forward.to.point.topright.scurvepath.fill"

        /// SF Symbols's name：point.forward.to.point.capsulepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointForwardToPointCapsulepath = "point.forward.to.point.capsulepath"

        /// SF Symbols's name：point.forward.to.point.capsulepath.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointForwardToPointCapsulepathFill = "point.forward.to.point.capsulepath.fill"

        /// SF Symbols's name：point.topleft.down.to.point.bottomright.curvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointTopleftDownToPointBottomrightCurvepath = "point.topleft.down.to.point.bottomright.curvepath"

        /// SF Symbols's name：point.topleft.down.to.point.bottomright.curvepath.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointTopleftDownToPointBottomrightCurvepathFill = "point.topleft.down.to.point.bottomright.curvepath.fill"

        /// SF Symbols's name：point.topleft.down.to.point.bottomright.filled.curvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointTopleftDownToPointBottomrightFilledCurvepath = "point.topleft.down.to.point.bottomright.filled.curvepath"

        /// SF Symbols's name：point.topleft.filled.down.to.point.bottomright.curvepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case pointTopleftFilledDownToPointBottomrightCurvepath = "point.topleft.filled.down.to.point.bottomright.curvepath"

        /// SF Symbols's name：polishzlotysign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case polishzlotysign = "polishzlotysign"

        /// SF Symbols's name：polishzlotysign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case polishzlotysignArrowCirclepath = "polishzlotysign.arrow.circlepath"

        /// SF Symbols's name：polishzlotysign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case polishzlotysignCircle = "polishzlotysign.circle"

        /// SF Symbols's name：polishzlotysign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case polishzlotysignCircleFill = "polishzlotysign.circle.fill"

        /// SF Symbols's name：polishzlotysign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case polishzlotysignSquare = "polishzlotysign.square"

        /// SF Symbols's name：polishzlotysign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case polishzlotysignSquareFill = "polishzlotysign.square.fill"

        /// SF Symbols's name：powercord
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case powercord = "powercord"

        /// SF Symbols's name：powercord.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case powercordFill = "powercord.fill"

        /// SF Symbols's name：r.button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rButtonRoundedbottomHorizontal = "r.button.roundedbottom.horizontal"

        /// SF Symbols's name：r.button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rButtonRoundedbottomHorizontalFill = "r.button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：r1.button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r1ButtonRoundedbottomHorizontal = "r1.button.roundedbottom.horizontal"

        /// SF Symbols's name：r1.button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r1ButtonRoundedbottomHorizontalFill = "r1.button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：r1.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r1Circle = "r1.circle"

        /// SF Symbols's name：r1.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r1CircleFill = "r1.circle.fill"

        /// SF Symbols's name：r2.button.angledtop.vertical.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r2ButtonAngledtopVerticalRight = "r2.button.angledtop.vertical.right"

        /// SF Symbols's name：r2.button.angledtop.vertical.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r2ButtonAngledtopVerticalRightFill = "r2.button.angledtop.vertical.right.fill"

        /// SF Symbols's name：r2.button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r2ButtonRoundedtopHorizontal = "r2.button.roundedtop.horizontal"

        /// SF Symbols's name：r2.button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r2ButtonRoundedtopHorizontalFill = "r2.button.roundedtop.horizontal.fill"

        /// SF Symbols's name：r2.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r2Circle = "r2.circle"

        /// SF Symbols's name：r2.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r2CircleFill = "r2.circle.fill"

        /// SF Symbols's name：r3.button.angledbottom.horizontal.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r3ButtonAngledbottomHorizontalRight = "r3.button.angledbottom.horizontal.right"

        /// SF Symbols's name：r3.button.angledbottom.horizontal.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r3ButtonAngledbottomHorizontalRightFill = "r3.button.angledbottom.horizontal.right.fill"

        /// SF Symbols's name：r4.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r4ButtonHorizontal = "r4.button.horizontal"

        /// SF Symbols's name：r4.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case r4ButtonHorizontalFill = "r4.button.horizontal.fill"

        /// SF Symbols's name：rainbow
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rainbow = "rainbow"

        /// SF Symbols's name：rb.button.roundedbottom.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rbButtonRoundedbottomHorizontal = "rb.button.roundedbottom.horizontal"

        /// SF Symbols's name：rb.button.roundedbottom.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rbButtonRoundedbottomHorizontalFill = "rb.button.roundedbottom.horizontal.fill"

        /// SF Symbols's name：rb.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rbCircle = "rb.circle"

        /// SF Symbols's name：rb.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rbCircleFill = "rb.circle.fill"

        /// SF Symbols's name：rectangle.3.group.bubble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangle3GroupBubble = "rectangle.3.group.bubble"

        /// SF Symbols's name：rectangle.3.group.bubble.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangle3GroupBubbleFill = "rectangle.3.group.bubble.fill"

        /// SF Symbols's name：rectangle.checkered
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleCheckered = "rectangle.checkered"

        /// SF Symbols's name：rectangle.inset.filled.and.cursorarrow
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleInsetFilledAndCursorarrow = "rectangle.inset.filled.and.cursorarrow"

        /// SF Symbols's name：rectangle.inset.filled.badge.record
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleInsetFilledBadgeRecord = "rectangle.inset.filled.badge.record"

        /// SF Symbols's name：rectangle.landscape.rotate
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleLandscapeRotate = "rectangle.landscape.rotate"

        /// SF Symbols's name：rectangle.on.rectangle.badge.gearshape
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleOnRectangleBadgeGearshape = "rectangle.on.rectangle.badge.gearshape"

        /// SF Symbols's name：rectangle.on.rectangle.button.angledtop.vertical.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleOnRectangleButtonAngledtopVerticalLeft = "rectangle.on.rectangle.button.angledtop.vertical.left"

        /// SF Symbols's name：rectangle.on.rectangle.button.angledtop.vertical.left.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleOnRectangleButtonAngledtopVerticalLeftFill = "rectangle.on.rectangle.button.angledtop.vertical.left.fill"

        /// SF Symbols's name：rectangle.portrait.badge.plus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectanglePortraitBadgePlus = "rectangle.portrait.badge.plus"

        /// SF Symbols's name：rectangle.portrait.badge.plus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectanglePortraitBadgePlusFill = "rectangle.portrait.badge.plus.fill"

        /// SF Symbols's name：rectangle.portrait.rotate
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectanglePortraitRotate = "rectangle.portrait.rotate"

        /// SF Symbols's name：rectangle.ratio.16.to.9
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio16To9 = "rectangle.ratio.16.to.9"

        /// SF Symbols's name：rectangle.ratio.16.to.9.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio16To9Fill = "rectangle.ratio.16.to.9.fill"

        /// SF Symbols's name：rectangle.ratio.3.to.4
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio3To4 = "rectangle.ratio.3.to.4"

        /// SF Symbols's name：rectangle.ratio.3.to.4.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio3To4Fill = "rectangle.ratio.3.to.4.fill"

        /// SF Symbols's name：rectangle.ratio.4.to.3
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio4To3 = "rectangle.ratio.4.to.3"

        /// SF Symbols's name：rectangle.ratio.4.to.3.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio4To3Fill = "rectangle.ratio.4.to.3.fill"

        /// SF Symbols's name：rectangle.ratio.9.to.16
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio9To16 = "rectangle.ratio.9.to.16"

        /// SF Symbols's name：rectangle.ratio.9.to.16.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rectangleRatio9To16Fill = "rectangle.ratio.9.to.16.fill"

        /// SF Symbols's name：retarder.brakesignal.and.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case retarderBrakesignalAndExclamationmark = "retarder.brakesignal.and.exclamationmark"

        /// SF Symbols's name：retarder.brakesignal.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case retarderBrakesignalSlash = "retarder.brakesignal.slash"

        /// SF Symbols's name：right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case right = "right"

        /// SF Symbols's name：right.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rightCircle = "right.circle"

        /// SF Symbols's name：right.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rightCircleFill = "right.circle.fill"

        /// SF Symbols's name：righttriangle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case righttriangle = "righttriangle"

        /// SF Symbols's name：righttriangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case righttriangleFill = "righttriangle.fill"

        /// SF Symbols's name：righttriangle.split.diagonal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case righttriangleSplitDiagonal = "righttriangle.split.diagonal"

        /// SF Symbols's name：righttriangle.split.diagonal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case righttriangleSplitDiagonalFill = "righttriangle.split.diagonal.fill"

        /// SF Symbols's name：rm.button.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rmButtonHorizontal = "rm.button.horizontal"

        /// SF Symbols's name：rm.button.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rmButtonHorizontalFill = "rm.button.horizontal.fill"

        /// SF Symbols's name：rotate.3d.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rotate3dCircle = "rotate.3d.circle"

        /// SF Symbols's name：rotate.3d.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rotate3dCircleFill = "rotate.3d.circle.fill"

        /// SF Symbols's name：rotate.3d.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rotate3dFill = "rotate.3d.fill"

        /// SF Symbols's name：rsb.button.angledbottom.horizontal.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rsbButtonAngledbottomHorizontalRight = "rsb.button.angledbottom.horizontal.right"

        /// SF Symbols's name：rsb.button.angledbottom.horizontal.right.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rsbButtonAngledbottomHorizontalRightFill = "rsb.button.angledbottom.horizontal.right.fill"

        /// SF Symbols's name：rt.button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rtButtonRoundedtopHorizontal = "rt.button.roundedtop.horizontal"

        /// SF Symbols's name：rt.button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rtButtonRoundedtopHorizontalFill = "rt.button.roundedtop.horizontal.fill"

        /// SF Symbols's name：rt.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rtCircle = "rt.circle"

        /// SF Symbols's name：rt.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rtCircleFill = "rt.circle.fill"

        /// SF Symbols's name：rublesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rublesignArrowCirclepath = "rublesign.arrow.circlepath"

        /// SF Symbols's name：rupeesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case rupeesignArrowCirclepath = "rupeesign.arrow.circlepath"

        /// SF Symbols's name：shared.with.you.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sharedWithYouCircle = "shared.with.you.circle"

        /// SF Symbols's name：shared.with.you.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sharedWithYouCircleFill = "shared.with.you.circle.fill"

        /// SF Symbols's name：shekelsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shekelsignArrowCirclepath = "shekelsign.arrow.circlepath"

        /// SF Symbols's name：shield.checkered
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shieldCheckered = "shield.checkered"

        /// SF Symbols's name：shield.lefthalf.filled.badge.checkmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shieldLefthalfFilledBadgeCheckmark = "shield.lefthalf.filled.badge.checkmark"

        /// SF Symbols's name：shield.lefthalf.filled.trianglebadge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shieldLefthalfFilledTrianglebadgeExclamationmark = "shield.lefthalf.filled.trianglebadge.exclamationmark"

        /// SF Symbols's name：shoe
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shoe = "shoe"

        /// SF Symbols's name：shoe.2
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shoe2 = "shoe.2"

        /// SF Symbols's name：shoe.2.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shoe2Fill = "shoe.2.fill"

        /// SF Symbols's name：shoe.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shoeCircle = "shoe.circle"

        /// SF Symbols's name：shoe.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shoeCircleFill = "shoe.circle.fill"

        /// SF Symbols's name：shoe.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case shoeFill = "shoe.fill"

        /// SF Symbols's name：skateboard
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case skateboard = "skateboard"

        /// SF Symbols's name：skateboard.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case skateboardFill = "skateboard.fill"

        /// SF Symbols's name：skis
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case skis = "skis"

        /// SF Symbols's name：skis.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case skisFill = "skis.fill"

        /// SF Symbols's name：slider.horizontal.2.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sliderHorizontal2Square = "slider.horizontal.2.square"

        /// SF Symbols's name：slider.horizontal.below.sun.max
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sliderHorizontalBelowSunMax = "slider.horizontal.below.sun.max"

        /// SF Symbols's name：smartphone
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case smartphone = "smartphone"

        /// SF Symbols's name：snowboard
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case snowboard = "snowboard"

        /// SF Symbols's name：snowboard.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case snowboardFill = "snowboard.fill"

        /// SF Symbols's name：speaker.wave.2.bubble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case speakerWave2Bubble = "speaker.wave.2.bubble"

        /// SF Symbols's name：speaker.wave.2.bubble.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case speakerWave2BubbleFill = "speaker.wave.2.bubble.fill"

        /// SF Symbols's name：speaker.wave.2.bubble.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case speakerWave2BubbleFillRtl = "speaker.wave.2.bubble.fill.rtl"

        /// SF Symbols's name：speaker.wave.2.bubble.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case speakerWave2BubbleRtl = "speaker.wave.2.bubble.rtl"

        /// SF Symbols's name：square.2.layers.3d.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case square2Layers3dFill = "square.2.layers.3d.fill"

        /// SF Symbols's name：square.arrowtriangle.4.outward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareArrowtriangle4Outward = "square.arrowtriangle.4.outward"

        /// SF Symbols's name：square.badge.plus
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareBadgePlus = "square.badge.plus"

        /// SF Symbols's name：square.badge.plus.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareBadgePlusFill = "square.badge.plus.fill"

        /// SF Symbols's name：square.resize
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareResize = "square.resize"

        /// SF Symbols's name：square.resize.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareResizeDown = "square.resize.down"

        /// SF Symbols's name：square.resize.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareResizeUp = "square.resize.up"

        /// SF Symbols's name：square.stack.3d.up.badge.automatic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareStack3dUpBadgeAutomatic = "square.stack.3d.up.badge.automatic"

        /// SF Symbols's name：square.stack.3d.up.badge.automatic.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareStack3dUpBadgeAutomaticFill = "square.stack.3d.up.badge.automatic.fill"

        /// SF Symbols's name：square.stack.3d.up.trianglebadge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareStack3dUpTrianglebadgeExclamationmark = "square.stack.3d.up.trianglebadge.exclamationmark"

        /// SF Symbols's name：square.stack.3d.up.trianglebadge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareStack3dUpTrianglebadgeExclamationmarkFill = "square.stack.3d.up.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：squares.leading.rectangle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squaresLeadingRectangleFill = "squares.leading.rectangle.fill"

        /// SF Symbols's name：squareshape.dotted.squareshape
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareshapeDottedSquareshape = "squareshape.dotted.squareshape"

        /// SF Symbols's name：squareshape.squareshape.dotted
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case squareshapeSquareshapeDotted = "squareshape.squareshape.dotted"

        /// SF Symbols's name：staroflife.shield
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case staroflifeShield = "staroflife.shield"

        /// SF Symbols's name：staroflife.shield.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case staroflifeShieldFill = "staroflife.shield.fill"

        /// SF Symbols's name：steeringwheel.and.liquid.wave
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case steeringwheelAndLiquidWave = "steeringwheel.and.liquid.wave"

        /// SF Symbols's name：steeringwheel.arrowtriangle.left
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case steeringwheelArrowtriangleLeft = "steeringwheel.arrowtriangle.left"

        /// SF Symbols's name：steeringwheel.arrowtriangle.right
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case steeringwheelArrowtriangleRight = "steeringwheel.arrowtriangle.right"

        /// SF Symbols's name：steeringwheel.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case steeringwheelBadgeExclamationmark = "steeringwheel.badge.exclamationmark"

        /// SF Symbols's name：steeringwheel.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case steeringwheelCircle = "steeringwheel.circle"

        /// SF Symbols's name：steeringwheel.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case steeringwheelCircleFill = "steeringwheel.circle.fill"

        /// SF Symbols's name：sterlingsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sterlingsignArrowCirclepath = "sterlingsign.arrow.circlepath"

        /// SF Symbols's name：storefront
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case storefront = "storefront"

        /// SF Symbols's name：storefront.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case storefrontCircle = "storefront.circle"

        /// SF Symbols's name：storefront.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case storefrontCircleFill = "storefront.circle.fill"

        /// SF Symbols's name：storefront.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case storefrontFill = "storefront.fill"

        /// SF Symbols's name：sun.horizon
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunHorizon = "sun.horizon"

        /// SF Symbols's name：sun.horizon.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunHorizonCircle = "sun.horizon.circle"

        /// SF Symbols's name：sun.horizon.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunHorizonCircleFill = "sun.horizon.circle.fill"

        /// SF Symbols's name：sun.horizon.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunHorizonFill = "sun.horizon.fill"

        /// SF Symbols's name：sun.rain
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunRain = "sun.rain"

        /// SF Symbols's name：sun.rain.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunRainCircle = "sun.rain.circle"

        /// SF Symbols's name：sun.rain.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunRainCircleFill = "sun.rain.circle.fill"

        /// SF Symbols's name：sun.rain.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunRainFill = "sun.rain.fill"

        /// SF Symbols's name：sun.snow
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunSnow = "sun.snow"

        /// SF Symbols's name：sun.snow.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunSnowCircle = "sun.snow.circle"

        /// SF Symbols's name：sun.snow.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunSnowCircleFill = "sun.snow.circle.fill"

        /// SF Symbols's name：sun.snow.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunSnowFill = "sun.snow.fill"

        /// SF Symbols's name：sunglasses
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunglasses = "sunglasses"

        /// SF Symbols's name：sunglasses.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case sunglassesFill = "sunglasses.fill"

        /// SF Symbols's name：surfboard
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case surfboard = "surfboard"

        /// SF Symbols's name：surfboard.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case surfboardFill = "surfboard.fill"

        /// SF Symbols's name：suv.side.hill.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideHillDown = "suv.side.hill.down"

        /// SF Symbols's name：suv.side.hill.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideHillDownFill = "suv.side.hill.down.fill"

        /// SF Symbols's name：suv.side.hill.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideHillUp = "suv.side.hill.up"

        /// SF Symbols's name：suv.side.hill.up.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideHillUpFill = "suv.side.hill.up.fill"

        /// SF Symbols's name：suv.side.lock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideLock = "suv.side.lock"

        /// SF Symbols's name：suv.side.lock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideLockFill = "suv.side.lock.fill"

        /// SF Symbols's name：suv.side.lock.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideLockOpen = "suv.side.lock.open"

        /// SF Symbols's name：suv.side.lock.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case suvSideLockOpenFill = "suv.side.lock.open.fill"

        /// SF Symbols's name：swedishkronasign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swedishkronasign = "swedishkronasign"

        /// SF Symbols's name：swedishkronasign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swedishkronasignArrowCirclepath = "swedishkronasign.arrow.circlepath"

        /// SF Symbols's name：swedishkronasign.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swedishkronasignCircle = "swedishkronasign.circle"

        /// SF Symbols's name：swedishkronasign.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swedishkronasignCircleFill = "swedishkronasign.circle.fill"

        /// SF Symbols's name：swedishkronasign.square
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swedishkronasignSquare = "swedishkronasign.square"

        /// SF Symbols's name：swedishkronasign.square.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swedishkronasignSquareFill = "swedishkronasign.square.fill"

        /// SF Symbols's name：swiftdata
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swiftdata = "swiftdata"

        /// SF Symbols's name：swirl.circle.righthalf.filled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swirlCircleRighthalfFilled = "swirl.circle.righthalf.filled"

        /// SF Symbols's name：swirl.circle.righthalf.filled.inverse
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case swirlCircleRighthalfFilledInverse = "swirl.circle.righthalf.filled.inverse"

        /// SF Symbols's name：tengesign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tengesignArrowCirclepath = "tengesign.arrow.circlepath"

        /// SF Symbols's name：textformat.12.km
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case textformat12Km = "textformat.12.km"

        /// SF Symbols's name：textformat.12.my
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case textformat12My = "textformat.12.my"

        /// SF Symbols's name：thermometer.variable.and.figure
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case thermometerVariableAndFigure = "thermometer.variable.and.figure"

        /// SF Symbols's name：thermometer.variable.and.figure.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case thermometerVariableAndFigureCircle = "thermometer.variable.and.figure.circle"

        /// SF Symbols's name：thermometer.variable.and.figure.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case thermometerVariableAndFigureCircleFill = "thermometer.variable.and.figure.circle.fill"

        /// SF Symbols's name：tirepressure
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tirepressure = "tirepressure"

        /// SF Symbols's name：tortoise.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tortoiseCircle = "tortoise.circle"

        /// SF Symbols's name：tortoise.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tortoiseCircleFill = "tortoise.circle.fill"

        /// SF Symbols's name：traction.control.tirepressure
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tractionControlTirepressure = "traction.control.tirepressure"

        /// SF Symbols's name：traction.control.tirepressure.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tractionControlTirepressureExclamationmark = "traction.control.tirepressure.exclamationmark"

        /// SF Symbols's name：traction.control.tirepressure.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tractionControlTirepressureSlash = "traction.control.tirepressure.slash"

        /// SF Symbols's name：triangleshape
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case triangleshape = "triangleshape"

        /// SF Symbols's name：triangleshape.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case triangleshapeFill = "triangleshape.fill"

        /// SF Symbols's name：truck.box
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckBox = "truck.box"

        /// SF Symbols's name：truck.box.badge.clock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckBoxBadgeClock = "truck.box.badge.clock"

        /// SF Symbols's name：truck.box.badge.clock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckBoxBadgeClockFill = "truck.box.badge.clock.fill"

        /// SF Symbols's name：truck.box.badge.clock.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckBoxBadgeClockFillRtl = "truck.box.badge.clock.fill.rtl"

        /// SF Symbols's name：truck.box.badge.clock.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckBoxBadgeClockRtl = "truck.box.badge.clock.rtl"

        /// SF Symbols's name：truck.box.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckBoxFill = "truck.box.fill"

        /// SF Symbols's name：truck.pickup.side
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSide = "truck.pickup.side"

        /// SF Symbols's name：truck.pickup.side.air.circulate
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideAirCirculate = "truck.pickup.side.air.circulate"

        /// SF Symbols's name：truck.pickup.side.air.circulate.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideAirCirculateFill = "truck.pickup.side.air.circulate.fill"

        /// SF Symbols's name：truck.pickup.side.air.fresh
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideAirFresh = "truck.pickup.side.air.fresh"

        /// SF Symbols's name：truck.pickup.side.air.fresh.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideAirFreshFill = "truck.pickup.side.air.fresh.fill"

        /// SF Symbols's name：truck.pickup.side.and.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideAndExclamationmark = "truck.pickup.side.and.exclamationmark"

        /// SF Symbols's name：truck.pickup.side.and.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideAndExclamationmarkFill = "truck.pickup.side.and.exclamationmark.fill"

        /// SF Symbols's name：truck.pickup.side.arrowtriangle.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideArrowtriangleDown = "truck.pickup.side.arrowtriangle.down"

        /// SF Symbols's name：truck.pickup.side.arrowtriangle.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideArrowtriangleDownFill = "truck.pickup.side.arrowtriangle.down.fill"

        /// SF Symbols's name：truck.pickup.side.arrowtriangle.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideArrowtriangleUp = "truck.pickup.side.arrowtriangle.up"

        /// SF Symbols's name：truck.pickup.side.arrowtriangle.up.arrowtriangle.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideArrowtriangleUpArrowtriangleDown = "truck.pickup.side.arrowtriangle.up.arrowtriangle.down"

        /// SF Symbols's name：truck.pickup.side.arrowtriangle.up.arrowtriangle.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideArrowtriangleUpArrowtriangleDownFill = "truck.pickup.side.arrowtriangle.up.arrowtriangle.down.fill"

        /// SF Symbols's name：truck.pickup.side.arrowtriangle.up.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideArrowtriangleUpFill = "truck.pickup.side.arrowtriangle.up.fill"

        /// SF Symbols's name：truck.pickup.side.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideFill = "truck.pickup.side.fill"

        /// SF Symbols's name：truck.pickup.side.front.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideFrontOpen = "truck.pickup.side.front.open"

        /// SF Symbols's name：truck.pickup.side.front.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideFrontOpenFill = "truck.pickup.side.front.open.fill"

        /// SF Symbols's name：truck.pickup.side.hill.down
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideHillDown = "truck.pickup.side.hill.down"

        /// SF Symbols's name：truck.pickup.side.hill.down.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideHillDownFill = "truck.pickup.side.hill.down.fill"

        /// SF Symbols's name：truck.pickup.side.hill.up
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideHillUp = "truck.pickup.side.hill.up"

        /// SF Symbols's name：truck.pickup.side.hill.up.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideHillUpFill = "truck.pickup.side.hill.up.fill"

        /// SF Symbols's name：truck.pickup.side.lock
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideLock = "truck.pickup.side.lock"

        /// SF Symbols's name：truck.pickup.side.lock.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideLockFill = "truck.pickup.side.lock.fill"

        /// SF Symbols's name：truck.pickup.side.lock.open
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideLockOpen = "truck.pickup.side.lock.open"

        /// SF Symbols's name：truck.pickup.side.lock.open.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case truckPickupSideLockOpenFill = "truck.pickup.side.lock.open.fill"

        /// SF Symbols's name：tshirt.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tshirtCircle = "tshirt.circle"

        /// SF Symbols's name：tshirt.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tshirtCircleFill = "tshirt.circle.fill"

        /// SF Symbols's name：tugriksign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tugriksignArrowCirclepath = "tugriksign.arrow.circlepath"

        /// SF Symbols's name：turkishlirasign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case turkishlirasignArrowCirclepath = "turkishlirasign.arrow.circlepath"

        /// SF Symbols's name：tv.badge.wifi
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tvBadgeWifi = "tv.badge.wifi"

        /// SF Symbols's name：tv.badge.wifi.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tvBadgeWifiFill = "tv.badge.wifi.fill"

        /// SF Symbols's name：tv.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tvSlash = "tv.slash"

        /// SF Symbols's name：tv.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case tvSlashFill = "tv.slash.fill"

        /// SF Symbols's name：video.badge.waveform
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoBadgeWaveform = "video.badge.waveform"

        /// SF Symbols's name：video.badge.waveform.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoBadgeWaveformFill = "video.badge.waveform.fill"

        /// SF Symbols's name：video.bubble
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoBubble = "video.bubble"

        /// SF Symbols's name：video.bubble.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoBubbleFill = "video.bubble.fill"

        /// SF Symbols's name：video.bubble.fill.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoBubbleFillRtl = "video.bubble.fill.rtl"

        /// SF Symbols's name：video.bubble.rtl
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoBubbleRtl = "video.bubble.rtl"

        /// SF Symbols's name：video.slash.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoSlashCircle = "video.slash.circle"

        /// SF Symbols's name：video.slash.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case videoSlashCircleFill = "video.slash.circle.fill"

        /// SF Symbols's name：viewfinder.rectangular
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case viewfinderRectangular = "viewfinder.rectangular"

        /// SF Symbols's name：viewfinder.trianglebadge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case viewfinderTrianglebadgeExclamationmark = "viewfinder.trianglebadge.exclamationmark"

        /// SF Symbols's name：visionpro
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionpro = "visionpro"

        /// SF Symbols's name：visionpro.and.arrow.forward
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproAndArrowForward = "visionpro.and.arrow.forward"

        /// SF Symbols's name：visionpro.and.arrow.forward.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproAndArrowForwardFill = "visionpro.and.arrow.forward.fill"

        /// SF Symbols's name：visionpro.badge.exclamationmark
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproBadgeExclamationmark = "visionpro.badge.exclamationmark"

        /// SF Symbols's name：visionpro.badge.exclamationmark.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproBadgeExclamationmarkFill = "visionpro.badge.exclamationmark.fill"

        /// SF Symbols's name：visionpro.badge.play
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproBadgePlay = "visionpro.badge.play"

        /// SF Symbols's name：visionpro.badge.play.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproBadgePlayFill = "visionpro.badge.play.fill"

        /// SF Symbols's name：visionpro.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproCircle = "visionpro.circle"

        /// SF Symbols's name：visionpro.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproCircleFill = "visionpro.circle.fill"

        /// SF Symbols's name：visionpro.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproFill = "visionpro.fill"

        /// SF Symbols's name：visionpro.slash
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproSlash = "visionpro.slash"

        /// SF Symbols's name：visionpro.slash.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproSlashCircle = "visionpro.slash.circle"

        /// SF Symbols's name：visionpro.slash.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproSlashCircleFill = "visionpro.slash.circle.fill"

        /// SF Symbols's name：visionpro.slash.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case visionproSlashFill = "visionpro.slash.fill"

        /// SF Symbols's name：voiceover
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case voiceover = "voiceover"

        /// SF Symbols's name：warninglight
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case warninglight = "warninglight"

        /// SF Symbols's name：warninglight.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case warninglightFill = "warninglight.fill"

        /// SF Symbols's name：washer.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case washerCircle = "washer.circle"

        /// SF Symbols's name：washer.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case washerCircleFill = "washer.circle.fill"

        /// SF Symbols's name：watch.analog
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case watchAnalog = "watch.analog"

        /// SF Symbols's name：waterbottle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case waterbottle = "waterbottle"

        /// SF Symbols's name：waterbottle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case waterbottleFill = "waterbottle.fill"

        /// SF Symbols's name：waveform.and.person.filled
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case waveformAndPersonFilled = "waveform.and.person.filled"

        /// SF Symbols's name：waveform.badge.magnifyingglass
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case waveformBadgeMagnifyingglass = "waveform.badge.magnifyingglass"

        /// SF Symbols's name：waveform.badge.mic
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case waveformBadgeMic = "waveform.badge.mic"

        /// SF Symbols's name：wifi.exclamationmark.circle
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case wifiExclamationmarkCircle = "wifi.exclamationmark.circle"

        /// SF Symbols's name：wifi.exclamationmark.circle.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case wifiExclamationmarkCircleFill = "wifi.exclamationmark.circle.fill"

        /// SF Symbols's name：wonsign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case wonsignArrowCirclepath = "wonsign.arrow.circlepath"

        /// SF Symbols's name：xserve.raid
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case xserveRaid = "xserve.raid"

        /// SF Symbols's name：yensign.arrow.circlepath
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case yensignArrowCirclepath = "yensign.arrow.circlepath"

        /// SF Symbols's name：yieldsign
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case yieldsign = "yieldsign"

        /// SF Symbols's name：yieldsign.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case yieldsignFill = "yieldsign.fill"

        /// SF Symbols's name：zl.button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case zlButtonRoundedtopHorizontal = "zl.button.roundedtop.horizontal"

        /// SF Symbols's name：zl.button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case zlButtonRoundedtopHorizontalFill = "zl.button.roundedtop.horizontal.fill"

        /// SF Symbols's name：zr.button.roundedtop.horizontal
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case zrButtonRoundedtopHorizontal = "zr.button.roundedtop.horizontal"

        /// SF Symbols's name：zr.button.roundedtop.horizontal.fill
        @available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *)
        case zrButtonRoundedtopHorizontalFill = "zr.button.roundedtop.horizontal.fill"

        /// SF Symbols's name：chevron.compact.backward
        @available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *)
        case chevronCompactBackward = "chevron.compact.backward"

        /// SF Symbols's name：chevron.compact.forward
        @available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *)
        case chevronCompactForward = "chevron.compact.forward"

        /// SF Symbols's name：person.crop.square.badge.camera
        @available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *)
        case personCropSquareBadgeCamera = "person.crop.square.badge.camera"

        /// SF Symbols's name：person.crop.square.badge.camera.fill
        @available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *)
        case personCropSquareBadgeCameraFill = "person.crop.square.badge.camera.fill"

        /// SF Symbols's name：person.crop.square.badge.video
        @available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *)
        case personCropSquareBadgeVideo = "person.crop.square.badge.video"

        /// SF Symbols's name：person.crop.square.badge.video.fill
        @available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *)
        case personCropSquareBadgeVideoFill = "person.crop.square.badge.video.fill"

        /// SF Symbols's name：0.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _0CircleFillHi = "0.circle.fill.hi"

        /// SF Symbols's name：0.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _0CircleHi = "0.circle.hi"

        /// SF Symbols's name：0.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _0SquareFillHi = "0.square.fill.hi"

        /// SF Symbols's name：0.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _0SquareHi = "0.square.hi"

        /// SF Symbols's name：00.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00CircleAr = "00.circle.ar"

        /// SF Symbols's name：00.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00CircleFillAr = "00.circle.fill.ar"

        /// SF Symbols's name：00.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00CircleFillHi = "00.circle.fill.hi"

        /// SF Symbols's name：00.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00CircleHi = "00.circle.hi"

        /// SF Symbols's name：00.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00SquareAr = "00.square.ar"

        /// SF Symbols's name：00.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00SquareFillAr = "00.square.fill.ar"

        /// SF Symbols's name：00.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00SquareFillHi = "00.square.fill.hi"

        /// SF Symbols's name：00.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _00SquareHi = "00.square.hi"

        /// SF Symbols's name：01.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01CircleAr = "01.circle.ar"

        /// SF Symbols's name：01.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01CircleFillAr = "01.circle.fill.ar"

        /// SF Symbols's name：01.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01CircleFillHi = "01.circle.fill.hi"

        /// SF Symbols's name：01.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01CircleHi = "01.circle.hi"

        /// SF Symbols's name：01.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01SquareAr = "01.square.ar"

        /// SF Symbols's name：01.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01SquareFillAr = "01.square.fill.ar"

        /// SF Symbols's name：01.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01SquareFillHi = "01.square.fill.hi"

        /// SF Symbols's name：01.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _01SquareHi = "01.square.hi"

        /// SF Symbols's name：02.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02CircleAr = "02.circle.ar"

        /// SF Symbols's name：02.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02CircleFillAr = "02.circle.fill.ar"

        /// SF Symbols's name：02.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02CircleFillHi = "02.circle.fill.hi"

        /// SF Symbols's name：02.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02CircleHi = "02.circle.hi"

        /// SF Symbols's name：02.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02SquareAr = "02.square.ar"

        /// SF Symbols's name：02.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02SquareFillAr = "02.square.fill.ar"

        /// SF Symbols's name：02.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02SquareFillHi = "02.square.fill.hi"

        /// SF Symbols's name：02.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _02SquareHi = "02.square.hi"

        /// SF Symbols's name：03.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03CircleAr = "03.circle.ar"

        /// SF Symbols's name：03.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03CircleFillAr = "03.circle.fill.ar"

        /// SF Symbols's name：03.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03CircleFillHi = "03.circle.fill.hi"

        /// SF Symbols's name：03.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03CircleHi = "03.circle.hi"

        /// SF Symbols's name：03.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03SquareAr = "03.square.ar"

        /// SF Symbols's name：03.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03SquareFillAr = "03.square.fill.ar"

        /// SF Symbols's name：03.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03SquareFillHi = "03.square.fill.hi"

        /// SF Symbols's name：03.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _03SquareHi = "03.square.hi"

        /// SF Symbols's name：04.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04CircleAr = "04.circle.ar"

        /// SF Symbols's name：04.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04CircleFillAr = "04.circle.fill.ar"

        /// SF Symbols's name：04.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04CircleFillHi = "04.circle.fill.hi"

        /// SF Symbols's name：04.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04CircleHi = "04.circle.hi"

        /// SF Symbols's name：04.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04SquareAr = "04.square.ar"

        /// SF Symbols's name：04.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04SquareFillAr = "04.square.fill.ar"

        /// SF Symbols's name：04.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04SquareFillHi = "04.square.fill.hi"

        /// SF Symbols's name：04.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _04SquareHi = "04.square.hi"

        /// SF Symbols's name：05.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05CircleAr = "05.circle.ar"

        /// SF Symbols's name：05.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05CircleFillAr = "05.circle.fill.ar"

        /// SF Symbols's name：05.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05CircleFillHi = "05.circle.fill.hi"

        /// SF Symbols's name：05.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05CircleHi = "05.circle.hi"

        /// SF Symbols's name：05.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05SquareAr = "05.square.ar"

        /// SF Symbols's name：05.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05SquareFillAr = "05.square.fill.ar"

        /// SF Symbols's name：05.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05SquareFillHi = "05.square.fill.hi"

        /// SF Symbols's name：05.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _05SquareHi = "05.square.hi"

        /// SF Symbols's name：06.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06CircleAr = "06.circle.ar"

        /// SF Symbols's name：06.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06CircleFillAr = "06.circle.fill.ar"

        /// SF Symbols's name：06.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06CircleFillHi = "06.circle.fill.hi"

        /// SF Symbols's name：06.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06CircleHi = "06.circle.hi"

        /// SF Symbols's name：06.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06SquareAr = "06.square.ar"

        /// SF Symbols's name：06.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06SquareFillAr = "06.square.fill.ar"

        /// SF Symbols's name：06.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06SquareFillHi = "06.square.fill.hi"

        /// SF Symbols's name：06.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _06SquareHi = "06.square.hi"

        /// SF Symbols's name：07.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07CircleAr = "07.circle.ar"

        /// SF Symbols's name：07.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07CircleFillAr = "07.circle.fill.ar"

        /// SF Symbols's name：07.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07CircleFillHi = "07.circle.fill.hi"

        /// SF Symbols's name：07.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07CircleHi = "07.circle.hi"

        /// SF Symbols's name：07.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07SquareAr = "07.square.ar"

        /// SF Symbols's name：07.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07SquareFillAr = "07.square.fill.ar"

        /// SF Symbols's name：07.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07SquareFillHi = "07.square.fill.hi"

        /// SF Symbols's name：07.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _07SquareHi = "07.square.hi"

        /// SF Symbols's name：08.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08CircleAr = "08.circle.ar"

        /// SF Symbols's name：08.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08CircleFillAr = "08.circle.fill.ar"

        /// SF Symbols's name：08.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08CircleFillHi = "08.circle.fill.hi"

        /// SF Symbols's name：08.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08CircleHi = "08.circle.hi"

        /// SF Symbols's name：08.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08SquareAr = "08.square.ar"

        /// SF Symbols's name：08.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08SquareFillAr = "08.square.fill.ar"

        /// SF Symbols's name：08.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08SquareFillHi = "08.square.fill.hi"

        /// SF Symbols's name：08.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _08SquareHi = "08.square.hi"

        /// SF Symbols's name：09.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09CircleAr = "09.circle.ar"

        /// SF Symbols's name：09.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09CircleFillAr = "09.circle.fill.ar"

        /// SF Symbols's name：09.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09CircleFillHi = "09.circle.fill.hi"

        /// SF Symbols's name：09.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09CircleHi = "09.circle.hi"

        /// SF Symbols's name：09.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09SquareAr = "09.square.ar"

        /// SF Symbols's name：09.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09SquareFillAr = "09.square.fill.ar"

        /// SF Symbols's name：09.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09SquareFillHi = "09.square.fill.hi"

        /// SF Symbols's name：09.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _09SquareHi = "09.square.hi"

        /// SF Symbols's name：1.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _1CircleFillHi = "1.circle.fill.hi"

        /// SF Symbols's name：1.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _1CircleHi = "1.circle.hi"

        /// SF Symbols's name：1.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _1SquareFillHi = "1.square.fill.hi"

        /// SF Symbols's name：1.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _1SquareHi = "1.square.hi"

        /// SF Symbols's name：10.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10CircleAr = "10.circle.ar"

        /// SF Symbols's name：10.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10CircleFillAr = "10.circle.fill.ar"

        /// SF Symbols's name：10.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10CircleFillHi = "10.circle.fill.hi"

        /// SF Symbols's name：10.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10CircleHi = "10.circle.hi"

        /// SF Symbols's name：10.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10SquareAr = "10.square.ar"

        /// SF Symbols's name：10.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10SquareFillAr = "10.square.fill.ar"

        /// SF Symbols's name：10.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10SquareFillHi = "10.square.fill.hi"

        /// SF Symbols's name：10.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _10SquareHi = "10.square.hi"

        /// SF Symbols's name：11.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11CircleAr = "11.circle.ar"

        /// SF Symbols's name：11.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11CircleFillAr = "11.circle.fill.ar"

        /// SF Symbols's name：11.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11CircleFillHi = "11.circle.fill.hi"

        /// SF Symbols's name：11.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11CircleHi = "11.circle.hi"

        /// SF Symbols's name：11.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11SquareAr = "11.square.ar"

        /// SF Symbols's name：11.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11SquareFillAr = "11.square.fill.ar"

        /// SF Symbols's name：11.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11SquareFillHi = "11.square.fill.hi"

        /// SF Symbols's name：11.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _11SquareHi = "11.square.hi"

        /// SF Symbols's name：12.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12CircleAr = "12.circle.ar"

        /// SF Symbols's name：12.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12CircleFillAr = "12.circle.fill.ar"

        /// SF Symbols's name：12.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12CircleFillHi = "12.circle.fill.hi"

        /// SF Symbols's name：12.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12CircleHi = "12.circle.hi"

        /// SF Symbols's name：12.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12SquareAr = "12.square.ar"

        /// SF Symbols's name：12.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12SquareFillAr = "12.square.fill.ar"

        /// SF Symbols's name：12.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12SquareFillHi = "12.square.fill.hi"

        /// SF Symbols's name：12.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _12SquareHi = "12.square.hi"

        /// SF Symbols's name：13.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13CircleAr = "13.circle.ar"

        /// SF Symbols's name：13.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13CircleFillAr = "13.circle.fill.ar"

        /// SF Symbols's name：13.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13CircleFillHi = "13.circle.fill.hi"

        /// SF Symbols's name：13.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13CircleHi = "13.circle.hi"

        /// SF Symbols's name：13.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13SquareAr = "13.square.ar"

        /// SF Symbols's name：13.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13SquareFillAr = "13.square.fill.ar"

        /// SF Symbols's name：13.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13SquareFillHi = "13.square.fill.hi"

        /// SF Symbols's name：13.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _13SquareHi = "13.square.hi"

        /// SF Symbols's name：14.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14CircleAr = "14.circle.ar"

        /// SF Symbols's name：14.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14CircleFillAr = "14.circle.fill.ar"

        /// SF Symbols's name：14.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14CircleFillHi = "14.circle.fill.hi"

        /// SF Symbols's name：14.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14CircleHi = "14.circle.hi"

        /// SF Symbols's name：14.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14SquareAr = "14.square.ar"

        /// SF Symbols's name：14.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14SquareFillAr = "14.square.fill.ar"

        /// SF Symbols's name：14.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14SquareFillHi = "14.square.fill.hi"

        /// SF Symbols's name：14.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _14SquareHi = "14.square.hi"

        /// SF Symbols's name：15.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15CircleAr = "15.circle.ar"

        /// SF Symbols's name：15.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15CircleFillAr = "15.circle.fill.ar"

        /// SF Symbols's name：15.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15CircleFillHi = "15.circle.fill.hi"

        /// SF Symbols's name：15.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15CircleHi = "15.circle.hi"

        /// SF Symbols's name：15.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15SquareAr = "15.square.ar"

        /// SF Symbols's name：15.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15SquareFillAr = "15.square.fill.ar"

        /// SF Symbols's name：15.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15SquareFillHi = "15.square.fill.hi"

        /// SF Symbols's name：15.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _15SquareHi = "15.square.hi"

        /// SF Symbols's name：16.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16CircleAr = "16.circle.ar"

        /// SF Symbols's name：16.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16CircleFillAr = "16.circle.fill.ar"

        /// SF Symbols's name：16.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16CircleFillHi = "16.circle.fill.hi"

        /// SF Symbols's name：16.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16CircleHi = "16.circle.hi"

        /// SF Symbols's name：16.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16SquareAr = "16.square.ar"

        /// SF Symbols's name：16.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16SquareFillAr = "16.square.fill.ar"

        /// SF Symbols's name：16.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16SquareFillHi = "16.square.fill.hi"

        /// SF Symbols's name：16.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _16SquareHi = "16.square.hi"

        /// SF Symbols's name：17.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17CircleAr = "17.circle.ar"

        /// SF Symbols's name：17.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17CircleFillAr = "17.circle.fill.ar"

        /// SF Symbols's name：17.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17CircleFillHi = "17.circle.fill.hi"

        /// SF Symbols's name：17.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17CircleHi = "17.circle.hi"

        /// SF Symbols's name：17.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17SquareAr = "17.square.ar"

        /// SF Symbols's name：17.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17SquareFillAr = "17.square.fill.ar"

        /// SF Symbols's name：17.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17SquareFillHi = "17.square.fill.hi"

        /// SF Symbols's name：17.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _17SquareHi = "17.square.hi"

        /// SF Symbols's name：18.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18CircleAr = "18.circle.ar"

        /// SF Symbols's name：18.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18CircleFillAr = "18.circle.fill.ar"

        /// SF Symbols's name：18.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18CircleFillHi = "18.circle.fill.hi"

        /// SF Symbols's name：18.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18CircleHi = "18.circle.hi"

        /// SF Symbols's name：18.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18SquareAr = "18.square.ar"

        /// SF Symbols's name：18.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18SquareFillAr = "18.square.fill.ar"

        /// SF Symbols's name：18.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18SquareFillHi = "18.square.fill.hi"

        /// SF Symbols's name：18.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _18SquareHi = "18.square.hi"

        /// SF Symbols's name：19.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19CircleAr = "19.circle.ar"

        /// SF Symbols's name：19.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19CircleFillAr = "19.circle.fill.ar"

        /// SF Symbols's name：19.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19CircleFillHi = "19.circle.fill.hi"

        /// SF Symbols's name：19.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19CircleHi = "19.circle.hi"

        /// SF Symbols's name：19.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19SquareAr = "19.square.ar"

        /// SF Symbols's name：19.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19SquareFillAr = "19.square.fill.ar"

        /// SF Symbols's name：19.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19SquareFillHi = "19.square.fill.hi"

        /// SF Symbols's name：19.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _19SquareHi = "19.square.hi"

        /// SF Symbols's name：2.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _2CircleFillHi = "2.circle.fill.hi"

        /// SF Symbols's name：2.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _2CircleHi = "2.circle.hi"

        /// SF Symbols's name：2.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _2SquareFillHi = "2.square.fill.hi"

        /// SF Symbols's name：2.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _2SquareHi = "2.square.hi"

        /// SF Symbols's name：20.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20CircleAr = "20.circle.ar"

        /// SF Symbols's name：20.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20CircleFillAr = "20.circle.fill.ar"

        /// SF Symbols's name：20.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20CircleFillHi = "20.circle.fill.hi"

        /// SF Symbols's name：20.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20CircleHi = "20.circle.hi"

        /// SF Symbols's name：20.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20SquareAr = "20.square.ar"

        /// SF Symbols's name：20.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20SquareFillAr = "20.square.fill.ar"

        /// SF Symbols's name：20.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20SquareFillHi = "20.square.fill.hi"

        /// SF Symbols's name：20.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _20SquareHi = "20.square.hi"

        /// SF Symbols's name：21.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21CircleAr = "21.circle.ar"

        /// SF Symbols's name：21.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21CircleFillAr = "21.circle.fill.ar"

        /// SF Symbols's name：21.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21CircleFillHi = "21.circle.fill.hi"

        /// SF Symbols's name：21.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21CircleHi = "21.circle.hi"

        /// SF Symbols's name：21.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21SquareAr = "21.square.ar"

        /// SF Symbols's name：21.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21SquareFillAr = "21.square.fill.ar"

        /// SF Symbols's name：21.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21SquareFillHi = "21.square.fill.hi"

        /// SF Symbols's name：21.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _21SquareHi = "21.square.hi"

        /// SF Symbols's name：22.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22CircleAr = "22.circle.ar"

        /// SF Symbols's name：22.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22CircleFillAr = "22.circle.fill.ar"

        /// SF Symbols's name：22.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22CircleFillHi = "22.circle.fill.hi"

        /// SF Symbols's name：22.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22CircleHi = "22.circle.hi"

        /// SF Symbols's name：22.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22SquareAr = "22.square.ar"

        /// SF Symbols's name：22.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22SquareFillAr = "22.square.fill.ar"

        /// SF Symbols's name：22.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22SquareFillHi = "22.square.fill.hi"

        /// SF Symbols's name：22.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _22SquareHi = "22.square.hi"

        /// SF Symbols's name：23.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23CircleAr = "23.circle.ar"

        /// SF Symbols's name：23.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23CircleFillAr = "23.circle.fill.ar"

        /// SF Symbols's name：23.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23CircleFillHi = "23.circle.fill.hi"

        /// SF Symbols's name：23.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23CircleHi = "23.circle.hi"

        /// SF Symbols's name：23.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23SquareAr = "23.square.ar"

        /// SF Symbols's name：23.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23SquareFillAr = "23.square.fill.ar"

        /// SF Symbols's name：23.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23SquareFillHi = "23.square.fill.hi"

        /// SF Symbols's name：23.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _23SquareHi = "23.square.hi"

        /// SF Symbols's name：24.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24CircleAr = "24.circle.ar"

        /// SF Symbols's name：24.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24CircleFillAr = "24.circle.fill.ar"

        /// SF Symbols's name：24.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24CircleFillHi = "24.circle.fill.hi"

        /// SF Symbols's name：24.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24CircleHi = "24.circle.hi"

        /// SF Symbols's name：24.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24SquareAr = "24.square.ar"

        /// SF Symbols's name：24.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24SquareFillAr = "24.square.fill.ar"

        /// SF Symbols's name：24.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24SquareFillHi = "24.square.fill.hi"

        /// SF Symbols's name：24.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _24SquareHi = "24.square.hi"

        /// SF Symbols's name：25.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25CircleAr = "25.circle.ar"

        /// SF Symbols's name：25.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25CircleFillAr = "25.circle.fill.ar"

        /// SF Symbols's name：25.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25CircleFillHi = "25.circle.fill.hi"

        /// SF Symbols's name：25.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25CircleHi = "25.circle.hi"

        /// SF Symbols's name：25.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25SquareAr = "25.square.ar"

        /// SF Symbols's name：25.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25SquareFillAr = "25.square.fill.ar"

        /// SF Symbols's name：25.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25SquareFillHi = "25.square.fill.hi"

        /// SF Symbols's name：25.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _25SquareHi = "25.square.hi"

        /// SF Symbols's name：26.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26CircleAr = "26.circle.ar"

        /// SF Symbols's name：26.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26CircleFillAr = "26.circle.fill.ar"

        /// SF Symbols's name：26.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26CircleFillHi = "26.circle.fill.hi"

        /// SF Symbols's name：26.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26CircleHi = "26.circle.hi"

        /// SF Symbols's name：26.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26SquareAr = "26.square.ar"

        /// SF Symbols's name：26.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26SquareFillAr = "26.square.fill.ar"

        /// SF Symbols's name：26.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26SquareFillHi = "26.square.fill.hi"

        /// SF Symbols's name：26.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _26SquareHi = "26.square.hi"

        /// SF Symbols's name：27.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27CircleAr = "27.circle.ar"

        /// SF Symbols's name：27.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27CircleFillAr = "27.circle.fill.ar"

        /// SF Symbols's name：27.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27CircleFillHi = "27.circle.fill.hi"

        /// SF Symbols's name：27.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27CircleHi = "27.circle.hi"

        /// SF Symbols's name：27.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27SquareAr = "27.square.ar"

        /// SF Symbols's name：27.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27SquareFillAr = "27.square.fill.ar"

        /// SF Symbols's name：27.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27SquareFillHi = "27.square.fill.hi"

        /// SF Symbols's name：27.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _27SquareHi = "27.square.hi"

        /// SF Symbols's name：28.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28CircleAr = "28.circle.ar"

        /// SF Symbols's name：28.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28CircleFillAr = "28.circle.fill.ar"

        /// SF Symbols's name：28.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28CircleFillHi = "28.circle.fill.hi"

        /// SF Symbols's name：28.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28CircleHi = "28.circle.hi"

        /// SF Symbols's name：28.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28SquareAr = "28.square.ar"

        /// SF Symbols's name：28.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28SquareFillAr = "28.square.fill.ar"

        /// SF Symbols's name：28.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28SquareFillHi = "28.square.fill.hi"

        /// SF Symbols's name：28.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _28SquareHi = "28.square.hi"

        /// SF Symbols's name：29.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29CircleAr = "29.circle.ar"

        /// SF Symbols's name：29.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29CircleFillAr = "29.circle.fill.ar"

        /// SF Symbols's name：29.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29CircleFillHi = "29.circle.fill.hi"

        /// SF Symbols's name：29.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29CircleHi = "29.circle.hi"

        /// SF Symbols's name：29.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29SquareAr = "29.square.ar"

        /// SF Symbols's name：29.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29SquareFillAr = "29.square.fill.ar"

        /// SF Symbols's name：29.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29SquareFillHi = "29.square.fill.hi"

        /// SF Symbols's name：29.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _29SquareHi = "29.square.hi"

        /// SF Symbols's name：3.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _3CircleFillHi = "3.circle.fill.hi"

        /// SF Symbols's name：3.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _3CircleHi = "3.circle.hi"

        /// SF Symbols's name：3.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _3SquareFillHi = "3.square.fill.hi"

        /// SF Symbols's name：3.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _3SquareHi = "3.square.hi"

        /// SF Symbols's name：30.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30CircleAr = "30.circle.ar"

        /// SF Symbols's name：30.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30CircleFillAr = "30.circle.fill.ar"

        /// SF Symbols's name：30.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30CircleFillHi = "30.circle.fill.hi"

        /// SF Symbols's name：30.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30CircleHi = "30.circle.hi"

        /// SF Symbols's name：30.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30SquareAr = "30.square.ar"

        /// SF Symbols's name：30.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30SquareFillAr = "30.square.fill.ar"

        /// SF Symbols's name：30.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30SquareFillHi = "30.square.fill.hi"

        /// SF Symbols's name：30.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _30SquareHi = "30.square.hi"

        /// SF Symbols's name：31.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31CircleAr = "31.circle.ar"

        /// SF Symbols's name：31.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31CircleFillAr = "31.circle.fill.ar"

        /// SF Symbols's name：31.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31CircleFillHi = "31.circle.fill.hi"

        /// SF Symbols's name：31.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31CircleHi = "31.circle.hi"

        /// SF Symbols's name：31.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31SquareAr = "31.square.ar"

        /// SF Symbols's name：31.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31SquareFillAr = "31.square.fill.ar"

        /// SF Symbols's name：31.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31SquareFillHi = "31.square.fill.hi"

        /// SF Symbols's name：31.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _31SquareHi = "31.square.hi"

        /// SF Symbols's name：32.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32CircleAr = "32.circle.ar"

        /// SF Symbols's name：32.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32CircleFillAr = "32.circle.fill.ar"

        /// SF Symbols's name：32.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32CircleFillHi = "32.circle.fill.hi"

        /// SF Symbols's name：32.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32CircleHi = "32.circle.hi"

        /// SF Symbols's name：32.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32SquareAr = "32.square.ar"

        /// SF Symbols's name：32.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32SquareFillAr = "32.square.fill.ar"

        /// SF Symbols's name：32.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32SquareFillHi = "32.square.fill.hi"

        /// SF Symbols's name：32.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _32SquareHi = "32.square.hi"

        /// SF Symbols's name：33.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33CircleAr = "33.circle.ar"

        /// SF Symbols's name：33.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33CircleFillAr = "33.circle.fill.ar"

        /// SF Symbols's name：33.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33CircleFillHi = "33.circle.fill.hi"

        /// SF Symbols's name：33.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33CircleHi = "33.circle.hi"

        /// SF Symbols's name：33.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33SquareAr = "33.square.ar"

        /// SF Symbols's name：33.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33SquareFillAr = "33.square.fill.ar"

        /// SF Symbols's name：33.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33SquareFillHi = "33.square.fill.hi"

        /// SF Symbols's name：33.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _33SquareHi = "33.square.hi"

        /// SF Symbols's name：34.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34CircleAr = "34.circle.ar"

        /// SF Symbols's name：34.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34CircleFillAr = "34.circle.fill.ar"

        /// SF Symbols's name：34.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34CircleFillHi = "34.circle.fill.hi"

        /// SF Symbols's name：34.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34CircleHi = "34.circle.hi"

        /// SF Symbols's name：34.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34SquareAr = "34.square.ar"

        /// SF Symbols's name：34.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34SquareFillAr = "34.square.fill.ar"

        /// SF Symbols's name：34.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34SquareFillHi = "34.square.fill.hi"

        /// SF Symbols's name：34.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _34SquareHi = "34.square.hi"

        /// SF Symbols's name：35.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35CircleAr = "35.circle.ar"

        /// SF Symbols's name：35.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35CircleFillAr = "35.circle.fill.ar"

        /// SF Symbols's name：35.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35CircleFillHi = "35.circle.fill.hi"

        /// SF Symbols's name：35.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35CircleHi = "35.circle.hi"

        /// SF Symbols's name：35.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35SquareAr = "35.square.ar"

        /// SF Symbols's name：35.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35SquareFillAr = "35.square.fill.ar"

        /// SF Symbols's name：35.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35SquareFillHi = "35.square.fill.hi"

        /// SF Symbols's name：35.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _35SquareHi = "35.square.hi"

        /// SF Symbols's name：36.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36CircleAr = "36.circle.ar"

        /// SF Symbols's name：36.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36CircleFillAr = "36.circle.fill.ar"

        /// SF Symbols's name：36.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36CircleFillHi = "36.circle.fill.hi"

        /// SF Symbols's name：36.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36CircleHi = "36.circle.hi"

        /// SF Symbols's name：36.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36SquareAr = "36.square.ar"

        /// SF Symbols's name：36.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36SquareFillAr = "36.square.fill.ar"

        /// SF Symbols's name：36.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36SquareFillHi = "36.square.fill.hi"

        /// SF Symbols's name：36.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _36SquareHi = "36.square.hi"

        /// SF Symbols's name：37.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37CircleAr = "37.circle.ar"

        /// SF Symbols's name：37.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37CircleFillAr = "37.circle.fill.ar"

        /// SF Symbols's name：37.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37CircleFillHi = "37.circle.fill.hi"

        /// SF Symbols's name：37.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37CircleHi = "37.circle.hi"

        /// SF Symbols's name：37.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37SquareAr = "37.square.ar"

        /// SF Symbols's name：37.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37SquareFillAr = "37.square.fill.ar"

        /// SF Symbols's name：37.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37SquareFillHi = "37.square.fill.hi"

        /// SF Symbols's name：37.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _37SquareHi = "37.square.hi"

        /// SF Symbols's name：38.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38CircleAr = "38.circle.ar"

        /// SF Symbols's name：38.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38CircleFillAr = "38.circle.fill.ar"

        /// SF Symbols's name：38.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38CircleFillHi = "38.circle.fill.hi"

        /// SF Symbols's name：38.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38CircleHi = "38.circle.hi"

        /// SF Symbols's name：38.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38SquareAr = "38.square.ar"

        /// SF Symbols's name：38.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38SquareFillAr = "38.square.fill.ar"

        /// SF Symbols's name：38.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38SquareFillHi = "38.square.fill.hi"

        /// SF Symbols's name：38.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _38SquareHi = "38.square.hi"

        /// SF Symbols's name：39.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39CircleAr = "39.circle.ar"

        /// SF Symbols's name：39.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39CircleFillAr = "39.circle.fill.ar"

        /// SF Symbols's name：39.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39CircleFillHi = "39.circle.fill.hi"

        /// SF Symbols's name：39.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39CircleHi = "39.circle.hi"

        /// SF Symbols's name：39.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39SquareAr = "39.square.ar"

        /// SF Symbols's name：39.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39SquareFillAr = "39.square.fill.ar"

        /// SF Symbols's name：39.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39SquareFillHi = "39.square.fill.hi"

        /// SF Symbols's name：39.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _39SquareHi = "39.square.hi"

        /// SF Symbols's name：4.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _4CircleFillHi = "4.circle.fill.hi"

        /// SF Symbols's name：4.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _4CircleHi = "4.circle.hi"

        /// SF Symbols's name：4.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _4SquareFillHi = "4.square.fill.hi"

        /// SF Symbols's name：4.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _4SquareHi = "4.square.hi"

        /// SF Symbols's name：40.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40CircleAr = "40.circle.ar"

        /// SF Symbols's name：40.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40CircleFillAr = "40.circle.fill.ar"

        /// SF Symbols's name：40.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40CircleFillHi = "40.circle.fill.hi"

        /// SF Symbols's name：40.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40CircleHi = "40.circle.hi"

        /// SF Symbols's name：40.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40SquareAr = "40.square.ar"

        /// SF Symbols's name：40.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40SquareFillAr = "40.square.fill.ar"

        /// SF Symbols's name：40.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40SquareFillHi = "40.square.fill.hi"

        /// SF Symbols's name：40.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _40SquareHi = "40.square.hi"

        /// SF Symbols's name：41.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41CircleAr = "41.circle.ar"

        /// SF Symbols's name：41.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41CircleFillAr = "41.circle.fill.ar"

        /// SF Symbols's name：41.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41CircleFillHi = "41.circle.fill.hi"

        /// SF Symbols's name：41.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41CircleHi = "41.circle.hi"

        /// SF Symbols's name：41.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41SquareAr = "41.square.ar"

        /// SF Symbols's name：41.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41SquareFillAr = "41.square.fill.ar"

        /// SF Symbols's name：41.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41SquareFillHi = "41.square.fill.hi"

        /// SF Symbols's name：41.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _41SquareHi = "41.square.hi"

        /// SF Symbols's name：42.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42CircleAr = "42.circle.ar"

        /// SF Symbols's name：42.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42CircleFillAr = "42.circle.fill.ar"

        /// SF Symbols's name：42.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42CircleFillHi = "42.circle.fill.hi"

        /// SF Symbols's name：42.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42CircleHi = "42.circle.hi"

        /// SF Symbols's name：42.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42SquareAr = "42.square.ar"

        /// SF Symbols's name：42.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42SquareFillAr = "42.square.fill.ar"

        /// SF Symbols's name：42.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42SquareFillHi = "42.square.fill.hi"

        /// SF Symbols's name：42.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _42SquareHi = "42.square.hi"

        /// SF Symbols's name：43.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43CircleAr = "43.circle.ar"

        /// SF Symbols's name：43.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43CircleFillAr = "43.circle.fill.ar"

        /// SF Symbols's name：43.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43CircleFillHi = "43.circle.fill.hi"

        /// SF Symbols's name：43.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43CircleHi = "43.circle.hi"

        /// SF Symbols's name：43.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43SquareAr = "43.square.ar"

        /// SF Symbols's name：43.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43SquareFillAr = "43.square.fill.ar"

        /// SF Symbols's name：43.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43SquareFillHi = "43.square.fill.hi"

        /// SF Symbols's name：43.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _43SquareHi = "43.square.hi"

        /// SF Symbols's name：44.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44CircleAr = "44.circle.ar"

        /// SF Symbols's name：44.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44CircleFillAr = "44.circle.fill.ar"

        /// SF Symbols's name：44.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44CircleFillHi = "44.circle.fill.hi"

        /// SF Symbols's name：44.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44CircleHi = "44.circle.hi"

        /// SF Symbols's name：44.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44SquareAr = "44.square.ar"

        /// SF Symbols's name：44.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44SquareFillAr = "44.square.fill.ar"

        /// SF Symbols's name：44.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44SquareFillHi = "44.square.fill.hi"

        /// SF Symbols's name：44.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _44SquareHi = "44.square.hi"

        /// SF Symbols's name：45.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45CircleAr = "45.circle.ar"

        /// SF Symbols's name：45.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45CircleFillAr = "45.circle.fill.ar"

        /// SF Symbols's name：45.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45CircleFillHi = "45.circle.fill.hi"

        /// SF Symbols's name：45.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45CircleHi = "45.circle.hi"

        /// SF Symbols's name：45.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45SquareAr = "45.square.ar"

        /// SF Symbols's name：45.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45SquareFillAr = "45.square.fill.ar"

        /// SF Symbols's name：45.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45SquareFillHi = "45.square.fill.hi"

        /// SF Symbols's name：45.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _45SquareHi = "45.square.hi"

        /// SF Symbols's name：46.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46CircleAr = "46.circle.ar"

        /// SF Symbols's name：46.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46CircleFillAr = "46.circle.fill.ar"

        /// SF Symbols's name：46.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46CircleFillHi = "46.circle.fill.hi"

        /// SF Symbols's name：46.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46CircleHi = "46.circle.hi"

        /// SF Symbols's name：46.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46SquareAr = "46.square.ar"

        /// SF Symbols's name：46.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46SquareFillAr = "46.square.fill.ar"

        /// SF Symbols's name：46.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46SquareFillHi = "46.square.fill.hi"

        /// SF Symbols's name：46.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _46SquareHi = "46.square.hi"

        /// SF Symbols's name：47.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47CircleAr = "47.circle.ar"

        /// SF Symbols's name：47.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47CircleFillAr = "47.circle.fill.ar"

        /// SF Symbols's name：47.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47CircleFillHi = "47.circle.fill.hi"

        /// SF Symbols's name：47.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47CircleHi = "47.circle.hi"

        /// SF Symbols's name：47.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47SquareAr = "47.square.ar"

        /// SF Symbols's name：47.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47SquareFillAr = "47.square.fill.ar"

        /// SF Symbols's name：47.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47SquareFillHi = "47.square.fill.hi"

        /// SF Symbols's name：47.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _47SquareHi = "47.square.hi"

        /// SF Symbols's name：48.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48CircleAr = "48.circle.ar"

        /// SF Symbols's name：48.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48CircleFillAr = "48.circle.fill.ar"

        /// SF Symbols's name：48.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48CircleFillHi = "48.circle.fill.hi"

        /// SF Symbols's name：48.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48CircleHi = "48.circle.hi"

        /// SF Symbols's name：48.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48SquareAr = "48.square.ar"

        /// SF Symbols's name：48.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48SquareFillAr = "48.square.fill.ar"

        /// SF Symbols's name：48.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48SquareFillHi = "48.square.fill.hi"

        /// SF Symbols's name：48.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _48SquareHi = "48.square.hi"

        /// SF Symbols's name：49.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49CircleAr = "49.circle.ar"

        /// SF Symbols's name：49.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49CircleFillAr = "49.circle.fill.ar"

        /// SF Symbols's name：49.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49CircleFillHi = "49.circle.fill.hi"

        /// SF Symbols's name：49.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49CircleHi = "49.circle.hi"

        /// SF Symbols's name：49.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49SquareAr = "49.square.ar"

        /// SF Symbols's name：49.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49SquareFillAr = "49.square.fill.ar"

        /// SF Symbols's name：49.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49SquareFillHi = "49.square.fill.hi"

        /// SF Symbols's name：49.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _49SquareHi = "49.square.hi"

        /// SF Symbols's name：5.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _5CircleFillHi = "5.circle.fill.hi"

        /// SF Symbols's name：5.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _5CircleHi = "5.circle.hi"

        /// SF Symbols's name：5.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _5SquareFillHi = "5.square.fill.hi"

        /// SF Symbols's name：5.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _5SquareHi = "5.square.hi"

        /// SF Symbols's name：50.circle.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50CircleAr = "50.circle.ar"

        /// SF Symbols's name：50.circle.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50CircleFillAr = "50.circle.fill.ar"

        /// SF Symbols's name：50.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50CircleFillHi = "50.circle.fill.hi"

        /// SF Symbols's name：50.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50CircleHi = "50.circle.hi"

        /// SF Symbols's name：50.square.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50SquareAr = "50.square.ar"

        /// SF Symbols's name：50.square.fill.ar
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50SquareFillAr = "50.square.fill.ar"

        /// SF Symbols's name：50.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50SquareFillHi = "50.square.fill.hi"

        /// SF Symbols's name：50.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _50SquareHi = "50.square.hi"

        /// SF Symbols's name：6.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _6CircleFillHi = "6.circle.fill.hi"

        /// SF Symbols's name：6.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _6CircleHi = "6.circle.hi"

        /// SF Symbols's name：6.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _6SquareFillHi = "6.square.fill.hi"

        /// SF Symbols's name：6.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _6SquareHi = "6.square.hi"

        /// SF Symbols's name：7.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _7CircleFillHi = "7.circle.fill.hi"

        /// SF Symbols's name：7.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _7CircleHi = "7.circle.hi"

        /// SF Symbols's name：7.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _7SquareFillHi = "7.square.fill.hi"

        /// SF Symbols's name：7.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _7SquareHi = "7.square.hi"

        /// SF Symbols's name：8.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _8CircleFillHi = "8.circle.fill.hi"

        /// SF Symbols's name：8.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _8CircleHi = "8.circle.hi"

        /// SF Symbols's name：8.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _8SquareFillHi = "8.square.fill.hi"

        /// SF Symbols's name：8.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _8SquareHi = "8.square.hi"

        /// SF Symbols's name：9.circle.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _9CircleFillHi = "9.circle.fill.hi"

        /// SF Symbols's name：9.circle.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _9CircleHi = "9.circle.hi"

        /// SF Symbols's name：9.square.fill.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _9SquareFillHi = "9.square.fill.hi"

        /// SF Symbols's name：9.square.hi
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case _9SquareHi = "9.square.hi"

        /// SF Symbols's name：square.and.arrow.up.badge.clock
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case squareAndArrowUpBadgeClock = "square.and.arrow.up.badge.clock"

        /// SF Symbols's name：square.and.arrow.up.badge.clock.fill
        @available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *)
        case squareAndArrowUpBadgeClockFill = "square.and.arrow.up.badge.clock.fill"

        /// SF Symbols's name：apple.meditate
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case appleMeditate = "apple.meditate"

        /// SF Symbols's name：apple.meditate.square.stack
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case appleMeditateSquareStack = "apple.meditate.square.stack"

        /// SF Symbols's name：apple.meditate.square.stack.fill
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case appleMeditateSquareStackFill = "apple.meditate.square.stack.fill"

        /// SF Symbols's name：apple.terminal.circle
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case appleTerminalCircle = "apple.terminal.circle"

        /// SF Symbols's name：apple.terminal.circle.fill
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case appleTerminalCircleFill = "apple.terminal.circle.fill"

        /// SF Symbols's name：arrow.down.app.dashed
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case arrowDownAppDashed = "arrow.down.app.dashed"

        /// SF Symbols's name：arrow.down.app.dashed.trianglebadge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case arrowDownAppDashedTrianglebadgeExclamationmark = "arrow.down.app.dashed.trianglebadge.exclamationmark"

        /// SF Symbols's name：audio.jack.mono
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case audioJackMono = "audio.jack.mono"

        /// SF Symbols's name：audio.jack.stereo
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case audioJackStereo = "audio.jack.stereo"

        /// SF Symbols's name：ipad.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case ipadBadgeExclamationmark = "ipad.badge.exclamationmark"

        /// SF Symbols's name：ipad.gen1.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case ipadGen1BadgeExclamationmark = "ipad.gen1.badge.exclamationmark"

        /// SF Symbols's name：ipad.gen1.landscape.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case ipadGen1LandscapeBadgeExclamationmark = "ipad.gen1.landscape.badge.exclamationmark"

        /// SF Symbols's name：ipad.gen2.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case ipadGen2BadgeExclamationmark = "ipad.gen2.badge.exclamationmark"

        /// SF Symbols's name：ipad.gen2.landscape.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case ipadGen2LandscapeBadgeExclamationmark = "ipad.gen2.landscape.badge.exclamationmark"

        /// SF Symbols's name：ipad.landscape.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case ipadLandscapeBadgeExclamationmark = "ipad.landscape.badge.exclamationmark"

        /// SF Symbols's name：iphone.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case iphoneBadgeExclamationmark = "iphone.badge.exclamationmark"

        /// SF Symbols's name：iphone.gen1.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case iphoneGen1BadgeExclamationmark = "iphone.gen1.badge.exclamationmark"

        /// SF Symbols's name：iphone.gen2.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case iphoneGen2BadgeExclamationmark = "iphone.gen2.badge.exclamationmark"

        /// SF Symbols's name：iphone.gen3.badge.exclamationmark
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case iphoneGen3BadgeExclamationmark = "iphone.gen3.badge.exclamationmark"

        /// SF Symbols's name：medal.star
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case medalStar = "medal.star"

        /// SF Symbols's name：medal.star.fill
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case medalStarFill = "medal.star.fill"

        /// SF Symbols's name：plus.circle.dashed
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case plusCircleDashed = "plus.circle.dashed"

        /// SF Symbols's name：translate
        @available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *)
        case translate = "translate"

        /// SF Symbols's name：beats.pill
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsPill = "beats.pill"

        /// SF Symbols's name：beats.pill.fill
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsPillFill = "beats.pill.fill"

        /// SF Symbols's name：beats.solobuds
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsSolobuds = "beats.solobuds"

        /// SF Symbols's name：beats.solobuds.chargingcase
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsSolobudsChargingcase = "beats.solobuds.chargingcase"

        /// SF Symbols's name：beats.solobuds.chargingcase.fill
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsSolobudsChargingcaseFill = "beats.solobuds.chargingcase.fill"

        /// SF Symbols's name：beats.solobuds.left
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsSolobudsLeft = "beats.solobuds.left"

        /// SF Symbols's name：beats.solobuds.right
        @available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *)
        case beatsSolobudsRight = "beats.solobuds.right"

        /// SF Symbols's name：10.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _10ArrowTriangleheadClockwise = "10.arrow.trianglehead.clockwise"

        /// SF Symbols's name：10.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _10ArrowTriangleheadClockwiseAr = "10.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：10.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _10ArrowTriangleheadClockwiseHi = "10.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：10.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _10ArrowTriangleheadCounterclockwise = "10.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：10.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _10ArrowTriangleheadCounterclockwiseAr = "10.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：10.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _10ArrowTriangleheadCounterclockwiseHi = "10.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：15.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _15ArrowTriangleheadClockwise = "15.arrow.trianglehead.clockwise"

        /// SF Symbols's name：15.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _15ArrowTriangleheadClockwiseAr = "15.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：15.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _15ArrowTriangleheadClockwiseHi = "15.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：15.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _15ArrowTriangleheadCounterclockwise = "15.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：15.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _15ArrowTriangleheadCounterclockwiseAr = "15.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：15.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _15ArrowTriangleheadCounterclockwiseHi = "15.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：30.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _30ArrowTriangleheadClockwise = "30.arrow.trianglehead.clockwise"

        /// SF Symbols's name：30.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _30ArrowTriangleheadClockwiseAr = "30.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：30.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _30ArrowTriangleheadClockwiseHi = "30.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：30.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _30ArrowTriangleheadCounterclockwise = "30.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：30.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _30ArrowTriangleheadCounterclockwiseAr = "30.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：30.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _30ArrowTriangleheadCounterclockwiseHi = "30.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：45.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _45ArrowTriangleheadClockwise = "45.arrow.trianglehead.clockwise"

        /// SF Symbols's name：45.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _45ArrowTriangleheadClockwiseAr = "45.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：45.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _45ArrowTriangleheadClockwiseHi = "45.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：45.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _45ArrowTriangleheadCounterclockwise = "45.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：45.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _45ArrowTriangleheadCounterclockwiseAr = "45.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：45.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _45ArrowTriangleheadCounterclockwiseHi = "45.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：5.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _5ArrowTriangleheadClockwise = "5.arrow.trianglehead.clockwise"

        /// SF Symbols's name：5.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _5ArrowTriangleheadClockwiseAr = "5.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：5.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _5ArrowTriangleheadClockwiseHi = "5.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：5.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _5ArrowTriangleheadCounterclockwise = "5.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：5.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _5ArrowTriangleheadCounterclockwiseAr = "5.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：5.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _5ArrowTriangleheadCounterclockwiseHi = "5.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：60.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _60ArrowTriangleheadClockwise = "60.arrow.trianglehead.clockwise"

        /// SF Symbols's name：60.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _60ArrowTriangleheadClockwiseAr = "60.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：60.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _60ArrowTriangleheadClockwiseHi = "60.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：60.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _60ArrowTriangleheadCounterclockwise = "60.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：60.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _60ArrowTriangleheadCounterclockwiseAr = "60.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：60.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _60ArrowTriangleheadCounterclockwiseHi = "60.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：75.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _75ArrowTriangleheadClockwise = "75.arrow.trianglehead.clockwise"

        /// SF Symbols's name：75.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _75ArrowTriangleheadClockwiseAr = "75.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：75.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _75ArrowTriangleheadClockwiseHi = "75.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：75.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _75ArrowTriangleheadCounterclockwise = "75.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：75.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _75ArrowTriangleheadCounterclockwiseAr = "75.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：75.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _75ArrowTriangleheadCounterclockwiseHi = "75.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：90.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _90ArrowTriangleheadClockwise = "90.arrow.trianglehead.clockwise"

        /// SF Symbols's name：90.arrow.trianglehead.clockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _90ArrowTriangleheadClockwiseAr = "90.arrow.trianglehead.clockwise.ar"

        /// SF Symbols's name：90.arrow.trianglehead.clockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _90ArrowTriangleheadClockwiseHi = "90.arrow.trianglehead.clockwise.hi"

        /// SF Symbols's name：90.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _90ArrowTriangleheadCounterclockwise = "90.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：90.arrow.trianglehead.counterclockwise.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _90ArrowTriangleheadCounterclockwiseAr = "90.arrow.trianglehead.counterclockwise.ar"

        /// SF Symbols's name：90.arrow.trianglehead.counterclockwise.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case _90ArrowTriangleheadCounterclockwiseHi = "90.arrow.trianglehead.counterclockwise.hi"

        /// SF Symbols's name：air.car.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airCarSide = "air.car.side"

        /// SF Symbols's name：air.car.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airCarSideFill = "air.car.side.fill"

        /// SF Symbols's name：air.convertible.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airConvertibleSide = "air.convertible.side"

        /// SF Symbols's name：air.convertible.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airConvertibleSideFill = "air.convertible.side.fill"

        /// SF Symbols's name：air.pickup.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airPickupSide = "air.pickup.side"

        /// SF Symbols's name：air.pickup.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airPickupSideFill = "air.pickup.side.fill"

        /// SF Symbols's name：air.suv.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airSuvSide = "air.suv.side"

        /// SF Symbols's name：air.suv.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airSuvSideFill = "air.suv.side.fill"

        /// SF Symbols's name：airplay.audio
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayAudio = "airplay.audio"

        /// SF Symbols's name：airplay.audio.badge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayAudioBadgeExclamationmark = "airplay.audio.badge.exclamationmark"

        /// SF Symbols's name：airplay.audio.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayAudioCircle = "airplay.audio.circle"

        /// SF Symbols's name：airplay.audio.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayAudioCircleFill = "airplay.audio.circle.fill"

        /// SF Symbols's name：airplay.video
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayVideo = "airplay.video"

        /// SF Symbols's name：airplay.video.badge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayVideoBadgeExclamationmark = "airplay.video.badge.exclamationmark"

        /// SF Symbols's name：airplay.video.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayVideoCircle = "airplay.video.circle"

        /// SF Symbols's name：airplay.video.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airplayVideoCircleFill = "airplay.video.circle.fill"

        /// SF Symbols's name：airpods.max
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsMax = "airpods.max"

        /// SF Symbols's name：airpods.pro
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsPro = "airpods.pro"

        /// SF Symbols's name：airpods.pro.chargingcase.wireless
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsProChargingcaseWireless = "airpods.pro.chargingcase.wireless"

        /// SF Symbols's name：airpods.pro.chargingcase.wireless.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsProChargingcaseWirelessFill = "airpods.pro.chargingcase.wireless.fill"

        /// SF Symbols's name：airpods.pro.chargingcase.wireless.radiowaves.left.and.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsProChargingcaseWirelessRadiowavesLeftAndRight = "airpods.pro.chargingcase.wireless.radiowaves.left.and.right"

        /// SF Symbols's name：airpods.pro.chargingcase.wireless.radiowaves.left.and.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsProChargingcaseWirelessRadiowavesLeftAndRightFill = "airpods.pro.chargingcase.wireless.radiowaves.left.and.right.fill"

        /// SF Symbols's name：airpods.pro.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsProLeft = "airpods.pro.left"

        /// SF Symbols's name：airpods.pro.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case airpodsProRight = "airpods.pro.right"

        /// SF Symbols's name：american.football
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootball = "american.football"

        /// SF Symbols's name：american.football.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballCircle = "american.football.circle"

        /// SF Symbols's name：american.football.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballCircleFill = "american.football.circle.fill"

        /// SF Symbols's name：american.football.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballFill = "american.football.fill"

        /// SF Symbols's name：american.football.professional
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballProfessional = "american.football.professional"

        /// SF Symbols's name：american.football.professional.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballProfessionalCircle = "american.football.professional.circle"

        /// SF Symbols's name：american.football.professional.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballProfessionalCircleFill = "american.football.professional.circle.fill"

        /// SF Symbols's name：american.football.professional.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case americanFootballProfessionalFill = "american.football.professional.fill"

        /// SF Symbols's name：antenna.radiowaves.left.and.right.slash.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case antennaRadiowavesLeftAndRightSlashCircle = "antenna.radiowaves.left.and.right.slash.circle"

        /// SF Symbols's name：antenna.radiowaves.left.and.right.slash.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case antennaRadiowavesLeftAndRightSlashCircleFill = "antenna.radiowaves.left.and.right.slash.circle.fill"

        /// SF Symbols's name：app.badge.clock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appBadgeClock = "app.badge.clock"

        /// SF Symbols's name：app.badge.clock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appBadgeClockFill = "app.badge.clock.fill"

        /// SF Symbols's name：append.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appendPage = "append.page"

        /// SF Symbols's name：append.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appendPageFill = "append.page.fill"

        /// SF Symbols's name：append.page.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appendPageFillRtl = "append.page.fill.rtl"

        /// SF Symbols's name：append.page.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appendPageRtl = "append.page.rtl"

        /// SF Symbols's name：apple.haptics.and.exclamationmark.triangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleHapticsAndExclamationmarkTriangle = "apple.haptics.and.exclamationmark.triangle"

        /// SF Symbols's name：apple.haptics.and.music.note
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleHapticsAndMusicNote = "apple.haptics.and.music.note"

        /// SF Symbols's name：apple.haptics.and.music.note.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleHapticsAndMusicNoteSlash = "apple.haptics.and.music.note.slash"

        /// SF Symbols's name：apple.image.playground
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleImagePlayground = "apple.image.playground"

        /// SF Symbols's name：apple.image.playground.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleImagePlaygroundFill = "apple.image.playground.fill"

        /// SF Symbols's name：apple.intelligence
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleIntelligence = "apple.intelligence"

        /// SF Symbols's name：apple.meditate.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleMeditateCircle = "apple.meditate.circle"

        /// SF Symbols's name：apple.meditate.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case appleMeditateCircleFill = "apple.meditate.circle.fill"

        /// SF Symbols's name：applepencil.doubletap
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case applepencilDoubletap = "applepencil.doubletap"

        /// SF Symbols's name：applepencil.hover
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case applepencilHover = "applepencil.hover"

        /// SF Symbols's name：applepencil.squeeze
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case applepencilSqueeze = "applepencil.squeeze"

        /// SF Symbols's name：applewatch.case.sizes
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case applewatchCaseSizes = "applewatch.case.sizes"

        /// SF Symbols's name：arcade.stick.and.arrow.left.and.arrow.right.outward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arcadeStickAndArrowLeftAndArrowRightOutward = "arcade.stick.and.arrow.left.and.arrow.right.outward"

        /// SF Symbols's name：arrow.backward.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowBackwardCircleDotted = "arrow.backward.circle.dotted"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownBackwardAndArrowUpForwardRectangle = "arrow.down.backward.and.arrow.up.forward.rectangle"

        /// SF Symbols's name：arrow.down.backward.and.arrow.up.forward.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownBackwardAndArrowUpForwardRectangleFill = "arrow.down.backward.and.arrow.up.forward.rectangle.fill"

        /// SF Symbols's name：arrow.down.backward.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownBackwardCircleDotted = "arrow.down.backward.circle.dotted"

        /// SF Symbols's name：arrow.down.document
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownDocument = "arrow.down.document"

        /// SF Symbols's name：arrow.down.document.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownDocumentFill = "arrow.down.document.fill"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownForwardAndArrowUpBackwardRectangle = "arrow.down.forward.and.arrow.up.backward.rectangle"

        /// SF Symbols's name：arrow.down.forward.and.arrow.up.backward.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownForwardAndArrowUpBackwardRectangleFill = "arrow.down.forward.and.arrow.up.backward.rectangle.fill"

        /// SF Symbols's name：arrow.down.forward.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownForwardCircleDotted = "arrow.down.forward.circle.dotted"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownLeftAndArrowUpRightRectangle = "arrow.down.left.and.arrow.up.right.rectangle"

        /// SF Symbols's name：arrow.down.left.and.arrow.up.right.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownLeftAndArrowUpRightRectangleFill = "arrow.down.left.and.arrow.up.right.rectangle.fill"

        /// SF Symbols's name：arrow.down.left.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownLeftCircleDotted = "arrow.down.left.circle.dotted"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownRightAndArrowUpLeftRectangle = "arrow.down.right.and.arrow.up.left.rectangle"

        /// SF Symbols's name：arrow.down.right.and.arrow.up.left.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownRightAndArrowUpLeftRectangleFill = "arrow.down.right.and.arrow.up.left.rectangle.fill"

        /// SF Symbols's name：arrow.down.right.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowDownRightCircleDotted = "arrow.down.right.circle.dotted"

        /// SF Symbols's name：arrow.forward.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowForwardCircleDotted = "arrow.forward.circle.dotted"

        /// SF Symbols's name：arrow.left.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowLeftCircleDotted = "arrow.left.circle.dotted"

        /// SF Symbols's name：arrow.right.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowRightCircleDotted = "arrow.right.circle.dotted"

        /// SF Symbols's name：arrow.right.filled.filter.arrow.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowRightFilledFilterArrowRight = "arrow.right.filled.filter.arrow.right"

        /// SF Symbols's name：arrow.right.page.on.clipboard
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowRightPageOnClipboard = "arrow.right.page.on.clipboard"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2Clockwise = "arrow.trianglehead.2.clockwise"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90 = "arrow.trianglehead.2.clockwise.rotate.90"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.camera
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90Camera = "arrow.trianglehead.2.clockwise.rotate.90.camera"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.camera.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90CameraFill = "arrow.trianglehead.2.clockwise.rotate.90.camera.fill"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90Circle = "arrow.trianglehead.2.clockwise.rotate.90.circle"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90CircleFill = "arrow.trianglehead.2.clockwise.rotate.90.circle.fill"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.icloud
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90Icloud = "arrow.trianglehead.2.clockwise.rotate.90.icloud"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.icloud.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90IcloudFill = "arrow.trianglehead.2.clockwise.rotate.90.icloud.fill"

        /// SF Symbols's name：arrow.trianglehead.2.clockwise.rotate.90.page.on.clipboard
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2ClockwiseRotate90PageOnClipboard = "arrow.trianglehead.2.clockwise.rotate.90.page.on.clipboard"

        /// SF Symbols's name：arrow.trianglehead.2.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2Counterclockwise = "arrow.trianglehead.2.counterclockwise"

        /// SF Symbols's name：arrow.trianglehead.2.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTrianglehead2CounterclockwiseRotate90 = "arrow.trianglehead.2.counterclockwise.rotate.90"

        /// SF Symbols's name：arrow.trianglehead.bottomleft.capsulepath.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadBottomleftCapsulepathClockwise = "arrow.trianglehead.bottomleft.capsulepath.clockwise"

        /// SF Symbols's name：arrow.trianglehead.branch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadBranch = "arrow.trianglehead.branch"

        /// SF Symbols's name：arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadClockwise = "arrow.trianglehead.clockwise"

        /// SF Symbols's name：arrow.trianglehead.clockwise.heart
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadClockwiseHeart = "arrow.trianglehead.clockwise.heart"

        /// SF Symbols's name：arrow.trianglehead.clockwise.heart.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadClockwiseHeartFill = "arrow.trianglehead.clockwise.heart.fill"

        /// SF Symbols's name：arrow.trianglehead.clockwise.icloud
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadClockwiseIcloud = "arrow.trianglehead.clockwise.icloud"

        /// SF Symbols's name：arrow.trianglehead.clockwise.icloud.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadClockwiseIcloudFill = "arrow.trianglehead.clockwise.icloud.fill"

        /// SF Symbols's name：arrow.trianglehead.clockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadClockwiseRotate90 = "arrow.trianglehead.clockwise.rotate.90"

        /// SF Symbols's name：arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadCounterclockwise = "arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：arrow.trianglehead.counterclockwise.icloud
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadCounterclockwiseIcloud = "arrow.trianglehead.counterclockwise.icloud"

        /// SF Symbols's name：arrow.trianglehead.counterclockwise.icloud.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadCounterclockwiseIcloudFill = "arrow.trianglehead.counterclockwise.icloud.fill"

        /// SF Symbols's name：arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadCounterclockwiseRotate90 = "arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadLeftAndRightRighttriangleLeftRighttriangleRight = "arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right"

        /// SF Symbols's name：arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadLeftAndRightRighttriangleLeftRighttriangleRightFill = "arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right.fill"

        /// SF Symbols's name：arrow.trianglehead.merge
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadMerge = "arrow.trianglehead.merge"

        /// SF Symbols's name：arrow.trianglehead.pull
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadPull = "arrow.trianglehead.pull"

        /// SF Symbols's name：arrow.trianglehead.rectanglepath
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadRectanglepath = "arrow.trianglehead.rectanglepath"

        /// SF Symbols's name：arrow.trianglehead.swap
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadSwap = "arrow.trianglehead.swap"

        /// SF Symbols's name：arrow.trianglehead.topright.capsulepath.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadToprightCapsulepathClockwise = "arrow.trianglehead.topright.capsulepath.clockwise"

        /// SF Symbols's name：arrow.trianglehead.turn.up.right.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadTurnUpRightCircle = "arrow.trianglehead.turn.up.right.circle"

        /// SF Symbols's name：arrow.trianglehead.turn.up.right.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadTurnUpRightCircleFill = "arrow.trianglehead.turn.up.right.circle.fill"

        /// SF Symbols's name：arrow.trianglehead.turn.up.right.diamond
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadTurnUpRightDiamond = "arrow.trianglehead.turn.up.right.diamond"

        /// SF Symbols's name：arrow.trianglehead.turn.up.right.diamond.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadTurnUpRightDiamondFill = "arrow.trianglehead.turn.up.right.diamond.fill"

        /// SF Symbols's name：arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadUpAndDownRighttriangleUpRighttriangleDown = "arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down"

        /// SF Symbols's name：arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowTriangleheadUpAndDownRighttriangleUpRighttriangleDownFill = "arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down.fill"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpBackwardAndArrowDownForwardRectangle = "arrow.up.backward.and.arrow.down.forward.rectangle"

        /// SF Symbols's name：arrow.up.backward.and.arrow.down.forward.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpBackwardAndArrowDownForwardRectangleFill = "arrow.up.backward.and.arrow.down.forward.rectangle.fill"

        /// SF Symbols's name：arrow.up.backward.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpBackwardCircleDotted = "arrow.up.backward.circle.dotted"

        /// SF Symbols's name：arrow.up.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpCircleDotted = "arrow.up.circle.dotted"

        /// SF Symbols's name：arrow.up.document
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpDocument = "arrow.up.document"

        /// SF Symbols's name：arrow.up.document.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpDocumentFill = "arrow.up.document.fill"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpForwardAndArrowDownBackwardRectangle = "arrow.up.forward.and.arrow.down.backward.rectangle"

        /// SF Symbols's name：arrow.up.forward.and.arrow.down.backward.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpForwardAndArrowDownBackwardRectangleFill = "arrow.up.forward.and.arrow.down.backward.rectangle.fill"

        /// SF Symbols's name：arrow.up.forward.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpForwardCircleDotted = "arrow.up.forward.circle.dotted"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpLeftAndArrowDownRightRectangle = "arrow.up.left.and.arrow.down.right.rectangle"

        /// SF Symbols's name：arrow.up.left.and.arrow.down.right.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpLeftAndArrowDownRightRectangleFill = "arrow.up.left.and.arrow.down.right.rectangle.fill"

        /// SF Symbols's name：arrow.up.left.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpLeftCircleDotted = "arrow.up.left.circle.dotted"

        /// SF Symbols's name：arrow.up.page.on.clipboard
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpPageOnClipboard = "arrow.up.page.on.clipboard"

        /// SF Symbols's name：arrow.up.right.circle.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case arrowUpRightCircleDotted = "arrow.up.right.circle.dotted"

        /// SF Symbols's name：australian.football
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australianFootball = "australian.football"

        /// SF Symbols's name：australian.football.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australianFootballCircle = "australian.football.circle"

        /// SF Symbols's name：australian.football.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australianFootballCircleFill = "australian.football.circle.fill"

        /// SF Symbols's name：australian.football.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australianFootballFill = "australian.football.fill"

        /// SF Symbols's name：australiandollarsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignArrowTriangleheadCounterclockwiseRotate90 = "australiandollarsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：australiandollarsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignBankBuilding = "australiandollarsign.bank.building"

        /// SF Symbols's name：australiandollarsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignBankBuildingFill = "australiandollarsign.bank.building.fill"

        /// SF Symbols's name：australiandollarsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignGaugeChartLefthalfRighthalf = "australiandollarsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：australiandollarsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignGaugeChartLeftthirdTopthirdRightthird = "australiandollarsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：australiandollarsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignRing = "australiandollarsign.ring"

        /// SF Symbols's name：australiandollarsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australiandollarsignRingDashed = "australiandollarsign.ring.dashed"

        /// SF Symbols's name：australsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignArrowTriangleheadCounterclockwiseRotate90 = "australsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：australsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignBankBuilding = "australsign.bank.building"

        /// SF Symbols's name：australsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignBankBuildingFill = "australsign.bank.building.fill"

        /// SF Symbols's name：australsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignGaugeChartLefthalfRighthalf = "australsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：australsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignGaugeChartLeftthirdTopthirdRightthird = "australsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：australsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignRing = "australsign.ring"

        /// SF Symbols's name：australsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case australsignRingDashed = "australsign.ring.dashed"

        /// SF Symbols's name：bahtsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignArrowTriangleheadCounterclockwiseRotate90 = "bahtsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：bahtsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignBankBuilding = "bahtsign.bank.building"

        /// SF Symbols's name：bahtsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignBankBuildingFill = "bahtsign.bank.building.fill"

        /// SF Symbols's name：bahtsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignGaugeChartLefthalfRighthalf = "bahtsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：bahtsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignGaugeChartLeftthirdTopthirdRightthird = "bahtsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：bahtsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignRing = "bahtsign.ring"

        /// SF Symbols's name：bahtsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bahtsignRingDashed = "bahtsign.ring.dashed"

        /// SF Symbols's name：base.unit
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case baseUnit = "base.unit"

        /// SF Symbols's name：baseball.diamond.bases.outs.indicator
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case baseballDiamondBasesOutsIndicator = "baseball.diamond.bases.outs.indicator"

        /// SF Symbols's name：batteryblock.stack
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case batteryblockStack = "batteryblock.stack"

        /// SF Symbols's name：batteryblock.stack.badge.snowflake
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case batteryblockStackBadgeSnowflake = "batteryblock.stack.badge.snowflake"

        /// SF Symbols's name：batteryblock.stack.badge.snowflake.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case batteryblockStackBadgeSnowflakeFill = "batteryblock.stack.badge.snowflake.fill"

        /// SF Symbols's name：batteryblock.stack.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case batteryblockStackFill = "batteryblock.stack.fill"

        /// SF Symbols's name：batteryblock.stack.trianglebadge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case batteryblockStackTrianglebadgeExclamationmark = "batteryblock.stack.trianglebadge.exclamationmark"

        /// SF Symbols's name：batteryblock.stack.trianglebadge.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case batteryblockStackTrianglebadgeExclamationmarkFill = "batteryblock.stack.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：beats.powerbeats.pro
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsPowerbeatsPro = "beats.powerbeats.pro"

        /// SF Symbols's name：beats.powerbeats.pro.chargingcase
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsPowerbeatsProChargingcase = "beats.powerbeats.pro.chargingcase"

        /// SF Symbols's name：beats.powerbeats.pro.chargingcase.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsPowerbeatsProChargingcaseFill = "beats.powerbeats.pro.chargingcase.fill"

        /// SF Symbols's name：beats.powerbeats.pro.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsPowerbeatsProLeft = "beats.powerbeats.pro.left"

        /// SF Symbols's name：beats.powerbeats.pro.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsPowerbeatsProRight = "beats.powerbeats.pro.right"

        /// SF Symbols's name：beats.studiobuds.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsLeft = "beats.studiobuds.left"

        /// SF Symbols's name：beats.studiobuds.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsPlus = "beats.studiobuds.plus"

        /// SF Symbols's name：beats.studiobuds.plus.chargingcase
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsPlusChargingcase = "beats.studiobuds.plus.chargingcase"

        /// SF Symbols's name：beats.studiobuds.plus.chargingcase.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsPlusChargingcaseFill = "beats.studiobuds.plus.chargingcase.fill"

        /// SF Symbols's name：beats.studiobuds.plus.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsPlusLeft = "beats.studiobuds.plus.left"

        /// SF Symbols's name：beats.studiobuds.plus.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsPlusRight = "beats.studiobuds.plus.right"

        /// SF Symbols's name：beats.studiobuds.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beatsStudiobudsRight = "beats.studiobuds.right"

        /// SF Symbols's name：beziercurve
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case beziercurve = "beziercurve"

        /// SF Symbols's name：bitcoinsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignArrowTriangleheadCounterclockwiseRotate90 = "bitcoinsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：bitcoinsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignBankBuilding = "bitcoinsign.bank.building"

        /// SF Symbols's name：bitcoinsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignBankBuildingFill = "bitcoinsign.bank.building.fill"

        /// SF Symbols's name：bitcoinsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignGaugeChartLefthalfRighthalf = "bitcoinsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：bitcoinsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignGaugeChartLeftthirdTopthirdRightthird = "bitcoinsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：bitcoinsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignRing = "bitcoinsign.ring"

        /// SF Symbols's name：bitcoinsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bitcoinsignRingDashed = "bitcoinsign.ring.dashed"

        /// SF Symbols's name：brazilianrealsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignArrowTriangleheadCounterclockwiseRotate90 = "brazilianrealsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：brazilianrealsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignBankBuilding = "brazilianrealsign.bank.building"

        /// SF Symbols's name：brazilianrealsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignBankBuildingFill = "brazilianrealsign.bank.building.fill"

        /// SF Symbols's name：brazilianrealsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignGaugeChartLefthalfRighthalf = "brazilianrealsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：brazilianrealsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignGaugeChartLeftthirdTopthirdRightthird = "brazilianrealsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：brazilianrealsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignRing = "brazilianrealsign.ring"

        /// SF Symbols's name：brazilianrealsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case brazilianrealsignRingDashed = "brazilianrealsign.ring.dashed"

        /// SF Symbols's name：bubble.and.pencil
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bubbleAndPencil = "bubble.and.pencil"

        /// SF Symbols's name：bubble.and.pencil.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case bubbleAndPencilRtl = "bubble.and.pencil.rtl"

        /// SF Symbols's name：calendar.and.person
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case calendarAndPerson = "calendar.and.person"

        /// SF Symbols's name：camera.macro.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cameraMacroSlash = "camera.macro.slash"

        /// SF Symbols's name：camera.macro.slash.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cameraMacroSlashCircle = "camera.macro.slash.circle"

        /// SF Symbols's name：camera.macro.slash.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cameraMacroSlashCircleFill = "camera.macro.slash.circle.fill"

        /// SF Symbols's name：capsule.on.capsule
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case capsuleOnCapsule = "capsule.on.capsule"

        /// SF Symbols's name：capsule.on.capsule.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case capsuleOnCapsuleFill = "capsule.on.capsule.fill"

        /// SF Symbols's name：capsule.on.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case capsuleOnRectangle = "capsule.on.rectangle"

        /// SF Symbols's name：capsule.on.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case capsuleOnRectangleFill = "capsule.on.rectangle.fill"

        /// SF Symbols's name：car.badge.gearshape
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carBadgeGearshape = "car.badge.gearshape"

        /// SF Symbols's name：car.badge.gearshape.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carBadgeGearshapeFill = "car.badge.gearshape.fill"

        /// SF Symbols's name：car.front.waves.left.and.right.and.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carFrontWavesLeftAndRightAndUp = "car.front.waves.left.and.right.and.up"

        /// SF Symbols's name：car.front.waves.left.and.right.and.up.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carFrontWavesLeftAndRightAndUpFill = "car.front.waves.left.and.right.and.up.fill"

        /// SF Symbols's name：car.rear.and.tire.marks.off
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearAndTireMarksOff = "car.rear.and.tire.marks.off"

        /// SF Symbols's name：car.rear.hazardsign
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearHazardsign = "car.rear.hazardsign"

        /// SF Symbols's name：car.rear.hazardsign.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearHazardsignFill = "car.rear.hazardsign.fill"

        /// SF Symbols's name：car.rear.road.lane.distance.1
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance1 = "car.rear.road.lane.distance.1"

        /// SF Symbols's name：car.rear.road.lane.distance.1.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance1AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = "car.rear.road.lane.distance.1.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle"

        /// SF Symbols's name：car.rear.road.lane.distance.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance2 = "car.rear.road.lane.distance.2"

        /// SF Symbols's name：car.rear.road.lane.distance.2.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance2AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = "car.rear.road.lane.distance.2.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle"

        /// SF Symbols's name：car.rear.road.lane.distance.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance3 = "car.rear.road.lane.distance.3"

        /// SF Symbols's name：car.rear.road.lane.distance.3.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance3AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = "car.rear.road.lane.distance.3.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle"

        /// SF Symbols's name：car.rear.road.lane.distance.4
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance4 = "car.rear.road.lane.distance.4"

        /// SF Symbols's name：car.rear.road.lane.distance.4.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance4AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = "car.rear.road.lane.distance.4.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle"

        /// SF Symbols's name：car.rear.road.lane.distance.5
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance5 = "car.rear.road.lane.distance.5"

        /// SF Symbols's name：car.rear.road.lane.distance.5.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneDistance5AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = "car.rear.road.lane.distance.5.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle"

        /// SF Symbols's name：car.rear.road.lane.off
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneOff = "car.rear.road.lane.off"

        /// SF Symbols's name：car.rear.road.lane.wave.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearRoadLaneWaveUp = "car.rear.road.lane.wave.up"

        /// SF Symbols's name：car.rear.tilt.road.lanes.curved.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carRearTiltRoadLanesCurvedRight = "car.rear.tilt.road.lanes.curved.right"

        /// SF Symbols's name：car.side.front.open.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideFrontOpenCrop = "car.side.front.open.crop"

        /// SF Symbols's name：car.side.front.open.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideFrontOpenCropFill = "car.side.front.open.crop.fill"

        /// SF Symbols's name：car.side.hill.descent.control
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideHillDescentControl = "car.side.hill.descent.control"

        /// SF Symbols's name：car.side.hill.descent.control.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideHillDescentControlFill = "car.side.hill.descent.control.fill"

        /// SF Symbols's name：car.side.rear.and.exclamationmark.and.car.side.front.off
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearAndExclamationmarkAndCarSideFrontOff = "car.side.rear.and.exclamationmark.and.car.side.front.off"

        /// SF Symbols's name：car.side.rear.crop.trunk.partition
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearCropTrunkPartition = "car.side.rear.crop.trunk.partition"

        /// SF Symbols's name：car.side.rear.crop.trunk.partition.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearCropTrunkPartitionFill = "car.side.rear.crop.trunk.partition.fill"

        /// SF Symbols's name：car.side.rear.open.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearOpenCrop = "car.side.rear.open.crop"

        /// SF Symbols's name：car.side.rear.open.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearOpenCropFill = "car.side.rear.open.crop.fill"

        /// SF Symbols's name：car.side.rear.tow.hitch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearTowHitch = "car.side.rear.tow.hitch"

        /// SF Symbols's name：car.side.rear.tow.hitch.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRearTowHitchFill = "car.side.rear.tow.hitch.fill"

        /// SF Symbols's name：car.side.roof.cargo.carrier
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRoofCargoCarrier = "car.side.roof.cargo.carrier"

        /// SF Symbols's name：car.side.roof.cargo.carrier.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRoofCargoCarrierFill = "car.side.roof.cargo.carrier.fill"

        /// SF Symbols's name：car.side.roof.cargo.carrier.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRoofCargoCarrierSlash = "car.side.roof.cargo.carrier.slash"

        /// SF Symbols's name：car.side.roof.cargo.carrier.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carSideRoofCargoCarrierSlashFill = "car.side.roof.cargo.carrier.slash.fill"

        /// SF Symbols's name：car.top.arrowtriangle.front.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleFrontLeft = "car.top.arrowtriangle.front.left"

        /// SF Symbols's name：car.top.arrowtriangle.front.left.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleFrontLeftFill = "car.top.arrowtriangle.front.left.fill"

        /// SF Symbols's name：car.top.arrowtriangle.front.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleFrontRight = "car.top.arrowtriangle.front.right"

        /// SF Symbols's name：car.top.arrowtriangle.front.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleFrontRightFill = "car.top.arrowtriangle.front.right.fill"

        /// SF Symbols's name：car.top.arrowtriangle.rear.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleRearLeft = "car.top.arrowtriangle.rear.left"

        /// SF Symbols's name：car.top.arrowtriangle.rear.left.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleRearLeftFill = "car.top.arrowtriangle.rear.left.fill"

        /// SF Symbols's name：car.top.arrowtriangle.rear.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleRearRight = "car.top.arrowtriangle.rear.right"

        /// SF Symbols's name：car.top.arrowtriangle.rear.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopArrowtriangleRearRightFill = "car.top.arrowtriangle.rear.right.fill"

        /// SF Symbols's name：car.top.front.radiowaves.front.left.and.front.and.front.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopFrontRadiowavesFrontLeftAndFrontAndFrontRight = "car.top.front.radiowaves.front.left.and.front.and.front.right"

        /// SF Symbols's name：car.top.front.radiowaves.front.left.and.front.and.front.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopFrontRadiowavesFrontLeftAndFrontAndFrontRightFill = "car.top.front.radiowaves.front.left.and.front.and.front.right.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.left.car.top.front
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopRadiowavesRearLeftCarTopFront = "car.top.radiowaves.rear.left.car.top.front"

        /// SF Symbols's name：car.top.radiowaves.rear.left.car.top.front.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopRadiowavesRearLeftCarTopFrontFill = "car.top.radiowaves.rear.left.car.top.front.fill"

        /// SF Symbols's name：car.top.radiowaves.rear.right.car.top.front
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopRadiowavesRearRightCarTopFront = "car.top.radiowaves.rear.right.car.top.front"

        /// SF Symbols's name：car.top.radiowaves.rear.right.car.top.front.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopRadiowavesRearRightCarTopFrontFill = "car.top.radiowaves.rear.right.car.top.front.fill"

        /// SF Symbols's name：car.top.rear.radiowaves.rear.left.and.rear.and.rear.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopRearRadiowavesRearLeftAndRearAndRearRight = "car.top.rear.radiowaves.rear.left.and.rear.and.rear.right"

        /// SF Symbols's name：car.top.rear.radiowaves.rear.left.and.rear.and.rear.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopRearRadiowavesRearLeftAndRearAndRearRightFill = "car.top.rear.radiowaves.rear.left.and.rear.and.rear.right.fill"

        /// SF Symbols's name：car.top.video.rear.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopVideoRearLeft = "car.top.video.rear.left"

        /// SF Symbols's name：car.top.video.rear.left.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopVideoRearLeftFill = "car.top.video.rear.left.fill"

        /// SF Symbols's name：car.top.video.rear.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopVideoRearRight = "car.top.video.rear.right"

        /// SF Symbols's name：car.top.video.rear.right.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case carTopVideoRearRightFill = "car.top.video.rear.right.fill"

        /// SF Symbols's name：cart.badge.clock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cartBadgeClock = "cart.badge.clock"

        /// SF Symbols's name：cart.badge.clock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cartBadgeClockFill = "cart.badge.clock.fill"

        /// SF Symbols's name：cart.badge.clock.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cartBadgeClockFillRtl = "cart.badge.clock.fill.rtl"

        /// SF Symbols's name：cart.badge.clock.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cartBadgeClockRtl = "cart.badge.clock.rtl"

        /// SF Symbols's name：cedisign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignArrowTriangleheadCounterclockwiseRotate90 = "cedisign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：cedisign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignBankBuilding = "cedisign.bank.building"

        /// SF Symbols's name：cedisign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignBankBuildingFill = "cedisign.bank.building.fill"

        /// SF Symbols's name：cedisign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignGaugeChartLefthalfRighthalf = "cedisign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：cedisign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignGaugeChartLeftthirdTopthirdRightthird = "cedisign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：cedisign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignRing = "cedisign.ring"

        /// SF Symbols's name：cedisign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cedisignRingDashed = "cedisign.ring.dashed"

        /// SF Symbols's name：centsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignArrowTriangleheadCounterclockwiseRotate90 = "centsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：centsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignBankBuilding = "centsign.bank.building"

        /// SF Symbols's name：centsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignBankBuildingFill = "centsign.bank.building.fill"

        /// SF Symbols's name：centsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignGaugeChartLefthalfRighthalf = "centsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：centsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignGaugeChartLeftthirdTopthirdRightthird = "centsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：centsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignRing = "centsign.ring"

        /// SF Symbols's name：centsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case centsignRingDashed = "centsign.ring.dashed"

        /// SF Symbols's name：character.bn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterBn = "character.bn"

        /// SF Symbols's name：character.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircle = "character.circle"

        /// SF Symbols's name：character.circle.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleAr = "character.circle.ar"

        /// SF Symbols's name：character.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFill = "character.circle.fill"

        /// SF Symbols's name：character.circle.fill.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillAr = "character.circle.fill.ar"

        /// SF Symbols's name：character.circle.fill.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillHe = "character.circle.fill.he"

        /// SF Symbols's name：character.circle.fill.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillHi = "character.circle.fill.hi"

        /// SF Symbols's name：character.circle.fill.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillJa = "character.circle.fill.ja"

        /// SF Symbols's name：character.circle.fill.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillKo = "character.circle.fill.ko"

        /// SF Symbols's name：character.circle.fill.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillTh = "character.circle.fill.th"

        /// SF Symbols's name：character.circle.fill.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleFillZh = "character.circle.fill.zh"

        /// SF Symbols's name：character.circle.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleHe = "character.circle.he"

        /// SF Symbols's name：character.circle.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleHi = "character.circle.hi"

        /// SF Symbols's name：character.circle.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleJa = "character.circle.ja"

        /// SF Symbols's name：character.circle.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleKo = "character.circle.ko"

        /// SF Symbols's name：character.circle.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleTh = "character.circle.th"

        /// SF Symbols's name：character.circle.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterCircleZh = "character.circle.zh"

        /// SF Symbols's name：character.gu
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterGu = "character.gu"

        /// SF Symbols's name：character.kn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterKn = "character.kn"

        /// SF Symbols's name：character.ml
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterMl = "character.ml"

        /// SF Symbols's name：character.mni
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterMni = "character.mni"

        /// SF Symbols's name：character.mr
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterMr = "character.mr"

        /// SF Symbols's name：character.or
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterOr = "character.or"

        /// SF Symbols's name：character.pa
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterPa = "character.pa"

        /// SF Symbols's name：character.sat
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSat = "character.sat"

        /// SF Symbols's name：character.si
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSi = "character.si"

        /// SF Symbols's name：character.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquare = "character.square"

        /// SF Symbols's name：character.square.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareAr = "character.square.ar"

        /// SF Symbols's name：character.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFill = "character.square.fill"

        /// SF Symbols's name：character.square.fill.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillAr = "character.square.fill.ar"

        /// SF Symbols's name：character.square.fill.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillHe = "character.square.fill.he"

        /// SF Symbols's name：character.square.fill.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillHi = "character.square.fill.hi"

        /// SF Symbols's name：character.square.fill.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillJa = "character.square.fill.ja"

        /// SF Symbols's name：character.square.fill.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillKo = "character.square.fill.ko"

        /// SF Symbols's name：character.square.fill.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillTh = "character.square.fill.th"

        /// SF Symbols's name：character.square.fill.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareFillZh = "character.square.fill.zh"

        /// SF Symbols's name：character.square.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareHe = "character.square.he"

        /// SF Symbols's name：character.square.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareHi = "character.square.hi"

        /// SF Symbols's name：character.square.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareJa = "character.square.ja"

        /// SF Symbols's name：character.square.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareKo = "character.square.ko"

        /// SF Symbols's name：character.square.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareTh = "character.square.th"

        /// SF Symbols's name：character.square.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterSquareZh = "character.square.zh"

        /// SF Symbols's name：character.ta
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterTa = "character.ta"

        /// SF Symbols's name：character.te
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case characterTe = "character.te"

        /// SF Symbols's name：characters.lowercase
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case charactersLowercase = "characters.lowercase"

        /// SF Symbols's name：characters.lowercase.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case charactersLowercaseEl = "characters.lowercase.el"

        /// SF Symbols's name：characters.lowercase.ru
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case charactersLowercaseRu = "characters.lowercase.ru"

        /// SF Symbols's name：characters.uppercase
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case charactersUppercase = "characters.uppercase"

        /// SF Symbols's name：characters.uppercase.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case charactersUppercaseEl = "characters.uppercase.el"

        /// SF Symbols's name：characters.uppercase.ru
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case charactersUppercaseRu = "characters.uppercase.ru"

        /// SF Symbols's name：chart.bar.horizontal.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chartBarHorizontalPage = "chart.bar.horizontal.page"

        /// SF Symbols's name：chart.bar.horizontal.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chartBarHorizontalPageFill = "chart.bar.horizontal.page.fill"

        /// SF Symbols's name：chart.bar.yaxis
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chartBarYaxis = "chart.bar.yaxis"

        /// SF Symbols's name：chart.line.text.clipboard
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chartLineTextClipboard = "chart.line.text.clipboard"

        /// SF Symbols's name：chart.line.text.clipboard.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chartLineTextClipboardFill = "chart.line.text.clipboard.fill"

        /// SF Symbols's name：checkmark.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case checkmarkArrowTriangleheadCounterclockwise = "checkmark.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：checkmark.seal.text.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case checkmarkSealTextPage = "checkmark.seal.text.page"

        /// SF Symbols's name：checkmark.seal.text.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case checkmarkSealTextPageFill = "checkmark.seal.text.page.fill"

        /// SF Symbols's name：checkmark.seal.text.page.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case checkmarkSealTextPageFillRtl = "checkmark.seal.text.page.fill.rtl"

        /// SF Symbols's name：checkmark.seal.text.page.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case checkmarkSealTextPageRtl = "checkmark.seal.text.page.rtl"

        /// SF Symbols's name：chevron.backward.chevron.backward.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronBackwardChevronBackwardDotted = "chevron.backward.chevron.backward.dotted"

        /// SF Symbols's name：chevron.compact.left.chevron.compact.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronCompactLeftChevronCompactRight = "chevron.compact.left.chevron.compact.right"

        /// SF Symbols's name：chevron.compact.up.chevron.compact.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronCompactUpChevronCompactDown = "chevron.compact.up.chevron.compact.down"

        /// SF Symbols's name：chevron.compact.up.chevron.compact.right.chevron.compact.down.chevron.compact.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronCompactUpChevronCompactRightChevronCompactDownChevronCompactLeft = "chevron.compact.up.chevron.compact.right.chevron.compact.down.chevron.compact.left"

        /// SF Symbols's name：chevron.down.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronDown2 = "chevron.down.2"

        /// SF Symbols's name：chevron.down.dotted.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronDownDotted2 = "chevron.down.dotted.2"

        /// SF Symbols's name：chevron.down.forward.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronDownForward2 = "chevron.down.forward.2"

        /// SF Symbols's name：chevron.down.forward.dotted.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronDownForwardDotted2 = "chevron.down.forward.dotted.2"

        /// SF Symbols's name：chevron.down.right.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronDownRight2 = "chevron.down.right.2"

        /// SF Symbols's name：chevron.down.right.dotted.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronDownRightDotted2 = "chevron.down.right.dotted.2"

        /// SF Symbols's name：chevron.forward.dotted.chevron.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronForwardDottedChevronForward = "chevron.forward.dotted.chevron.forward"

        /// SF Symbols's name：chevron.left.chevron.left.dotted
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronLeftChevronLeftDotted = "chevron.left.chevron.left.dotted"

        /// SF Symbols's name：chevron.left.chevron.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronLeftChevronRight = "chevron.left.chevron.right"

        /// SF Symbols's name：chevron.right.dotted.chevron.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronRightDottedChevronRight = "chevron.right.dotted.chevron.right"

        /// SF Symbols's name：chevron.up.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUp2 = "chevron.up.2"

        /// SF Symbols's name：chevron.up.chevron.down.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpChevronDownSquare = "chevron.up.chevron.down.square"

        /// SF Symbols's name：chevron.up.chevron.down.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpChevronDownSquareFill = "chevron.up.chevron.down.square.fill"

        /// SF Symbols's name：chevron.up.chevron.right.chevron.down.chevron.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpChevronRightChevronDownChevronLeft = "chevron.up.chevron.right.chevron.down.chevron.left"

        /// SF Symbols's name：chevron.up.dotted.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpDotted2 = "chevron.up.dotted.2"

        /// SF Symbols's name：chevron.up.forward.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpForward2 = "chevron.up.forward.2"

        /// SF Symbols's name：chevron.up.forward.dotted.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpForwardDotted2 = "chevron.up.forward.dotted.2"

        /// SF Symbols's name：chevron.up.right.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpRight2 = "chevron.up.right.2"

        /// SF Symbols's name：chevron.up.right.dotted.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chevronUpRightDotted2 = "chevron.up.right.dotted.2"

        /// SF Symbols's name：chineseyuanrenminbisign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignArrowTriangleheadCounterclockwiseRotate90 = "chineseyuanrenminbisign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：chineseyuanrenminbisign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignBankBuilding = "chineseyuanrenminbisign.bank.building"

        /// SF Symbols's name：chineseyuanrenminbisign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignBankBuildingFill = "chineseyuanrenminbisign.bank.building.fill"

        /// SF Symbols's name：chineseyuanrenminbisign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignGaugeChartLefthalfRighthalf = "chineseyuanrenminbisign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：chineseyuanrenminbisign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignGaugeChartLeftthirdTopthirdRightthird = "chineseyuanrenminbisign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：chineseyuanrenminbisign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignRing = "chineseyuanrenminbisign.ring"

        /// SF Symbols's name：chineseyuanrenminbisign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case chineseyuanrenminbisignRingDashed = "chineseyuanrenminbisign.ring.dashed"

        /// SF Symbols's name：circle.bottomrighthalf.pattern.checkered
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case circleBottomrighthalfPatternCheckered = "circle.bottomrighthalf.pattern.checkered"

        /// SF Symbols's name：clock.arrow.trianglehead.2.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case clockArrowTrianglehead2CounterclockwiseRotate90 = "clock.arrow.trianglehead.2.counterclockwise.rotate.90"

        /// SF Symbols's name：clock.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case clockArrowTriangleheadCounterclockwiseRotate90 = "clock.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：cloud.rainbow.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cloudRainbowCrop = "cloud.rainbow.crop"

        /// SF Symbols's name：cloud.rainbow.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cloudRainbowCropFill = "cloud.rainbow.crop.fill"

        /// SF Symbols's name：coat
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coat = "coat"

        /// SF Symbols's name：coat.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coatFill = "coat.fill"

        /// SF Symbols's name：coloncurrencysign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignArrowTriangleheadCounterclockwiseRotate90 = "coloncurrencysign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：coloncurrencysign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignBankBuilding = "coloncurrencysign.bank.building"

        /// SF Symbols's name：coloncurrencysign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignBankBuildingFill = "coloncurrencysign.bank.building.fill"

        /// SF Symbols's name：coloncurrencysign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignGaugeChartLefthalfRighthalf = "coloncurrencysign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：coloncurrencysign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignGaugeChartLeftthirdTopthirdRightthird = "coloncurrencysign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：coloncurrencysign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignRing = "coloncurrencysign.ring"

        /// SF Symbols's name：coloncurrencysign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case coloncurrencysignRingDashed = "coloncurrencysign.ring.dashed"

        /// SF Symbols's name：convertible.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSide = "convertible.side"

        /// SF Symbols's name：convertible.side.air.circulate
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideAirCirculate = "convertible.side.air.circulate"

        /// SF Symbols's name：convertible.side.air.circulate.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideAirCirculateFill = "convertible.side.air.circulate.fill"

        /// SF Symbols's name：convertible.side.air.fresh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideAirFresh = "convertible.side.air.fresh"

        /// SF Symbols's name：convertible.side.air.fresh.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideAirFreshFill = "convertible.side.air.fresh.fill"

        /// SF Symbols's name：convertible.side.and.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideAndExclamationmark = "convertible.side.and.exclamationmark"

        /// SF Symbols's name：convertible.side.and.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideAndExclamationmarkFill = "convertible.side.and.exclamationmark.fill"

        /// SF Symbols's name：convertible.side.arrow.trianglehead.backward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowTriangleheadBackward = "convertible.side.arrow.trianglehead.backward"

        /// SF Symbols's name：convertible.side.arrow.trianglehead.backward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowTriangleheadBackwardFill = "convertible.side.arrow.trianglehead.backward.fill"

        /// SF Symbols's name：convertible.side.arrow.trianglehead.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowTriangleheadForward = "convertible.side.arrow.trianglehead.forward"

        /// SF Symbols's name：convertible.side.arrow.trianglehead.forward.and.backward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowTriangleheadForwardAndBackward = "convertible.side.arrow.trianglehead.forward.and.backward"

        /// SF Symbols's name：convertible.side.arrow.trianglehead.forward.and.backward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowTriangleheadForwardAndBackwardFill = "convertible.side.arrow.trianglehead.forward.and.backward.fill"

        /// SF Symbols's name：convertible.side.arrow.trianglehead.forward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowTriangleheadForwardFill = "convertible.side.arrow.trianglehead.forward.fill"

        /// SF Symbols's name：convertible.side.arrowtriangle.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowtriangleDown = "convertible.side.arrowtriangle.down"

        /// SF Symbols's name：convertible.side.arrowtriangle.down.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowtriangleDownFill = "convertible.side.arrowtriangle.down.fill"

        /// SF Symbols's name：convertible.side.arrowtriangle.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowtriangleUp = "convertible.side.arrowtriangle.up"

        /// SF Symbols's name：convertible.side.arrowtriangle.up.arrowtriangle.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowtriangleUpArrowtriangleDown = "convertible.side.arrowtriangle.up.arrowtriangle.down"

        /// SF Symbols's name：convertible.side.arrowtriangle.up.arrowtriangle.down.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowtriangleUpArrowtriangleDownFill = "convertible.side.arrowtriangle.up.arrowtriangle.down.fill"

        /// SF Symbols's name：convertible.side.arrowtriangle.up.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideArrowtriangleUpFill = "convertible.side.arrowtriangle.up.fill"

        /// SF Symbols's name：convertible.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideFill = "convertible.side.fill"

        /// SF Symbols's name：convertible.side.front.open
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideFrontOpen = "convertible.side.front.open"

        /// SF Symbols's name：convertible.side.front.open.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideFrontOpenCrop = "convertible.side.front.open.crop"

        /// SF Symbols's name：convertible.side.front.open.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideFrontOpenCropFill = "convertible.side.front.open.crop.fill"

        /// SF Symbols's name：convertible.side.front.open.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideFrontOpenFill = "convertible.side.front.open.fill"

        /// SF Symbols's name：convertible.side.hill.descent.control
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideHillDescentControl = "convertible.side.hill.descent.control"

        /// SF Symbols's name：convertible.side.hill.descent.control.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideHillDescentControlFill = "convertible.side.hill.descent.control.fill"

        /// SF Symbols's name：convertible.side.hill.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideHillDown = "convertible.side.hill.down"

        /// SF Symbols's name：convertible.side.hill.down.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideHillDownFill = "convertible.side.hill.down.fill"

        /// SF Symbols's name：convertible.side.hill.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideHillUp = "convertible.side.hill.up"

        /// SF Symbols's name：convertible.side.hill.up.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideHillUpFill = "convertible.side.hill.up.fill"

        /// SF Symbols's name：convertible.side.lock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideLock = "convertible.side.lock"

        /// SF Symbols's name：convertible.side.lock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideLockFill = "convertible.side.lock.fill"

        /// SF Symbols's name：convertible.side.lock.open
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideLockOpen = "convertible.side.lock.open"

        /// SF Symbols's name：convertible.side.lock.open.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case convertibleSideLockOpenFill = "convertible.side.lock.open.fill"

        /// SF Symbols's name：cruzeirosign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignArrowTriangleheadCounterclockwiseRotate90 = "cruzeirosign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：cruzeirosign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignBankBuilding = "cruzeirosign.bank.building"

        /// SF Symbols's name：cruzeirosign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignBankBuildingFill = "cruzeirosign.bank.building.fill"

        /// SF Symbols's name：cruzeirosign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignGaugeChartLefthalfRighthalf = "cruzeirosign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：cruzeirosign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignGaugeChartLeftthirdTopthirdRightthird = "cruzeirosign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：cruzeirosign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignRing = "cruzeirosign.ring"

        /// SF Symbols's name：cruzeirosign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cruzeirosignRingDashed = "cruzeirosign.ring.dashed"

        /// SF Symbols's name：cup.and.heat.waves
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cupAndHeatWaves = "cup.and.heat.waves"

        /// SF Symbols's name：cup.and.heat.waves.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case cupAndHeatWavesFill = "cup.and.heat.waves.fill"

        /// SF Symbols's name：danishkronesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignArrowTriangleheadCounterclockwiseRotate90 = "danishkronesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：danishkronesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignBankBuilding = "danishkronesign.bank.building"

        /// SF Symbols's name：danishkronesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignBankBuildingFill = "danishkronesign.bank.building.fill"

        /// SF Symbols's name：danishkronesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignGaugeChartLefthalfRighthalf = "danishkronesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：danishkronesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignGaugeChartLeftthirdTopthirdRightthird = "danishkronesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：danishkronesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignRing = "danishkronesign.ring"

        /// SF Symbols's name：danishkronesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case danishkronesignRingDashed = "danishkronesign.ring.dashed"

        /// SF Symbols's name：degreesign.celsius
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case degreesignCelsius = "degreesign.celsius"

        /// SF Symbols's name：degreesign.fahrenheit
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case degreesignFahrenheit = "degreesign.fahrenheit"

        /// SF Symbols's name：desktopcomputer.and.macbook
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case desktopcomputerAndMacbook = "desktopcomputer.and.macbook"

        /// SF Symbols's name：distribute.horizontal
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case distributeHorizontal = "distribute.horizontal"

        /// SF Symbols's name：distribute.horizontal.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case distributeHorizontalFill = "distribute.horizontal.fill"

        /// SF Symbols's name：distribute.vertical
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case distributeVertical = "distribute.vertical"

        /// SF Symbols's name：distribute.vertical.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case distributeVerticalFill = "distribute.vertical.fill"

        /// SF Symbols's name：document
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case document = "document"

        /// SF Symbols's name：document.badge.arrow.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeArrowUp = "document.badge.arrow.up"

        /// SF Symbols's name：document.badge.arrow.up.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeArrowUpFill = "document.badge.arrow.up.fill"

        /// SF Symbols's name：document.badge.clock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeClock = "document.badge.clock"

        /// SF Symbols's name：document.badge.clock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeClockFill = "document.badge.clock.fill"

        /// SF Symbols's name：document.badge.ellipsis
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeEllipsis = "document.badge.ellipsis"

        /// SF Symbols's name：document.badge.ellipsis.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeEllipsisFill = "document.badge.ellipsis.fill"

        /// SF Symbols's name：document.badge.gearshape
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeGearshape = "document.badge.gearshape"

        /// SF Symbols's name：document.badge.gearshape.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgeGearshapeFill = "document.badge.gearshape.fill"

        /// SF Symbols's name：document.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgePlus = "document.badge.plus"

        /// SF Symbols's name：document.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentBadgePlusFill = "document.badge.plus.fill"

        /// SF Symbols's name：document.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentCircle = "document.circle"

        /// SF Symbols's name：document.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentCircleFill = "document.circle.fill"

        /// SF Symbols's name：document.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentFill = "document.fill"

        /// SF Symbols's name：document.on.clipboard
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentOnClipboard = "document.on.clipboard"

        /// SF Symbols's name：document.on.clipboard.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentOnClipboardFill = "document.on.clipboard.fill"

        /// SF Symbols's name：document.on.document
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentOnDocument = "document.on.document"

        /// SF Symbols's name：document.on.document.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentOnDocumentFill = "document.on.document.fill"

        /// SF Symbols's name：document.viewfinder
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentViewfinder = "document.viewfinder"

        /// SF Symbols's name：document.viewfinder.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case documentViewfinderFill = "document.viewfinder.fill"

        /// SF Symbols's name：dollarsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignArrowTriangleheadCounterclockwiseRotate90 = "dollarsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：dollarsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignBankBuilding = "dollarsign.bank.building"

        /// SF Symbols's name：dollarsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignBankBuildingFill = "dollarsign.bank.building.fill"

        /// SF Symbols's name：dollarsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignGaugeChartLefthalfRighthalf = "dollarsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：dollarsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignGaugeChartLeftthirdTopthirdRightthird = "dollarsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：dollarsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignRing = "dollarsign.ring"

        /// SF Symbols's name：dollarsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dollarsignRingDashed = "dollarsign.ring.dashed"

        /// SF Symbols's name：dongsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignArrowTriangleheadCounterclockwiseRotate90 = "dongsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：dongsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignBankBuilding = "dongsign.bank.building"

        /// SF Symbols's name：dongsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignBankBuildingFill = "dongsign.bank.building.fill"

        /// SF Symbols's name：dongsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignGaugeChartLefthalfRighthalf = "dongsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：dongsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignGaugeChartLeftthirdTopthirdRightthird = "dongsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：dongsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignRing = "dongsign.ring"

        /// SF Symbols's name：dongsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case dongsignRingDashed = "dongsign.ring.dashed"

        /// SF Symbols's name：drone
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case drone = "drone"

        /// SF Symbols's name：drone.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case droneFill = "drone.fill"

        /// SF Symbols's name：duffle.bag
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case duffleBag = "duffle.bag"

        /// SF Symbols's name：duffle.bag.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case duffleBagFill = "duffle.bag.fill"

        /// SF Symbols's name：ecg.text.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ecgTextPage = "ecg.text.page"

        /// SF Symbols's name：ecg.text.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ecgTextPageFill = "ecg.text.page.fill"

        /// SF Symbols's name：ecg.text.page.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ecgTextPageFillRtl = "ecg.text.page.fill.rtl"

        /// SF Symbols's name：ecg.text.page.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ecgTextPageRtl = "ecg.text.page.rtl"

        /// SF Symbols's name：engine.emission.and.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case engineEmissionAndExclamationmark = "engine.emission.and.exclamationmark"

        /// SF Symbols's name：engine.emission.and.filter
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case engineEmissionAndFilter = "engine.emission.and.filter"

        /// SF Symbols's name：envelope.and.arrow.trianglehead.branch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case envelopeAndArrowTriangleheadBranch = "envelope.and.arrow.trianglehead.branch"

        /// SF Symbols's name：envelope.and.arrow.trianglehead.branch.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case envelopeAndArrowTriangleheadBranchFill = "envelope.and.arrow.trianglehead.branch.fill"

        /// SF Symbols's name：envelope.front
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case envelopeFront = "envelope.front"

        /// SF Symbols's name：envelope.front.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case envelopeFrontFill = "envelope.front.fill"

        /// SF Symbols's name：envelope.front.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case envelopeFrontFillRtl = "envelope.front.fill.rtl"

        /// SF Symbols's name：envelope.front.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case envelopeFrontRtl = "envelope.front.rtl"

        /// SF Symbols's name：eurosign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignArrowTriangleheadCounterclockwiseRotate90 = "eurosign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：eurosign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignBankBuilding = "eurosign.bank.building"

        /// SF Symbols's name：eurosign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignBankBuildingFill = "eurosign.bank.building.fill"

        /// SF Symbols's name：eurosign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignGaugeChartLefthalfRighthalf = "eurosign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：eurosign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignGaugeChartLeftthirdTopthirdRightthird = "eurosign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：eurosign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignRing = "eurosign.ring"

        /// SF Symbols's name：eurosign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurosignRingDashed = "eurosign.ring.dashed"

        /// SF Symbols's name：eurozonesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignArrowTriangleheadCounterclockwiseRotate90 = "eurozonesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：eurozonesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignBankBuilding = "eurozonesign.bank.building"

        /// SF Symbols's name：eurozonesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignBankBuildingFill = "eurozonesign.bank.building.fill"

        /// SF Symbols's name：eurozonesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignGaugeChartLefthalfRighthalf = "eurozonesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：eurozonesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignGaugeChartLeftthirdTopthirdRightthird = "eurozonesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：eurozonesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignRing = "eurozonesign.ring"

        /// SF Symbols's name：eurozonesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case eurozonesignRingDashed = "eurozonesign.ring.dashed"

        /// SF Symbols's name：exclamationmark.arrow.trianglehead.2.clockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case exclamationmarkArrowTrianglehead2ClockwiseRotate90 = "exclamationmark.arrow.trianglehead.2.clockwise.rotate.90"

        /// SF Symbols's name：exclamationmark.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case exclamationmarkArrowTriangleheadCounterclockwiseRotate90 = "exclamationmark.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：figure.2.left.holdinghands
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figure2LeftHoldinghands = "figure.2.left.holdinghands"

        /// SF Symbols's name：figure.2.right.holdinghands
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figure2RightHoldinghands = "figure.2.right.holdinghands"

        /// SF Symbols's name：figure.american.football.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureAmericanFootballCircle = "figure.american.football.circle"

        /// SF Symbols's name：figure.american.football.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureAmericanFootballCircleFill = "figure.american.football.circle.fill"

        /// SF Symbols's name：figure.archery.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureArcheryCircle = "figure.archery.circle"

        /// SF Symbols's name：figure.archery.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureArcheryCircleFill = "figure.archery.circle.fill"

        /// SF Symbols's name：figure.australian.football.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureAustralianFootballCircle = "figure.australian.football.circle"

        /// SF Symbols's name：figure.australian.football.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureAustralianFootballCircleFill = "figure.australian.football.circle.fill"

        /// SF Symbols's name：figure.badminton.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBadmintonCircle = "figure.badminton.circle"

        /// SF Symbols's name：figure.badminton.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBadmintonCircleFill = "figure.badminton.circle.fill"

        /// SF Symbols's name：figure.barre.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBarreCircle = "figure.barre.circle"

        /// SF Symbols's name：figure.barre.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBarreCircleFill = "figure.barre.circle.fill"

        /// SF Symbols's name：figure.baseball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBaseballCircle = "figure.baseball.circle"

        /// SF Symbols's name：figure.baseball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBaseballCircleFill = "figure.baseball.circle.fill"

        /// SF Symbols's name：figure.basketball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBasketballCircle = "figure.basketball.circle"

        /// SF Symbols's name：figure.basketball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBasketballCircleFill = "figure.basketball.circle.fill"

        /// SF Symbols's name：figure.bowling.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBowlingCircle = "figure.bowling.circle"

        /// SF Symbols's name：figure.bowling.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBowlingCircleFill = "figure.bowling.circle.fill"

        /// SF Symbols's name：figure.boxing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBoxingCircle = "figure.boxing.circle"

        /// SF Symbols's name：figure.boxing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureBoxingCircleFill = "figure.boxing.circle.fill"

        /// SF Symbols's name：figure.climbing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureClimbingCircle = "figure.climbing.circle"

        /// SF Symbols's name：figure.climbing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureClimbingCircleFill = "figure.climbing.circle.fill"

        /// SF Symbols's name：figure.cooldown.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCooldownCircle = "figure.cooldown.circle"

        /// SF Symbols's name：figure.cooldown.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCooldownCircleFill = "figure.cooldown.circle.fill"

        /// SF Symbols's name：figure.core.training.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCoreTrainingCircle = "figure.core.training.circle"

        /// SF Symbols's name：figure.core.training.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCoreTrainingCircleFill = "figure.core.training.circle.fill"

        /// SF Symbols's name：figure.cricket.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCricketCircle = "figure.cricket.circle"

        /// SF Symbols's name：figure.cricket.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCricketCircleFill = "figure.cricket.circle.fill"

        /// SF Symbols's name：figure.cross.training.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCrossTrainingCircle = "figure.cross.training.circle"

        /// SF Symbols's name：figure.cross.training.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCrossTrainingCircleFill = "figure.cross.training.circle.fill"

        /// SF Symbols's name：figure.curling.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCurlingCircle = "figure.curling.circle"

        /// SF Symbols's name：figure.curling.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureCurlingCircleFill = "figure.curling.circle.fill"

        /// SF Symbols's name：figure.dance.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureDanceCircle = "figure.dance.circle"

        /// SF Symbols's name：figure.dance.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureDanceCircleFill = "figure.dance.circle.fill"

        /// SF Symbols's name：figure.disc.sports.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureDiscSportsCircle = "figure.disc.sports.circle"

        /// SF Symbols's name：figure.disc.sports.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureDiscSportsCircleFill = "figure.disc.sports.circle.fill"

        /// SF Symbols's name：figure.elliptical.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureEllipticalCircle = "figure.elliptical.circle"

        /// SF Symbols's name：figure.elliptical.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureEllipticalCircleFill = "figure.elliptical.circle.fill"

        /// SF Symbols's name：figure.equestrian.sports.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureEquestrianSportsCircle = "figure.equestrian.sports.circle"

        /// SF Symbols's name：figure.equestrian.sports.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureEquestrianSportsCircleFill = "figure.equestrian.sports.circle.fill"

        /// SF Symbols's name：figure.fencing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFencingCircle = "figure.fencing.circle"

        /// SF Symbols's name：figure.fencing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFencingCircleFill = "figure.fencing.circle.fill"

        /// SF Symbols's name：figure.field.hockey
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFieldHockey = "figure.field.hockey"

        /// SF Symbols's name：figure.field.hockey.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFieldHockeyCircle = "figure.field.hockey.circle"

        /// SF Symbols's name：figure.field.hockey.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFieldHockeyCircleFill = "figure.field.hockey.circle.fill"

        /// SF Symbols's name：figure.fishing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFishingCircle = "figure.fishing.circle"

        /// SF Symbols's name：figure.fishing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFishingCircleFill = "figure.fishing.circle.fill"

        /// SF Symbols's name：figure.flexibility.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFlexibilityCircle = "figure.flexibility.circle"

        /// SF Symbols's name：figure.flexibility.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureFlexibilityCircleFill = "figure.flexibility.circle.fill"

        /// SF Symbols's name：figure.golf.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureGolfCircle = "figure.golf.circle"

        /// SF Symbols's name：figure.golf.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureGolfCircleFill = "figure.golf.circle.fill"

        /// SF Symbols's name：figure.gymnastics.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureGymnasticsCircle = "figure.gymnastics.circle"

        /// SF Symbols's name：figure.gymnastics.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureGymnasticsCircleFill = "figure.gymnastics.circle.fill"

        /// SF Symbols's name：figure.hand.cycling.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHandCyclingCircle = "figure.hand.cycling.circle"

        /// SF Symbols's name：figure.hand.cycling.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHandCyclingCircleFill = "figure.hand.cycling.circle.fill"

        /// SF Symbols's name：figure.handball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHandballCircle = "figure.handball.circle"

        /// SF Symbols's name：figure.handball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHandballCircleFill = "figure.handball.circle.fill"

        /// SF Symbols's name：figure.highintensity.intervaltraining.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHighintensityIntervaltrainingCircle = "figure.highintensity.intervaltraining.circle"

        /// SF Symbols's name：figure.highintensity.intervaltraining.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHighintensityIntervaltrainingCircleFill = "figure.highintensity.intervaltraining.circle.fill"

        /// SF Symbols's name：figure.hiking.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHikingCircle = "figure.hiking.circle"

        /// SF Symbols's name：figure.hiking.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHikingCircleFill = "figure.hiking.circle.fill"

        /// SF Symbols's name：figure.hockey.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHockeyCircle = "figure.hockey.circle"

        /// SF Symbols's name：figure.hockey.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHockeyCircleFill = "figure.hockey.circle.fill"

        /// SF Symbols's name：figure.hunting.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHuntingCircle = "figure.hunting.circle"

        /// SF Symbols's name：figure.hunting.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureHuntingCircleFill = "figure.hunting.circle.fill"

        /// SF Symbols's name：figure.ice.hockey
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIceHockey = "figure.ice.hockey"

        /// SF Symbols's name：figure.ice.hockey.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIceHockeyCircle = "figure.ice.hockey.circle"

        /// SF Symbols's name：figure.ice.hockey.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIceHockeyCircleFill = "figure.ice.hockey.circle.fill"

        /// SF Symbols's name：figure.ice.skating
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIceSkating = "figure.ice.skating"

        /// SF Symbols's name：figure.ice.skating.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIceSkatingCircle = "figure.ice.skating.circle"

        /// SF Symbols's name：figure.ice.skating.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIceSkatingCircleFill = "figure.ice.skating.circle.fill"

        /// SF Symbols's name：figure.indoor.cycle.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorCycleCircle = "figure.indoor.cycle.circle"

        /// SF Symbols's name：figure.indoor.cycle.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorCycleCircleFill = "figure.indoor.cycle.circle.fill"

        /// SF Symbols's name：figure.indoor.rowing
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorRowing = "figure.indoor.rowing"

        /// SF Symbols's name：figure.indoor.rowing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorRowingCircle = "figure.indoor.rowing.circle"

        /// SF Symbols's name：figure.indoor.rowing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorRowingCircleFill = "figure.indoor.rowing.circle.fill"

        /// SF Symbols's name：figure.indoor.soccer
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorSoccer = "figure.indoor.soccer"

        /// SF Symbols's name：figure.indoor.soccer.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorSoccerCircle = "figure.indoor.soccer.circle"

        /// SF Symbols's name：figure.indoor.soccer.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureIndoorSoccerCircleFill = "figure.indoor.soccer.circle.fill"

        /// SF Symbols's name：figure.jumprope.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureJumpropeCircle = "figure.jumprope.circle"

        /// SF Symbols's name：figure.jumprope.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureJumpropeCircleFill = "figure.jumprope.circle.fill"

        /// SF Symbols's name：figure.kickboxing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureKickboxingCircle = "figure.kickboxing.circle"

        /// SF Symbols's name：figure.kickboxing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureKickboxingCircleFill = "figure.kickboxing.circle.fill"

        /// SF Symbols's name：figure.lacrosse.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureLacrosseCircle = "figure.lacrosse.circle"

        /// SF Symbols's name：figure.lacrosse.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureLacrosseCircleFill = "figure.lacrosse.circle.fill"

        /// SF Symbols's name：figure.martial.arts.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureMartialArtsCircle = "figure.martial.arts.circle"

        /// SF Symbols's name：figure.martial.arts.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureMartialArtsCircleFill = "figure.martial.arts.circle.fill"

        /// SF Symbols's name：figure.mind.and.body.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureMindAndBodyCircle = "figure.mind.and.body.circle"

        /// SF Symbols's name：figure.mind.and.body.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureMindAndBodyCircleFill = "figure.mind.and.body.circle.fill"

        /// SF Symbols's name：figure.mixed.cardio.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureMixedCardioCircle = "figure.mixed.cardio.circle"

        /// SF Symbols's name：figure.mixed.cardio.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureMixedCardioCircleFill = "figure.mixed.cardio.circle.fill"

        /// SF Symbols's name：figure.open.water.swim.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOpenWaterSwimCircle = "figure.open.water.swim.circle"

        /// SF Symbols's name：figure.open.water.swim.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOpenWaterSwimCircleFill = "figure.open.water.swim.circle.fill"

        /// SF Symbols's name：figure.outdoor.cycle.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorCycleCircle = "figure.outdoor.cycle.circle"

        /// SF Symbols's name：figure.outdoor.cycle.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorCycleCircleFill = "figure.outdoor.cycle.circle.fill"

        /// SF Symbols's name：figure.outdoor.rowing
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorRowing = "figure.outdoor.rowing"

        /// SF Symbols's name：figure.outdoor.rowing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorRowingCircle = "figure.outdoor.rowing.circle"

        /// SF Symbols's name：figure.outdoor.rowing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorRowingCircleFill = "figure.outdoor.rowing.circle.fill"

        /// SF Symbols's name：figure.outdoor.soccer
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorSoccer = "figure.outdoor.soccer"

        /// SF Symbols's name：figure.outdoor.soccer.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorSoccerCircle = "figure.outdoor.soccer.circle"

        /// SF Symbols's name：figure.outdoor.soccer.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureOutdoorSoccerCircleFill = "figure.outdoor.soccer.circle.fill"

        /// SF Symbols's name：figure.pickleball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePickleballCircle = "figure.pickleball.circle"

        /// SF Symbols's name：figure.pickleball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePickleballCircleFill = "figure.pickleball.circle.fill"

        /// SF Symbols's name：figure.pilates.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePilatesCircle = "figure.pilates.circle"

        /// SF Symbols's name：figure.pilates.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePilatesCircleFill = "figure.pilates.circle.fill"

        /// SF Symbols's name：figure.play.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePlayCircle = "figure.play.circle"

        /// SF Symbols's name：figure.play.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePlayCircleFill = "figure.play.circle.fill"

        /// SF Symbols's name：figure.pool.swim.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePoolSwimCircle = "figure.pool.swim.circle"

        /// SF Symbols's name：figure.pool.swim.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figurePoolSwimCircleFill = "figure.pool.swim.circle.fill"

        /// SF Symbols's name：figure.racquetball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRacquetballCircle = "figure.racquetball.circle"

        /// SF Symbols's name：figure.racquetball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRacquetballCircleFill = "figure.racquetball.circle.fill"

        /// SF Symbols's name：figure.roll.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRollCircle = "figure.roll.circle"

        /// SF Symbols's name：figure.roll.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRollCircleFill = "figure.roll.circle.fill"

        /// SF Symbols's name：figure.roll.runningpace.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRollRunningpaceCircle = "figure.roll.runningpace.circle"

        /// SF Symbols's name：figure.roll.runningpace.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRollRunningpaceCircleFill = "figure.roll.runningpace.circle.fill"

        /// SF Symbols's name：figure.rolling.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRollingCircle = "figure.rolling.circle"

        /// SF Symbols's name：figure.rolling.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRollingCircleFill = "figure.rolling.circle.fill"

        /// SF Symbols's name：figure.rugby.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRugbyCircle = "figure.rugby.circle"

        /// SF Symbols's name：figure.rugby.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRugbyCircleFill = "figure.rugby.circle.fill"

        /// SF Symbols's name：figure.run.treadmill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRunTreadmill = "figure.run.treadmill"

        /// SF Symbols's name：figure.run.treadmill.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRunTreadmillCircle = "figure.run.treadmill.circle"

        /// SF Symbols's name：figure.run.treadmill.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureRunTreadmillCircleFill = "figure.run.treadmill.circle.fill"

        /// SF Symbols's name：figure.sailing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSailingCircle = "figure.sailing.circle"

        /// SF Symbols's name：figure.sailing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSailingCircleFill = "figure.sailing.circle.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.1
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats1 = "figure.seated.seatbelt.left.drive.seats.1"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.1.1
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats11 = "figure.seated.seatbelt.left.drive.seats.1.1"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.1.1.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats11Fill = "figure.seated.seatbelt.left.drive.seats.1.1.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.1.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats12 = "figure.seated.seatbelt.left.drive.seats.1.2"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.1.2.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats12Fill = "figure.seated.seatbelt.left.drive.seats.1.2.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.1.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats1Fill = "figure.seated.seatbelt.left.drive.seats.1.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats2 = "figure.seated.seatbelt.left.drive.seats.2"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats22 = "figure.seated.seatbelt.left.drive.seats.2.2"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.2.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats222 = "figure.seated.seatbelt.left.drive.seats.2.2.2"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.2.2.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats222Fill = "figure.seated.seatbelt.left.drive.seats.2.2.2.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.2.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats223 = "figure.seated.seatbelt.left.drive.seats.2.2.3"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.2.3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats223Fill = "figure.seated.seatbelt.left.drive.seats.2.2.3.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.2.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats22Fill = "figure.seated.seatbelt.left.drive.seats.2.2.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats23 = "figure.seated.seatbelt.left.drive.seats.2.3"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.3.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats232 = "figure.seated.seatbelt.left.drive.seats.2.3.2"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.3.2.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats232Fill = "figure.seated.seatbelt.left.drive.seats.2.3.2.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.3.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats233 = "figure.seated.seatbelt.left.drive.seats.2.3.3"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.3.3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats233Fill = "figure.seated.seatbelt.left.drive.seats.2.3.3.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats23Fill = "figure.seated.seatbelt.left.drive.seats.2.3.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.2.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats2Fill = "figure.seated.seatbelt.left.drive.seats.2.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats3 = "figure.seated.seatbelt.left.drive.seats.3"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.3.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats33 = "figure.seated.seatbelt.left.drive.seats.3.3"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.3.3.3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats333 = "figure.seated.seatbelt.left.drive.seats.3.3.3"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.3.3.3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats333Fill = "figure.seated.seatbelt.left.drive.seats.3.3.3.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.3.3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats33Fill = "figure.seated.seatbelt.left.drive.seats.3.3.fill"

        /// SF Symbols's name：figure.seated.seatbelt.left.drive.seats.3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSeatbeltLeftDriveSeats3Fill = "figure.seated.seatbelt.left.drive.seats.3.fill"

        /// SF Symbols's name：figure.seated.side.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeft = "figure.seated.side.left"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionLower = "figure.seated.side.left.air.distribution.lower"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionMiddle = "figure.seated.side.left.air.distribution.middle"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.middle.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionMiddleAndLower = "figure.seated.side.left.air.distribution.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.middle.and.lower.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionMiddleAndLowerAngled = "figure.seated.side.left.air.distribution.middle.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.upper
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionUpper = "figure.seated.side.left.air.distribution.upper"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.upper.angled.and.lower.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionUpperAngledAndLowerAngled = "figure.seated.side.left.air.distribution.upper.angled.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.upper.angled.and.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionUpperAngledAndMiddle = "figure.seated.side.left.air.distribution.upper.angled.and.middle"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.upper.angled.and.middle.and.lower.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirDistributionUpperAngledAndMiddleAndLowerAngled = "figure.seated.side.left.air.distribution.upper.angled.and.middle.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.left.airbag.off
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirbagOff = "figure.seated.side.left.airbag.off"

        /// SF Symbols's name：figure.seated.side.left.airbag.off.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirbagOff2 = "figure.seated.side.left.airbag.off.2"

        /// SF Symbols's name：figure.seated.side.left.airbag.on
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirbagOn = "figure.seated.side.left.airbag.on"

        /// SF Symbols's name：figure.seated.side.left.airbag.on.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAirbagOn2 = "figure.seated.side.left.airbag.on.2"

        /// SF Symbols's name：figure.seated.side.left.automatic
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftAutomatic = "figure.seated.side.left.automatic"

        /// SF Symbols's name：figure.seated.side.left.fan
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftFan = "figure.seated.side.left.fan"

        /// SF Symbols's name：figure.seated.side.left.steeringwheel
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftSteeringwheel = "figure.seated.side.left.steeringwheel"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWaves = "figure.seated.side.left.windshield.front.and.heat.waves"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionLower = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.lower"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionMiddle = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpper = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndLower = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.lower"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle"

        /// SF Symbols's name：figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower = "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRight = "figure.seated.side.right"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionLower = "figure.seated.side.right.air.distribution.lower"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionMiddle = "figure.seated.side.right.air.distribution.middle"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.middle.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionMiddleAndLower = "figure.seated.side.right.air.distribution.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.middle.and.lower.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionMiddleAndLowerAngled = "figure.seated.side.right.air.distribution.middle.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.upper
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionUpper = "figure.seated.side.right.air.distribution.upper"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.upper.angled.and.lower.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionUpperAngledAndLowerAngled = "figure.seated.side.right.air.distribution.upper.angled.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.upper.angled.and.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionUpperAngledAndMiddle = "figure.seated.side.right.air.distribution.upper.angled.and.middle"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.upper.angled.and.middle.and.lower.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirDistributionUpperAngledAndMiddleAndLowerAngled = "figure.seated.side.right.air.distribution.upper.angled.and.middle.and.lower.angled"

        /// SF Symbols's name：figure.seated.side.right.airbag.off
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirbagOff = "figure.seated.side.right.airbag.off"

        /// SF Symbols's name：figure.seated.side.right.airbag.off.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirbagOff2 = "figure.seated.side.right.airbag.off.2"

        /// SF Symbols's name：figure.seated.side.right.airbag.on
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirbagOn = "figure.seated.side.right.airbag.on"

        /// SF Symbols's name：figure.seated.side.right.airbag.on.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAirbagOn2 = "figure.seated.side.right.airbag.on.2"

        /// SF Symbols's name：figure.seated.side.right.automatic
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightAutomatic = "figure.seated.side.right.automatic"

        /// SF Symbols's name：figure.seated.side.right.fan
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightFan = "figure.seated.side.right.fan"

        /// SF Symbols's name：figure.seated.side.right.steeringwheel
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightSteeringwheel = "figure.seated.side.right.steeringwheel"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWaves = "figure.seated.side.right.windshield.front.and.heat.waves"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionLower = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.lower"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionMiddle = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpper = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndLower = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.lower"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle"

        /// SF Symbols's name：figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower = "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower"

        /// SF Symbols's name：figure.skateboarding
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkateboarding = "figure.skateboarding"

        /// SF Symbols's name：figure.skateboarding.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkateboardingCircle = "figure.skateboarding.circle"

        /// SF Symbols's name：figure.skateboarding.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkateboardingCircleFill = "figure.skateboarding.circle.fill"

        /// SF Symbols's name：figure.skiing.crosscountry.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkiingCrosscountryCircle = "figure.skiing.crosscountry.circle"

        /// SF Symbols's name：figure.skiing.crosscountry.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkiingCrosscountryCircleFill = "figure.skiing.crosscountry.circle.fill"

        /// SF Symbols's name：figure.skiing.downhill.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkiingDownhillCircle = "figure.skiing.downhill.circle"

        /// SF Symbols's name：figure.skiing.downhill.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSkiingDownhillCircleFill = "figure.skiing.downhill.circle.fill"

        /// SF Symbols's name：figure.snowboarding.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSnowboardingCircle = "figure.snowboarding.circle"

        /// SF Symbols's name：figure.snowboarding.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSnowboardingCircleFill = "figure.snowboarding.circle.fill"

        /// SF Symbols's name：figure.socialdance.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSocialdanceCircle = "figure.socialdance.circle"

        /// SF Symbols's name：figure.socialdance.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSocialdanceCircleFill = "figure.socialdance.circle.fill"

        /// SF Symbols's name：figure.softball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSoftballCircle = "figure.softball.circle"

        /// SF Symbols's name：figure.softball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSoftballCircleFill = "figure.softball.circle.fill"

        /// SF Symbols's name：figure.squash.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSquashCircle = "figure.squash.circle"

        /// SF Symbols's name：figure.squash.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSquashCircleFill = "figure.squash.circle.fill"

        /// SF Symbols's name：figure.stair.stepper.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStairStepperCircle = "figure.stair.stepper.circle"

        /// SF Symbols's name：figure.stair.stepper.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStairStepperCircleFill = "figure.stair.stepper.circle.fill"

        /// SF Symbols's name：figure.stairs.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStairsCircle = "figure.stairs.circle"

        /// SF Symbols's name：figure.stairs.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStairsCircleFill = "figure.stairs.circle.fill"

        /// SF Symbols's name：figure.stand.dress
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStandDress = "figure.stand.dress"

        /// SF Symbols's name：figure.stand.dress.line.vertical.figure
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStandDressLineVerticalFigure = "figure.stand.dress.line.vertical.figure"

        /// SF Symbols's name：figure.step.training.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStepTrainingCircle = "figure.step.training.circle"

        /// SF Symbols's name：figure.step.training.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStepTrainingCircleFill = "figure.step.training.circle.fill"

        /// SF Symbols's name：figure.strengthtraining.functional.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStrengthtrainingFunctionalCircle = "figure.strengthtraining.functional.circle"

        /// SF Symbols's name：figure.strengthtraining.functional.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStrengthtrainingFunctionalCircleFill = "figure.strengthtraining.functional.circle.fill"

        /// SF Symbols's name：figure.strengthtraining.traditional.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStrengthtrainingTraditionalCircle = "figure.strengthtraining.traditional.circle"

        /// SF Symbols's name：figure.strengthtraining.traditional.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureStrengthtrainingTraditionalCircleFill = "figure.strengthtraining.traditional.circle.fill"

        /// SF Symbols's name：figure.surfing.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSurfingCircle = "figure.surfing.circle"

        /// SF Symbols's name：figure.surfing.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureSurfingCircleFill = "figure.surfing.circle.fill"

        /// SF Symbols's name：figure.table.tennis.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTableTennisCircle = "figure.table.tennis.circle"

        /// SF Symbols's name：figure.table.tennis.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTableTennisCircleFill = "figure.table.tennis.circle.fill"

        /// SF Symbols's name：figure.taichi.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTaichiCircle = "figure.taichi.circle"

        /// SF Symbols's name：figure.taichi.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTaichiCircleFill = "figure.taichi.circle.fill"

        /// SF Symbols's name：figure.tennis.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTennisCircle = "figure.tennis.circle"

        /// SF Symbols's name：figure.tennis.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTennisCircleFill = "figure.tennis.circle.fill"

        /// SF Symbols's name：figure.track.and.field.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTrackAndFieldCircle = "figure.track.and.field.circle"

        /// SF Symbols's name：figure.track.and.field.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureTrackAndFieldCircleFill = "figure.track.and.field.circle.fill"

        /// SF Symbols's name：figure.volleyball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureVolleyballCircle = "figure.volleyball.circle"

        /// SF Symbols's name：figure.volleyball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureVolleyballCircleFill = "figure.volleyball.circle.fill"

        /// SF Symbols's name：figure.walk.treadmill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWalkTreadmill = "figure.walk.treadmill"

        /// SF Symbols's name：figure.walk.treadmill.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWalkTreadmillCircle = "figure.walk.treadmill.circle"

        /// SF Symbols's name：figure.walk.treadmill.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWalkTreadmillCircleFill = "figure.walk.treadmill.circle.fill"

        /// SF Symbols's name：figure.walk.triangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWalkTriangle = "figure.walk.triangle"

        /// SF Symbols's name：figure.walk.triangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWalkTriangleFill = "figure.walk.triangle.fill"

        /// SF Symbols's name：figure.water.fitness.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWaterFitnessCircle = "figure.water.fitness.circle"

        /// SF Symbols's name：figure.water.fitness.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWaterFitnessCircleFill = "figure.water.fitness.circle.fill"

        /// SF Symbols's name：figure.waterpolo.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWaterpoloCircle = "figure.waterpolo.circle"

        /// SF Symbols's name：figure.waterpolo.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWaterpoloCircleFill = "figure.waterpolo.circle.fill"

        /// SF Symbols's name：figure.wrestling.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWrestlingCircle = "figure.wrestling.circle"

        /// SF Symbols's name：figure.wrestling.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureWrestlingCircleFill = "figure.wrestling.circle.fill"

        /// SF Symbols's name：figure.yoga.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureYogaCircle = "figure.yoga.circle"

        /// SF Symbols's name：figure.yoga.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case figureYogaCircleFill = "figure.yoga.circle.fill"

        /// SF Symbols's name：fire.extinguisher
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case fireExtinguisher = "fire.extinguisher"

        /// SF Symbols's name：fire.extinguisher.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case fireExtinguisherFill = "fire.extinguisher.fill"

        /// SF Symbols's name：flag.pattern.checkered
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case flagPatternCheckered = "flag.pattern.checkered"

        /// SF Symbols's name：flag.pattern.checkered.2.crossed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case flagPatternCheckered2Crossed = "flag.pattern.checkered.2.crossed"

        /// SF Symbols's name：flag.pattern.checkered.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case flagPatternCheckeredCircle = "flag.pattern.checkered.circle"

        /// SF Symbols's name：flag.pattern.checkered.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case flagPatternCheckeredCircleFill = "flag.pattern.checkered.circle.fill"

        /// SF Symbols's name：florinsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignArrowTriangleheadCounterclockwiseRotate90 = "florinsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：florinsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignBankBuilding = "florinsign.bank.building"

        /// SF Symbols's name：florinsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignBankBuildingFill = "florinsign.bank.building.fill"

        /// SF Symbols's name：florinsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignGaugeChartLefthalfRighthalf = "florinsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：florinsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignGaugeChartLeftthirdTopthirdRightthird = "florinsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：florinsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignRing = "florinsign.ring"

        /// SF Symbols's name：florinsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case florinsignRingDashed = "florinsign.ring.dashed"

        /// SF Symbols's name：fluid.batteryblock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case fluidBatteryblock = "fluid.batteryblock"

        /// SF Symbols's name：fluid.coolant
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case fluidCoolant = "fluid.coolant"

        /// SF Symbols's name：formfitting.gamecontroller
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case formfittingGamecontroller = "formfitting.gamecontroller"

        /// SF Symbols's name：formfitting.gamecontroller.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case formfittingGamecontrollerFill = "formfitting.gamecontroller.fill"

        /// SF Symbols's name：francsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignArrowTriangleheadCounterclockwiseRotate90 = "francsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：francsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignBankBuilding = "francsign.bank.building"

        /// SF Symbols's name：francsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignBankBuildingFill = "francsign.bank.building.fill"

        /// SF Symbols's name：francsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignGaugeChartLefthalfRighthalf = "francsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：francsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignGaugeChartLeftthirdTopthirdRightthird = "francsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：francsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignRing = "francsign.ring"

        /// SF Symbols's name：francsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case francsignRingDashed = "francsign.ring.dashed"

        /// SF Symbols's name：fuelpump.and.filter
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case fuelpumpAndFilter = "fuelpump.and.filter"

        /// SF Symbols's name：gamecontroller.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case gamecontrollerCircle = "gamecontroller.circle"

        /// SF Symbols's name：gamecontroller.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case gamecontrollerCircleFill = "gamecontroller.circle.fill"

        /// SF Symbols's name：gauge.open.with.lines.needle.33percent.and.arrow.trianglehead.from.0percent.to.50percent
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case gaugeOpenWithLinesNeedle33percentAndArrowTriangleheadFrom0percentTo50percent = "gauge.open.with.lines.needle.33percent.and.arrow.trianglehead.from.0percent.to.50percent"

        /// SF Symbols's name：gearshape.arrow.trianglehead.2.clockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case gearshapeArrowTrianglehead2ClockwiseRotate90 = "gearshape.arrow.trianglehead.2.clockwise.rotate.90"

        /// SF Symbols's name：greaterthanorequalto
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case greaterthanorequalto = "greaterthanorequalto"

        /// SF Symbols's name：greaterthanorequalto.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case greaterthanorequaltoCircle = "greaterthanorequalto.circle"

        /// SF Symbols's name：greaterthanorequalto.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case greaterthanorequaltoCircleFill = "greaterthanorequalto.circle.fill"

        /// SF Symbols's name：greaterthanorequalto.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case greaterthanorequaltoSquare = "greaterthanorequalto.square"

        /// SF Symbols's name：greaterthanorequalto.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case greaterthanorequaltoSquareFill = "greaterthanorequalto.square.fill"

        /// SF Symbols's name：guaranisign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignArrowTriangleheadCounterclockwiseRotate90 = "guaranisign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：guaranisign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignBankBuilding = "guaranisign.bank.building"

        /// SF Symbols's name：guaranisign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignBankBuildingFill = "guaranisign.bank.building.fill"

        /// SF Symbols's name：guaranisign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignGaugeChartLefthalfRighthalf = "guaranisign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：guaranisign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignGaugeChartLeftthirdTopthirdRightthird = "guaranisign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：guaranisign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignRing = "guaranisign.ring"

        /// SF Symbols's name：guaranisign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case guaranisignRingDashed = "guaranisign.ring.dashed"

        /// SF Symbols's name：hand.draw.badge.ellipsis
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handDrawBadgeEllipsis = "hand.draw.badge.ellipsis"

        /// SF Symbols's name：hand.draw.badge.ellipsis.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handDrawBadgeEllipsisFill = "hand.draw.badge.ellipsis.fill"

        /// SF Symbols's name：hand.palm.facing
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handPalmFacing = "hand.palm.facing"

        /// SF Symbols's name：hand.palm.facing.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handPalmFacingFill = "hand.palm.facing.fill"

        /// SF Symbols's name：hand.pinch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handPinch = "hand.pinch"

        /// SF Symbols's name：hand.pinch.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handPinchFill = "hand.pinch.fill"

        /// SF Symbols's name：hand.point.up.braille.badge.ellipsis
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handPointUpBrailleBadgeEllipsis = "hand.point.up.braille.badge.ellipsis"

        /// SF Symbols's name：hand.point.up.braille.badge.ellipsis.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handPointUpBrailleBadgeEllipsisFill = "hand.point.up.braille.badge.ellipsis.fill"

        /// SF Symbols's name：hand.raised.palm.facing
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handRaisedPalmFacing = "hand.raised.palm.facing"

        /// SF Symbols's name：hand.raised.palm.facing.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handRaisedPalmFacingFill = "hand.raised.palm.facing.fill"

        /// SF Symbols's name：hand.rays
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handRays = "hand.rays"

        /// SF Symbols's name：hand.rays.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case handRaysFill = "hand.rays.fill"

        /// SF Symbols's name：hat.cap
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hatCap = "hat.cap"

        /// SF Symbols's name：hat.cap.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hatCapFill = "hat.cap.fill"

        /// SF Symbols's name：hat.widebrim
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hatWidebrim = "hat.widebrim"

        /// SF Symbols's name：hat.widebrim.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hatWidebrimFill = "hat.widebrim.fill"

        /// SF Symbols's name：head.profile.arrow.forward.and.vision.pro
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case headProfileArrowForwardAndVisionPro = "head.profile.arrow.forward.and.vision.pro"

        /// SF Symbols's name：headphones.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case headphonesSlash = "headphones.slash"

        /// SF Symbols's name：headset
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case headset = "headset"

        /// SF Symbols's name：headset.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case headsetCircle = "headset.circle"

        /// SF Symbols's name：headset.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case headsetCircleFill = "headset.circle.fill"

        /// SF Symbols's name：heart.text.clipboard
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case heartTextClipboard = "heart.text.clipboard"

        /// SF Symbols's name：heart.text.clipboard.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case heartTextClipboardFill = "heart.text.clipboard.fill"

        /// SF Symbols's name：heat.waves.and.fan
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case heatWavesAndFan = "heat.waves.and.fan"

        /// SF Symbols's name：helmet
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case helmet = "helmet"

        /// SF Symbols's name：helmet.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case helmetFill = "helmet.fill"

        /// SF Symbols's name：hifispeaker.2.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeaker2BadgeMinus = "hifispeaker.2.badge.minus"

        /// SF Symbols's name：hifispeaker.2.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeaker2BadgeMinusFill = "hifispeaker.2.badge.minus.fill"

        /// SF Symbols's name：hifispeaker.2.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeaker2BadgePlus = "hifispeaker.2.badge.plus"

        /// SF Symbols's name：hifispeaker.2.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeaker2BadgePlusFill = "hifispeaker.2.badge.plus.fill"

        /// SF Symbols's name：hifispeaker.and.homepod.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodBadgeMinus = "hifispeaker.and.homepod.badge.minus"

        /// SF Symbols's name：hifispeaker.and.homepod.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodBadgeMinusFill = "hifispeaker.and.homepod.badge.minus.fill"

        /// SF Symbols's name：hifispeaker.and.homepod.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodBadgePlus = "hifispeaker.and.homepod.badge.plus"

        /// SF Symbols's name：hifispeaker.and.homepod.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodBadgePlusFill = "hifispeaker.and.homepod.badge.plus.fill"

        /// SF Symbols's name：hifispeaker.and.homepod.mini
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodMini = "hifispeaker.and.homepod.mini"

        /// SF Symbols's name：hifispeaker.and.homepod.mini.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodMiniBadgeMinus = "hifispeaker.and.homepod.mini.badge.minus"

        /// SF Symbols's name：hifispeaker.and.homepod.mini.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodMiniBadgeMinusFill = "hifispeaker.and.homepod.mini.badge.minus.fill"

        /// SF Symbols's name：hifispeaker.and.homepod.mini.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodMiniBadgePlus = "hifispeaker.and.homepod.mini.badge.plus"

        /// SF Symbols's name：hifispeaker.and.homepod.mini.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodMiniBadgePlusFill = "hifispeaker.and.homepod.mini.badge.plus.fill"

        /// SF Symbols's name：hifispeaker.and.homepod.mini.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerAndHomepodMiniFill = "hifispeaker.and.homepod.mini.fill"

        /// SF Symbols's name：hifispeaker.arrow.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerArrowForward = "hifispeaker.arrow.forward"

        /// SF Symbols's name：hifispeaker.arrow.forward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerArrowForwardFill = "hifispeaker.arrow.forward.fill"

        /// SF Symbols's name：hifispeaker.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerBadgeMinus = "hifispeaker.badge.minus"

        /// SF Symbols's name：hifispeaker.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerBadgeMinusFill = "hifispeaker.badge.minus.fill"

        /// SF Symbols's name：hifispeaker.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerBadgePlus = "hifispeaker.badge.plus"

        /// SF Symbols's name：hifispeaker.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hifispeakerBadgePlusFill = "hifispeaker.badge.plus.fill"

        /// SF Symbols's name：homepod.2.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepod2BadgeMinus = "homepod.2.badge.minus"

        /// SF Symbols's name：homepod.2.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepod2BadgeMinusFill = "homepod.2.badge.minus.fill"

        /// SF Symbols's name：homepod.2.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepod2BadgePlus = "homepod.2.badge.plus"

        /// SF Symbols's name：homepod.2.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepod2BadgePlusFill = "homepod.2.badge.plus.fill"

        /// SF Symbols's name：homepod.and.homepod.mini
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodAndHomepodMini = "homepod.and.homepod.mini"

        /// SF Symbols's name：homepod.and.homepod.mini.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodAndHomepodMiniBadgeMinus = "homepod.and.homepod.mini.badge.minus"

        /// SF Symbols's name：homepod.and.homepod.mini.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodAndHomepodMiniBadgeMinusFill = "homepod.and.homepod.mini.badge.minus.fill"

        /// SF Symbols's name：homepod.and.homepod.mini.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodAndHomepodMiniBadgePlus = "homepod.and.homepod.mini.badge.plus"

        /// SF Symbols's name：homepod.and.homepod.mini.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodAndHomepodMiniBadgePlusFill = "homepod.and.homepod.mini.badge.plus.fill"

        /// SF Symbols's name：homepod.and.homepod.mini.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodAndHomepodMiniFill = "homepod.and.homepod.mini.fill"

        /// SF Symbols's name：homepod.arrow.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodArrowForward = "homepod.arrow.forward"

        /// SF Symbols's name：homepod.arrow.forward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodArrowForwardFill = "homepod.arrow.forward.fill"

        /// SF Symbols's name：homepod.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodBadgeMinus = "homepod.badge.minus"

        /// SF Symbols's name：homepod.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodBadgeMinusFill = "homepod.badge.minus.fill"

        /// SF Symbols's name：homepod.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodBadgePlus = "homepod.badge.plus"

        /// SF Symbols's name：homepod.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodBadgePlusFill = "homepod.badge.plus.fill"

        /// SF Symbols's name：homepod.mini
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini = "homepod.mini"

        /// SF Symbols's name：homepod.mini.2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini2 = "homepod.mini.2"

        /// SF Symbols's name：homepod.mini.2.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini2BadgeMinus = "homepod.mini.2.badge.minus"

        /// SF Symbols's name：homepod.mini.2.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini2BadgeMinusFill = "homepod.mini.2.badge.minus.fill"

        /// SF Symbols's name：homepod.mini.2.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini2BadgePlus = "homepod.mini.2.badge.plus"

        /// SF Symbols's name：homepod.mini.2.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini2BadgePlusFill = "homepod.mini.2.badge.plus.fill"

        /// SF Symbols's name：homepod.mini.2.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMini2Fill = "homepod.mini.2.fill"

        /// SF Symbols's name：homepod.mini.arrow.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniArrowForward = "homepod.mini.arrow.forward"

        /// SF Symbols's name：homepod.mini.arrow.forward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniArrowForwardFill = "homepod.mini.arrow.forward.fill"

        /// SF Symbols's name：homepod.mini.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniBadgeMinus = "homepod.mini.badge.minus"

        /// SF Symbols's name：homepod.mini.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniBadgeMinusFill = "homepod.mini.badge.minus.fill"

        /// SF Symbols's name：homepod.mini.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniBadgePlus = "homepod.mini.badge.plus"

        /// SF Symbols's name：homepod.mini.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniBadgePlusFill = "homepod.mini.badge.plus.fill"

        /// SF Symbols's name：homepod.mini.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case homepodMiniFill = "homepod.mini.fill"

        /// SF Symbols's name：hourglass.badge.eye
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hourglassBadgeEye = "hourglass.badge.eye"

        /// SF Symbols's name：house.badge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case houseBadgeExclamationmark = "house.badge.exclamationmark"

        /// SF Symbols's name：house.badge.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case houseBadgeExclamationmarkFill = "house.badge.exclamationmark.fill"

        /// SF Symbols's name：house.badge.wifi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case houseBadgeWifi = "house.badge.wifi"

        /// SF Symbols's name：house.badge.wifi.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case houseBadgeWifiFill = "house.badge.wifi.fill"

        /// SF Symbols's name：house.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case houseSlash = "house.slash"

        /// SF Symbols's name：house.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case houseSlashFill = "house.slash.fill"

        /// SF Symbols's name：hryvniasign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignArrowTriangleheadCounterclockwiseRotate90 = "hryvniasign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：hryvniasign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignBankBuilding = "hryvniasign.bank.building"

        /// SF Symbols's name：hryvniasign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignBankBuildingFill = "hryvniasign.bank.building.fill"

        /// SF Symbols's name：hryvniasign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignGaugeChartLefthalfRighthalf = "hryvniasign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：hryvniasign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignGaugeChartLeftthirdTopthirdRightthird = "hryvniasign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：hryvniasign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignRing = "hryvniasign.ring"

        /// SF Symbols's name：hryvniasign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case hryvniasignRingDashed = "hryvniasign.ring.dashed"

        /// SF Symbols's name：indianrupeesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignArrowTriangleheadCounterclockwiseRotate90 = "indianrupeesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：indianrupeesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignBankBuilding = "indianrupeesign.bank.building"

        /// SF Symbols's name：indianrupeesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignBankBuildingFill = "indianrupeesign.bank.building.fill"

        /// SF Symbols's name：indianrupeesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignGaugeChartLefthalfRighthalf = "indianrupeesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：indianrupeesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignGaugeChartLeftthirdTopthirdRightthird = "indianrupeesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：indianrupeesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignRing = "indianrupeesign.ring"

        /// SF Symbols's name：indianrupeesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case indianrupeesignRingDashed = "indianrupeesign.ring.dashed"

        /// SF Symbols's name：inhaler
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case inhaler = "inhaler"

        /// SF Symbols's name：inhaler.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case inhalerFill = "inhaler.fill"

        /// SF Symbols's name：inset.filled.applewatch.case
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledApplewatchCase = "inset.filled.applewatch.case"

        /// SF Symbols's name：inset.filled.bottomhalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomhalfRectangle = "inset.filled.bottomhalf.rectangle"

        /// SF Symbols's name：inset.filled.bottomhalf.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomhalfRectanglePortrait = "inset.filled.bottomhalf.rectangle.portrait"

        /// SF Symbols's name：inset.filled.bottomhalf.tophalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomhalfTophalfRectangle = "inset.filled.bottomhalf.tophalf.rectangle"

        /// SF Symbols's name：inset.filled.bottomleading.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomleadingRectangle = "inset.filled.bottomleading.rectangle"

        /// SF Symbols's name：inset.filled.bottomleading.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomleadingRectanglePortrait = "inset.filled.bottomleading.rectangle.portrait"

        /// SF Symbols's name：inset.filled.bottomleft.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomleftRectangle = "inset.filled.bottomleft.rectangle"

        /// SF Symbols's name：inset.filled.bottomleft.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomleftRectanglePortrait = "inset.filled.bottomleft.rectangle.portrait"

        /// SF Symbols's name：inset.filled.bottomright.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomrightRectangle = "inset.filled.bottomright.rectangle"

        /// SF Symbols's name：inset.filled.bottomright.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomrightRectanglePortrait = "inset.filled.bottomright.rectangle.portrait"

        /// SF Symbols's name：inset.filled.bottomthird.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomthirdRectangle = "inset.filled.bottomthird.rectangle"

        /// SF Symbols's name：inset.filled.bottomthird.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomthirdRectanglePortrait = "inset.filled.bottomthird.rectangle.portrait"

        /// SF Symbols's name：inset.filled.bottomthird.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomthirdSquare = "inset.filled.bottomthird.square"

        /// SF Symbols's name：inset.filled.bottomtrailing.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomtrailingRectangle = "inset.filled.bottomtrailing.rectangle"

        /// SF Symbols's name：inset.filled.bottomtrailing.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledBottomtrailingRectanglePortrait = "inset.filled.bottomtrailing.rectangle.portrait"

        /// SF Symbols's name：inset.filled.capsule
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCapsule = "inset.filled.capsule"

        /// SF Symbols's name：inset.filled.capsule.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCapsulePortrait = "inset.filled.capsule.portrait"

        /// SF Symbols's name：inset.filled.center.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCenterRectangle = "inset.filled.center.rectangle"

        /// SF Symbols's name：inset.filled.center.rectangle.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCenterRectangleBadgePlus = "inset.filled.center.rectangle.badge.plus"

        /// SF Symbols's name：inset.filled.center.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCenterRectanglePortrait = "inset.filled.center.rectangle.portrait"

        /// SF Symbols's name：inset.filled.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCircle = "inset.filled.circle"

        /// SF Symbols's name：inset.filled.circle.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledCircleDashed = "inset.filled.circle.dashed"

        /// SF Symbols's name：inset.filled.diamond
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledDiamond = "inset.filled.diamond"

        /// SF Symbols's name：inset.filled.leadinghalf.arrow.leading.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadinghalfArrowLeadingRectangle = "inset.filled.leadinghalf.arrow.leading.rectangle"

        /// SF Symbols's name：inset.filled.leadinghalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadinghalfRectangle = "inset.filled.leadinghalf.rectangle"

        /// SF Symbols's name：inset.filled.leadinghalf.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadinghalfRectanglePortrait = "inset.filled.leadinghalf.rectangle.portrait"

        /// SF Symbols's name：inset.filled.leadinghalf.toptrailing.bottomtrailing.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadinghalfToptrailingBottomtrailingRectangle = "inset.filled.leadinghalf.toptrailing.bottomtrailing.rectangle"

        /// SF Symbols's name：inset.filled.leadinghalf.trailinghalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadinghalfTrailinghalfRectangle = "inset.filled.leadinghalf.trailinghalf.rectangle"

        /// SF Symbols's name：inset.filled.leadingthird.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadingthirdRectangle = "inset.filled.leadingthird.rectangle"

        /// SF Symbols's name：inset.filled.leadingthird.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadingthirdRectanglePortrait = "inset.filled.leadingthird.rectangle.portrait"

        /// SF Symbols's name：inset.filled.leadingthird.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeadingthirdSquare = "inset.filled.leadingthird.square"

        /// SF Symbols's name：inset.filled.lefthalf.arrow.left.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLefthalfArrowLeftRectangle = "inset.filled.lefthalf.arrow.left.rectangle"

        /// SF Symbols's name：inset.filled.lefthalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLefthalfRectangle = "inset.filled.lefthalf.rectangle"

        /// SF Symbols's name：inset.filled.lefthalf.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLefthalfRectanglePortrait = "inset.filled.lefthalf.rectangle.portrait"

        /// SF Symbols's name：inset.filled.lefthalf.righthalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLefthalfRighthalfRectangle = "inset.filled.lefthalf.righthalf.rectangle"

        /// SF Symbols's name：inset.filled.lefthalf.topright.bottomright.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLefthalfToprightBottomrightRectangle = "inset.filled.lefthalf.topright.bottomright.rectangle"

        /// SF Symbols's name：inset.filled.leftthird.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeftthirdRectangle = "inset.filled.leftthird.rectangle"

        /// SF Symbols's name：inset.filled.leftthird.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeftthirdRectanglePortrait = "inset.filled.leftthird.rectangle.portrait"

        /// SF Symbols's name：inset.filled.leftthird.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledLeftthirdSquare = "inset.filled.leftthird.square"

        /// SF Symbols's name：inset.filled.oval
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledOval = "inset.filled.oval"

        /// SF Symbols's name：inset.filled.oval.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledOvalPortrait = "inset.filled.oval.portrait"

        /// SF Symbols's name：inset.filled.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRectangle = "inset.filled.rectangle"

        /// SF Symbols's name：inset.filled.rectangle.and.cursorarrow
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRectangleAndCursorarrow = "inset.filled.rectangle.and.cursorarrow"

        /// SF Symbols's name：inset.filled.rectangle.and.person.filled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRectangleAndPersonFilled = "inset.filled.rectangle.and.person.filled"

        /// SF Symbols's name：inset.filled.rectangle.badge.record
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRectangleBadgeRecord = "inset.filled.rectangle.badge.record"

        /// SF Symbols's name：inset.filled.rectangle.on.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRectangleOnRectangle = "inset.filled.rectangle.on.rectangle"

        /// SF Symbols's name：inset.filled.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRectanglePortrait = "inset.filled.rectangle.portrait"

        /// SF Symbols's name：inset.filled.righthalf.arrow.right.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRighthalfArrowRightRectangle = "inset.filled.righthalf.arrow.right.rectangle"

        /// SF Symbols's name：inset.filled.righthalf.lefthalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRighthalfLefthalfRectangle = "inset.filled.righthalf.lefthalf.rectangle"

        /// SF Symbols's name：inset.filled.righthalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRighthalfRectangle = "inset.filled.righthalf.rectangle"

        /// SF Symbols's name：inset.filled.righthalf.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRighthalfRectanglePortrait = "inset.filled.righthalf.rectangle.portrait"

        /// SF Symbols's name：inset.filled.rightthird.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRightthirdRectangle = "inset.filled.rightthird.rectangle"

        /// SF Symbols's name：inset.filled.rightthird.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRightthirdRectanglePortrait = "inset.filled.rightthird.rectangle.portrait"

        /// SF Symbols's name：inset.filled.rightthird.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledRightthirdSquare = "inset.filled.rightthird.square"

        /// SF Symbols's name：inset.filled.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledSquare = "inset.filled.square"

        /// SF Symbols's name：inset.filled.square.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledSquareDashed = "inset.filled.square.dashed"

        /// SF Symbols's name：inset.filled.tophalf.bottomhalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTophalfBottomhalfRectangle = "inset.filled.tophalf.bottomhalf.rectangle"

        /// SF Symbols's name：inset.filled.tophalf.bottomleft.bottomright.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTophalfBottomleftBottomrightRectangle = "inset.filled.tophalf.bottomleft.bottomright.rectangle"

        /// SF Symbols's name：inset.filled.tophalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTophalfRectangle = "inset.filled.tophalf.rectangle"

        /// SF Symbols's name：inset.filled.tophalf.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTophalfRectanglePortrait = "inset.filled.tophalf.rectangle.portrait"

        /// SF Symbols's name：inset.filled.topleading.bottomleading.trailinghalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleadingBottomleadingTrailinghalfRectangle = "inset.filled.topleading.bottomleading.trailinghalf.rectangle"

        /// SF Symbols's name：inset.filled.topleading.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleadingRectangle = "inset.filled.topleading.rectangle"

        /// SF Symbols's name：inset.filled.topleading.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleadingRectanglePortrait = "inset.filled.topleading.rectangle.portrait"

        /// SF Symbols's name：inset.filled.topleft.bottomleft.righthalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleftBottomleftRighthalfRectangle = "inset.filled.topleft.bottomleft.righthalf.rectangle"

        /// SF Symbols's name：inset.filled.topleft.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleftRectangle = "inset.filled.topleft.rectangle"

        /// SF Symbols's name：inset.filled.topleft.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleftRectanglePortrait = "inset.filled.topleft.rectangle.portrait"

        /// SF Symbols's name：inset.filled.topleft.topright.bottomhalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleftToprightBottomhalfRectangle = "inset.filled.topleft.topright.bottomhalf.rectangle"

        /// SF Symbols's name：inset.filled.topleft.topright.bottomleft.bottomright.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopleftToprightBottomleftBottomrightRectangle = "inset.filled.topleft.topright.bottomleft.bottomright.rectangle"

        /// SF Symbols's name：inset.filled.topright.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledToprightRectangle = "inset.filled.topright.rectangle"

        /// SF Symbols's name：inset.filled.topright.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledToprightRectanglePortrait = "inset.filled.topright.rectangle.portrait"

        /// SF Symbols's name：inset.filled.topthird.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopthirdRectangle = "inset.filled.topthird.rectangle"

        /// SF Symbols's name：inset.filled.topthird.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopthirdRectanglePortrait = "inset.filled.topthird.rectangle.portrait"

        /// SF Symbols's name：inset.filled.topthird.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTopthirdSquare = "inset.filled.topthird.square"

        /// SF Symbols's name：inset.filled.toptrailing.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledToptrailingRectangle = "inset.filled.toptrailing.rectangle"

        /// SF Symbols's name：inset.filled.toptrailing.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledToptrailingRectanglePortrait = "inset.filled.toptrailing.rectangle.portrait"

        /// SF Symbols's name：inset.filled.trailinghalf.arrow.trailing.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailinghalfArrowTrailingRectangle = "inset.filled.trailinghalf.arrow.trailing.rectangle"

        /// SF Symbols's name：inset.filled.trailinghalf.leadinghalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailinghalfLeadinghalfRectangle = "inset.filled.trailinghalf.leadinghalf.rectangle"

        /// SF Symbols's name：inset.filled.trailinghalf.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailinghalfRectangle = "inset.filled.trailinghalf.rectangle"

        /// SF Symbols's name：inset.filled.trailinghalf.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailinghalfRectanglePortrait = "inset.filled.trailinghalf.rectangle.portrait"

        /// SF Symbols's name：inset.filled.trailingthird.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailingthirdRectangle = "inset.filled.trailingthird.rectangle"

        /// SF Symbols's name：inset.filled.trailingthird.rectangle.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailingthirdRectanglePortrait = "inset.filled.trailingthird.rectangle.portrait"

        /// SF Symbols's name：inset.filled.trailingthird.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTrailingthirdSquare = "inset.filled.trailingthird.square"

        /// SF Symbols's name：inset.filled.triangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTriangle = "inset.filled.triangle"

        /// SF Symbols's name：inset.filled.tv
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case insetFilledTv = "inset.filled.tv"

        /// SF Symbols's name：ipad.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadBadgeLocation = "ipad.badge.location"

        /// SF Symbols's name：ipad.gen1.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen1BadgeLocation = "ipad.gen1.badge.location"

        /// SF Symbols's name：ipad.gen1.landscape.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen1LandscapeBadgeLocation = "ipad.gen1.landscape.badge.location"

        /// SF Symbols's name：ipad.gen1.landscape.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen1LandscapeSlash = "ipad.gen1.landscape.slash"

        /// SF Symbols's name：ipad.gen1.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen1Slash = "ipad.gen1.slash"

        /// SF Symbols's name：ipad.gen2.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen2BadgeLocation = "ipad.gen2.badge.location"

        /// SF Symbols's name：ipad.gen2.landscape.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen2LandscapeBadgeLocation = "ipad.gen2.landscape.badge.location"

        /// SF Symbols's name：ipad.gen2.landscape.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen2LandscapeSlash = "ipad.gen2.landscape.slash"

        /// SF Symbols's name：ipad.gen2.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadGen2Slash = "ipad.gen2.slash"

        /// SF Symbols's name：ipad.landscape.and.iphone
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadLandscapeAndIphone = "ipad.landscape.and.iphone"

        /// SF Symbols's name：ipad.landscape.and.iphone.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadLandscapeAndIphoneSlash = "ipad.landscape.and.iphone.slash"

        /// SF Symbols's name：ipad.landscape.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipadLandscapeBadgeLocation = "ipad.landscape.badge.location"

        /// SF Symbols's name：iphone.and.arrow.forward.inward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneAndArrowForwardInward = "iphone.and.arrow.forward.inward"

        /// SF Symbols's name：iphone.and.arrow.forward.outward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneAndArrowForwardOutward = "iphone.and.arrow.forward.outward"

        /// SF Symbols's name：iphone.and.arrow.left.and.arrow.right.inward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneAndArrowLeftAndArrowRightInward = "iphone.and.arrow.left.and.arrow.right.inward"

        /// SF Symbols's name：iphone.and.arrow.right.inward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneAndArrowRightInward = "iphone.and.arrow.right.inward"

        /// SF Symbols's name：iphone.and.arrow.right.outward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneAndArrowRightOutward = "iphone.and.arrow.right.outward"

        /// SF Symbols's name：iphone.app.switcher
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneAppSwitcher = "iphone.app.switcher"

        /// SF Symbols's name：iphone.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneBadgeLocation = "iphone.badge.location"

        /// SF Symbols's name：iphone.crop.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneCropCircle = "iphone.crop.circle"

        /// SF Symbols's name：iphone.dock.motorized.viewfinder
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneDockMotorizedViewfinder = "iphone.dock.motorized.viewfinder"

        /// SF Symbols's name：iphone.gen1.and.arrow.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen1AndArrowLeft = "iphone.gen1.and.arrow.left"

        /// SF Symbols's name：iphone.gen1.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen1BadgeLocation = "iphone.gen1.badge.location"

        /// SF Symbols's name：iphone.gen1.crop.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen1CropCircle = "iphone.gen1.crop.circle"

        /// SF Symbols's name：iphone.gen1.landscape.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen1LandscapeSlash = "iphone.gen1.landscape.slash"

        /// SF Symbols's name：iphone.gen1.motion
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen1Motion = "iphone.gen1.motion"

        /// SF Symbols's name：iphone.gen2.and.arrow.left.and.arrow.right.inward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen2AndArrowLeftAndArrowRightInward = "iphone.gen2.and.arrow.left.and.arrow.right.inward"

        /// SF Symbols's name：iphone.gen2.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen2BadgeLocation = "iphone.gen2.badge.location"

        /// SF Symbols's name：iphone.gen2.crop.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen2CropCircle = "iphone.gen2.crop.circle"

        /// SF Symbols's name：iphone.gen2.landscape.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen2LandscapeSlash = "iphone.gen2.landscape.slash"

        /// SF Symbols's name：iphone.gen2.motion
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen2Motion = "iphone.gen2.motion"

        /// SF Symbols's name：iphone.gen3.and.arrow.left.and.arrow.right.inward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen3AndArrowLeftAndArrowRightInward = "iphone.gen3.and.arrow.left.and.arrow.right.inward"

        /// SF Symbols's name：iphone.gen3.badge.location
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen3BadgeLocation = "iphone.gen3.badge.location"

        /// SF Symbols's name：iphone.gen3.crop.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen3CropCircle = "iphone.gen3.crop.circle"

        /// SF Symbols's name：iphone.gen3.landscape.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen3LandscapeSlash = "iphone.gen3.landscape.slash"

        /// SF Symbols's name：iphone.gen3.motion
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneGen3Motion = "iphone.gen3.motion"

        /// SF Symbols's name：iphone.motion
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case iphoneMotion = "iphone.motion"

        /// SF Symbols's name：ipod.shuffle.gen1
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodShuffleGen1 = "ipod.shuffle.gen1"

        /// SF Symbols's name：ipod.shuffle.gen2
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodShuffleGen2 = "ipod.shuffle.gen2"

        /// SF Symbols's name：ipod.shuffle.gen3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodShuffleGen3 = "ipod.shuffle.gen3"

        /// SF Symbols's name：ipod.shuffle.gen4
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodShuffleGen4 = "ipod.shuffle.gen4"

        /// SF Symbols's name：ipod.touch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodTouch = "ipod.touch"

        /// SF Symbols's name：ipod.touch.landscape
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodTouchLandscape = "ipod.touch.landscape"

        /// SF Symbols's name：ipod.touch.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ipodTouchSlash = "ipod.touch.slash"

        /// SF Symbols's name：jacket
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case jacket = "jacket"

        /// SF Symbols's name：jacket.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case jacketFill = "jacket.fill"

        /// SF Symbols's name：key.2.on.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case key2OnRing = "key.2.on.ring"

        /// SF Symbols's name：key.2.on.ring.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case key2OnRingFill = "key.2.on.ring.fill"

        /// SF Symbols's name：key.car.radiowaves.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case keyCarRadiowavesForward = "key.car.radiowaves.forward"

        /// SF Symbols's name：key.car.radiowaves.forward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case keyCarRadiowavesForwardFill = "key.car.radiowaves.forward.fill"

        /// SF Symbols's name：key.car.radiowaves.forward.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case keyCarRadiowavesForwardFillRtl = "key.car.radiowaves.forward.fill.rtl"

        /// SF Symbols's name：key.car.radiowaves.forward.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case keyCarRadiowavesForwardRtl = "key.car.radiowaves.forward.rtl"

        /// SF Symbols's name：key.card
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case keyCard = "key.card"

        /// SF Symbols's name：key.card.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case keyCardFill = "key.card.fill"

        /// SF Symbols's name：kipsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignArrowTriangleheadCounterclockwiseRotate90 = "kipsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：kipsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignBankBuilding = "kipsign.bank.building"

        /// SF Symbols's name：kipsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignBankBuildingFill = "kipsign.bank.building.fill"

        /// SF Symbols's name：kipsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignGaugeChartLefthalfRighthalf = "kipsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：kipsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignGaugeChartLeftthirdTopthirdRightthird = "kipsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：kipsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignRing = "kipsign.ring"

        /// SF Symbols's name：kipsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case kipsignRingDashed = "kipsign.ring.dashed"

        /// SF Symbols's name：ladybug.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ladybugSlash = "ladybug.slash"

        /// SF Symbols's name：ladybug.slash.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ladybugSlashCircle = "ladybug.slash.circle"

        /// SF Symbols's name：ladybug.slash.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ladybugSlashCircleFill = "ladybug.slash.circle.fill"

        /// SF Symbols's name：ladybug.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case ladybugSlashFill = "ladybug.slash.fill"

        /// SF Symbols's name：larisign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignArrowTriangleheadCounterclockwiseRotate90 = "larisign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：larisign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignBankBuilding = "larisign.bank.building"

        /// SF Symbols's name：larisign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignBankBuildingFill = "larisign.bank.building.fill"

        /// SF Symbols's name：larisign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignGaugeChartLefthalfRighthalf = "larisign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：larisign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignGaugeChartLeftthirdTopthirdRightthird = "larisign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：larisign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignRing = "larisign.ring"

        /// SF Symbols's name：larisign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case larisignRingDashed = "larisign.ring.dashed"

        /// SF Symbols's name：leaf.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case leafArrowTriangleheadClockwise = "leaf.arrow.trianglehead.clockwise"

        /// SF Symbols's name：lessthanorequalto
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lessthanorequalto = "lessthanorequalto"

        /// SF Symbols's name：lessthanorequalto.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lessthanorequaltoCircle = "lessthanorequalto.circle"

        /// SF Symbols's name：lessthanorequalto.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lessthanorequaltoCircleFill = "lessthanorequalto.circle.fill"

        /// SF Symbols's name：lessthanorequalto.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lessthanorequaltoSquare = "lessthanorequalto.square"

        /// SF Symbols's name：lessthanorequalto.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lessthanorequaltoSquareFill = "lessthanorequalto.square.fill"

        /// SF Symbols's name：lirasign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignArrowTriangleheadCounterclockwiseRotate90 = "lirasign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：lirasign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignBankBuilding = "lirasign.bank.building"

        /// SF Symbols's name：lirasign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignBankBuildingFill = "lirasign.bank.building.fill"

        /// SF Symbols's name：lirasign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignGaugeChartLefthalfRighthalf = "lirasign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：lirasign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignGaugeChartLeftthirdTopthirdRightthird = "lirasign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：lirasign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignRing = "lirasign.ring"

        /// SF Symbols's name：lirasign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lirasignRingDashed = "lirasign.ring.dashed"

        /// SF Symbols's name：location.app
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case locationApp = "location.app"

        /// SF Symbols's name：location.app.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case locationAppFill = "location.app.fill"

        /// SF Symbols's name：lock.document
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lockDocument = "lock.document"

        /// SF Symbols's name：lock.document.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lockDocumentFill = "lock.document.fill"

        /// SF Symbols's name：lock.rectangle.on.rectangle.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case lockRectangleOnRectangleDashed = "lock.rectangle.on.rectangle.dashed"

        /// SF Symbols's name：macbook.and.applewatch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case macbookAndApplewatch = "macbook.and.applewatch"

        /// SF Symbols's name：macbook.and.vision.pro
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case macbookAndVisionPro = "macbook.and.vision.pro"

        /// SF Symbols's name：macbook.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case macbookSlash = "macbook.slash"

        /// SF Symbols's name：malaysianringgitsign
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsign = "malaysianringgitsign"

        /// SF Symbols's name：malaysianringgitsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignArrowTriangleheadCounterclockwiseRotate90 = "malaysianringgitsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：malaysianringgitsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignBankBuilding = "malaysianringgitsign.bank.building"

        /// SF Symbols's name：malaysianringgitsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignBankBuildingFill = "malaysianringgitsign.bank.building.fill"

        /// SF Symbols's name：malaysianringgitsign.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignCircle = "malaysianringgitsign.circle"

        /// SF Symbols's name：malaysianringgitsign.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignCircleFill = "malaysianringgitsign.circle.fill"

        /// SF Symbols's name：malaysianringgitsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignGaugeChartLefthalfRighthalf = "malaysianringgitsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：malaysianringgitsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignGaugeChartLeftthirdTopthirdRightthird = "malaysianringgitsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：malaysianringgitsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignRing = "malaysianringgitsign.ring"

        /// SF Symbols's name：malaysianringgitsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignRingDashed = "malaysianringgitsign.ring.dashed"

        /// SF Symbols's name：malaysianringgitsign.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignSquare = "malaysianringgitsign.square"

        /// SF Symbols's name：malaysianringgitsign.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case malaysianringgitsignSquareFill = "malaysianringgitsign.square.fill"

        /// SF Symbols's name：manatsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignArrowTriangleheadCounterclockwiseRotate90 = "manatsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：manatsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignBankBuilding = "manatsign.bank.building"

        /// SF Symbols's name：manatsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignBankBuildingFill = "manatsign.bank.building.fill"

        /// SF Symbols's name：manatsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignGaugeChartLefthalfRighthalf = "manatsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：manatsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignGaugeChartLeftthirdTopthirdRightthird = "manatsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：manatsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignRing = "manatsign.ring"

        /// SF Symbols's name：manatsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case manatsignRingDashed = "manatsign.ring.dashed"

        /// SF Symbols's name：matter.logo
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case matterLogo = "matter.logo"

        /// SF Symbols's name：mecca
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case mecca = "mecca"

        /// SF Symbols's name：microphone
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphone = "microphone"

        /// SF Symbols's name：microphone.and.signal.meter
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneAndSignalMeter = "microphone.and.signal.meter"

        /// SF Symbols's name：microphone.and.signal.meter.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneAndSignalMeterFill = "microphone.and.signal.meter.fill"

        /// SF Symbols's name：microphone.badge.ellipsis
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneBadgeEllipsis = "microphone.badge.ellipsis"

        /// SF Symbols's name：microphone.badge.ellipsis.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneBadgeEllipsisFill = "microphone.badge.ellipsis.fill"

        /// SF Symbols's name：microphone.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneBadgePlus = "microphone.badge.plus"

        /// SF Symbols's name：microphone.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneBadgePlusFill = "microphone.badge.plus.fill"

        /// SF Symbols's name：microphone.badge.xmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneBadgeXmark = "microphone.badge.xmark"

        /// SF Symbols's name：microphone.badge.xmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneBadgeXmarkFill = "microphone.badge.xmark.fill"

        /// SF Symbols's name：microphone.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneCircle = "microphone.circle"

        /// SF Symbols's name：microphone.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneCircleFill = "microphone.circle.fill"

        /// SF Symbols's name：microphone.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneFill = "microphone.fill"

        /// SF Symbols's name：microphone.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneSlash = "microphone.slash"

        /// SF Symbols's name：microphone.slash.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneSlashCircle = "microphone.slash.circle"

        /// SF Symbols's name：microphone.slash.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneSlashCircleFill = "microphone.slash.circle.fill"

        /// SF Symbols's name：microphone.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneSlashFill = "microphone.slash.fill"

        /// SF Symbols's name：microphone.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneSquare = "microphone.square"

        /// SF Symbols's name：microphone.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case microphoneSquareFill = "microphone.square.fill"

        /// SF Symbols's name：millsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignArrowTriangleheadCounterclockwiseRotate90 = "millsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：millsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignBankBuilding = "millsign.bank.building"

        /// SF Symbols's name：millsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignBankBuildingFill = "millsign.bank.building.fill"

        /// SF Symbols's name：millsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignGaugeChartLefthalfRighthalf = "millsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：millsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignGaugeChartLeftthirdTopthirdRightthird = "millsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：millsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignRing = "millsign.ring"

        /// SF Symbols's name：millsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case millsignRingDashed = "millsign.ring.dashed"

        /// SF Symbols's name：minus.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case minusArrowTriangleheadCounterclockwise = "minus.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：moon.road.lanes
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case moonRoadLanes = "moon.road.lanes"

        /// SF Symbols's name：moped
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case moped = "moped"

        /// SF Symbols's name：moped.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case mopedFill = "moped.fill"

        /// SF Symbols's name：motorcycle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case motorcycle = "motorcycle"

        /// SF Symbols's name：motorcycle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case motorcycleFill = "motorcycle.fill"

        /// SF Symbols's name：music.microphone
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case musicMicrophone = "music.microphone"

        /// SF Symbols's name：music.microphone.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case musicMicrophoneCircle = "music.microphone.circle"

        /// SF Symbols's name：music.microphone.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case musicMicrophoneCircleFill = "music.microphone.circle.fill"

        /// SF Symbols's name：nairasign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignArrowTriangleheadCounterclockwiseRotate90 = "nairasign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：nairasign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignBankBuilding = "nairasign.bank.building"

        /// SF Symbols's name：nairasign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignBankBuildingFill = "nairasign.bank.building.fill"

        /// SF Symbols's name：nairasign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignGaugeChartLefthalfRighthalf = "nairasign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：nairasign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignGaugeChartLeftthirdTopthirdRightthird = "nairasign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：nairasign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignRing = "nairasign.ring"

        /// SF Symbols's name：nairasign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case nairasignRingDashed = "nairasign.ring.dashed"

        /// SF Symbols's name：norwegiankronesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignArrowTriangleheadCounterclockwiseRotate90 = "norwegiankronesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：norwegiankronesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignBankBuilding = "norwegiankronesign.bank.building"

        /// SF Symbols's name：norwegiankronesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignBankBuildingFill = "norwegiankronesign.bank.building.fill"

        /// SF Symbols's name：norwegiankronesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignGaugeChartLefthalfRighthalf = "norwegiankronesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：norwegiankronesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignGaugeChartLeftthirdTopthirdRightthird = "norwegiankronesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：norwegiankronesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignRing = "norwegiankronesign.ring"

        /// SF Symbols's name：norwegiankronesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case norwegiankronesignRingDashed = "norwegiankronesign.ring.dashed"

        /// SF Symbols's name：notequal
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case notequal = "notequal"

        /// SF Symbols's name：notequal.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case notequalCircle = "notequal.circle"

        /// SF Symbols's name：notequal.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case notequalCircleFill = "notequal.circle.fill"

        /// SF Symbols's name：notequal.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case notequalSquare = "notequal.square"

        /// SF Symbols's name：notequal.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case notequalSquareFill = "notequal.square.fill"

        /// SF Symbols's name：numbers
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbers = "numbers"

        /// SF Symbols's name：numbers.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersAr = "numbers.ar"

        /// SF Symbols's name：numbers.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersHi = "numbers.hi"

        /// SF Symbols's name：numbers.rectangle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersRectangle = "numbers.rectangle"

        /// SF Symbols's name：numbers.rectangle.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersRectangleAr = "numbers.rectangle.ar"

        /// SF Symbols's name：numbers.rectangle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersRectangleFill = "numbers.rectangle.fill"

        /// SF Symbols's name：numbers.rectangle.fill.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersRectangleFillAr = "numbers.rectangle.fill.ar"

        /// SF Symbols's name：numbers.rectangle.fill.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersRectangleFillHi = "numbers.rectangle.fill.hi"

        /// SF Symbols's name：numbers.rectangle.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case numbersRectangleHi = "numbers.rectangle.hi"

        /// SF Symbols's name：oar.2.crossed.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case oar2CrossedCircle = "oar.2.crossed.circle"

        /// SF Symbols's name：oar.2.crossed.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case oar2CrossedCircleFill = "oar.2.crossed.circle.fill"

        /// SF Symbols's name：oilcan.and.thermometer
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case oilcanAndThermometer = "oilcan.and.thermometer"

        /// SF Symbols's name：oilcan.and.thermometer.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case oilcanAndThermometerFill = "oilcan.and.thermometer.fill"

        /// SF Symbols's name：parkingsign.radiowaves.down.right.off
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case parkingsignRadiowavesDownRightOff = "parkingsign.radiowaves.down.right.off"

        /// SF Symbols's name：parkingsign.radiowaves.left.and.right.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case parkingsignRadiowavesLeftAndRightSlash = "parkingsign.radiowaves.left.and.right.slash"

        /// SF Symbols's name：parkingsign.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case parkingsignSquare = "parkingsign.square"

        /// SF Symbols's name：parkingsign.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case parkingsignSquareFill = "parkingsign.square.fill"

        /// SF Symbols's name：person.2.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case person2ArrowTriangleheadCounterclockwise = "person.2.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：person.2.badge.minus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case person2BadgeMinus = "person.2.badge.minus"

        /// SF Symbols's name：person.2.badge.minus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case person2BadgeMinusFill = "person.2.badge.minus.fill"

        /// SF Symbols's name：person.2.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case person2BadgePlus = "person.2.badge.plus"

        /// SF Symbols's name：person.2.badge.plus.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case person2BadgePlusFill = "person.2.badge.plus.fill"

        /// SF Symbols's name：person.and.arrow.left.and.arrow.right.outward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personAndArrowLeftAndArrowRightOutward = "person.and.arrow.left.and.arrow.right.outward"

        /// SF Symbols's name：person.badge.shield.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personBadgeShieldExclamationmark = "person.badge.shield.exclamationmark"

        /// SF Symbols's name：person.badge.shield.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personBadgeShieldExclamationmarkFill = "person.badge.shield.exclamationmark.fill"

        /// SF Symbols's name：person.crop.badge.magnifyingglass
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personCropBadgeMagnifyingglass = "person.crop.badge.magnifyingglass"

        /// SF Symbols's name：person.crop.badge.magnifyingglass.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personCropBadgeMagnifyingglassFill = "person.crop.badge.magnifyingglass.fill"

        /// SF Symbols's name：person.crop.square.on.square.angled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personCropSquareOnSquareAngled = "person.crop.square.on.square.angled"

        /// SF Symbols's name：person.crop.square.on.square.angled.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personCropSquareOnSquareAngledFill = "person.crop.square.on.square.angled.fill"

        /// SF Symbols's name：person.fill.and.arrow.left.and.arrow.right.outward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personFillAndArrowLeftAndArrowRightOutward = "person.fill.and.arrow.left.and.arrow.right.outward"

        /// SF Symbols's name：personalhotspot.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case personalhotspotSlash = "personalhotspot.slash"

        /// SF Symbols's name：peruviansolessign
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessign = "peruviansolessign"

        /// SF Symbols's name：peruviansolessign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignArrowTriangleheadCounterclockwiseRotate90 = "peruviansolessign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：peruviansolessign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignBankBuilding = "peruviansolessign.bank.building"

        /// SF Symbols's name：peruviansolessign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignBankBuildingFill = "peruviansolessign.bank.building.fill"

        /// SF Symbols's name：peruviansolessign.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignCircle = "peruviansolessign.circle"

        /// SF Symbols's name：peruviansolessign.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignCircleFill = "peruviansolessign.circle.fill"

        /// SF Symbols's name：peruviansolessign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignGaugeChartLefthalfRighthalf = "peruviansolessign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：peruviansolessign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignGaugeChartLeftthirdTopthirdRightthird = "peruviansolessign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：peruviansolessign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignRing = "peruviansolessign.ring"

        /// SF Symbols's name：peruviansolessign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignRingDashed = "peruviansolessign.ring.dashed"

        /// SF Symbols's name：peruviansolessign.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignSquare = "peruviansolessign.square"

        /// SF Symbols's name：peruviansolessign.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case peruviansolessignSquareFill = "peruviansolessign.square.fill"

        /// SF Symbols's name：pesetasign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignArrowTriangleheadCounterclockwiseRotate90 = "pesetasign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：pesetasign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignBankBuilding = "pesetasign.bank.building"

        /// SF Symbols's name：pesetasign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignBankBuildingFill = "pesetasign.bank.building.fill"

        /// SF Symbols's name：pesetasign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignGaugeChartLefthalfRighthalf = "pesetasign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：pesetasign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignGaugeChartLeftthirdTopthirdRightthird = "pesetasign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：pesetasign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignRing = "pesetasign.ring"

        /// SF Symbols's name：pesetasign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesetasignRingDashed = "pesetasign.ring.dashed"

        /// SF Symbols's name：pesosign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignArrowTriangleheadCounterclockwiseRotate90 = "pesosign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：pesosign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignBankBuilding = "pesosign.bank.building"

        /// SF Symbols's name：pesosign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignBankBuildingFill = "pesosign.bank.building.fill"

        /// SF Symbols's name：pesosign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignGaugeChartLefthalfRighthalf = "pesosign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：pesosign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignGaugeChartLeftthirdTopthirdRightthird = "pesosign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：pesosign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignRing = "pesosign.ring"

        /// SF Symbols's name：pesosign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pesosignRingDashed = "pesosign.ring.dashed"

        /// SF Symbols's name：phone.badge.clock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case phoneBadgeClock = "phone.badge.clock"

        /// SF Symbols's name：phone.badge.clock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case phoneBadgeClockFill = "phone.badge.clock.fill"

        /// SF Symbols's name：photo.badge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case photoBadgeExclamationmark = "photo.badge.exclamationmark"

        /// SF Symbols's name：photo.badge.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case photoBadgeExclamationmarkFill = "photo.badge.exclamationmark.fill"

        /// SF Symbols's name：photo.on.rectangle.angled.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case photoOnRectangleAngledFill = "photo.on.rectangle.angled.fill"

        /// SF Symbols's name：plus.arrow.trianglehead.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case plusArrowTriangleheadClockwise = "plus.arrow.trianglehead.clockwise"

        /// SF Symbols's name：point.bottomleft.forward.to.arrow.triangle.scurvepath
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointBottomleftForwardToArrowTriangleScurvepath = "point.bottomleft.forward.to.arrow.triangle.scurvepath"

        /// SF Symbols's name：point.bottomleft.forward.to.arrow.triangle.scurvepath.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointBottomleftForwardToArrowTriangleScurvepathFill = "point.bottomleft.forward.to.arrow.triangle.scurvepath.fill"

        /// SF Symbols's name：point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointBottomleftForwardToArrowTriangleUturnScurvepath = "point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath"

        /// SF Symbols's name：point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointBottomleftForwardToArrowTriangleUturnScurvepathFill = "point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath.fill"

        /// SF Symbols's name：point.topright.arrow.triangle.backward.to.point.bottomleft.filled.scurvepath
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointToprightArrowTriangleBackwardToPointBottomleftFilledScurvepath = "point.topright.arrow.triangle.backward.to.point.bottomleft.filled.scurvepath"

        /// SF Symbols's name：point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointToprightArrowTriangleBackwardToPointBottomleftScurvepath = "point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath"

        /// SF Symbols's name：point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointToprightArrowTriangleBackwardToPointBottomleftScurvepathFill = "point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath.fill"

        /// SF Symbols's name：point.topright.filled.arrow.triangle.backward.to.point.bottomleft.scurvepath
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case pointToprightFilledArrowTriangleBackwardToPointBottomleftScurvepath = "point.topright.filled.arrow.triangle.backward.to.point.bottomleft.scurvepath"

        /// SF Symbols's name：polishzlotysign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignArrowTriangleheadCounterclockwiseRotate90 = "polishzlotysign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：polishzlotysign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignBankBuilding = "polishzlotysign.bank.building"

        /// SF Symbols's name：polishzlotysign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignBankBuildingFill = "polishzlotysign.bank.building.fill"

        /// SF Symbols's name：polishzlotysign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignGaugeChartLefthalfRighthalf = "polishzlotysign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：polishzlotysign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignGaugeChartLeftthirdTopthirdRightthird = "polishzlotysign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：polishzlotysign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignRing = "polishzlotysign.ring"

        /// SF Symbols's name：polishzlotysign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case polishzlotysignRingDashed = "polishzlotysign.ring.dashed"

        /// SF Symbols's name：powermeter
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case powermeter = "powermeter"

        /// SF Symbols's name：powerplug.portrait
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case powerplugPortrait = "powerplug.portrait"

        /// SF Symbols's name：powerplug.portrait.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case powerplugPortraitFill = "powerplug.portrait.fill"

        /// SF Symbols's name：printer.dotmatrix.filled.and.paper.inverse
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case printerDotmatrixFilledAndPaperInverse = "printer.dotmatrix.filled.and.paper.inverse"

        /// SF Symbols's name：printer.dotmatrix.inverse
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case printerDotmatrixInverse = "printer.dotmatrix.inverse"

        /// SF Symbols's name：printer.filled.and.paper.inverse
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case printerFilledAndPaperInverse = "printer.filled.and.paper.inverse"

        /// SF Symbols's name：printer.inverse
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case printerInverse = "printer.inverse"

        /// SF Symbols's name：progress.indicator
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case progressIndicator = "progress.indicator"

        /// SF Symbols's name：questionmark.circle.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkCircleDashed = "questionmark.circle.dashed"

        /// SF Symbols's name：questionmark.circle.dashed.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkCircleDashedAr = "questionmark.circle.dashed.ar"

        /// SF Symbols's name：questionmark.text.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkTextPage = "questionmark.text.page"

        /// SF Symbols's name：questionmark.text.page.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkTextPageAr = "questionmark.text.page.ar"

        /// SF Symbols's name：questionmark.text.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkTextPageFill = "questionmark.text.page.fill"

        /// SF Symbols's name：questionmark.text.page.fill.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkTextPageFillAr = "questionmark.text.page.fill.ar"

        /// SF Symbols's name：questionmark.text.page.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkTextPageFillRtl = "questionmark.text.page.fill.rtl"

        /// SF Symbols's name：questionmark.text.page.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case questionmarkTextPageRtl = "questionmark.text.page.rtl"

        /// SF Symbols's name：rectangle.expand.diagonal
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rectangleExpandDiagonal = "rectangle.expand.diagonal"

        /// SF Symbols's name：rectangle.grid.3x3
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rectangleGrid3x3 = "rectangle.grid.3x3"

        /// SF Symbols's name：rectangle.grid.3x3.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rectangleGrid3x3Fill = "rectangle.grid.3x3.fill"

        /// SF Symbols's name：rectangle.on.rectangle.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rectangleOnRectangleDashed = "rectangle.on.rectangle.dashed"

        /// SF Symbols's name：rectangle.pattern.checkered
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rectanglePatternCheckered = "rectangle.pattern.checkered"

        /// SF Symbols's name：richtext.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPage = "richtext.page"

        /// SF Symbols's name：richtext.page.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageAr = "richtext.page.ar"

        /// SF Symbols's name：richtext.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFill = "richtext.page.fill"

        /// SF Symbols's name：richtext.page.fill.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillAr = "richtext.page.fill.ar"

        /// SF Symbols's name：richtext.page.fill.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillHe = "richtext.page.fill.he"

        /// SF Symbols's name：richtext.page.fill.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillHi = "richtext.page.fill.hi"

        /// SF Symbols's name：richtext.page.fill.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillJa = "richtext.page.fill.ja"

        /// SF Symbols's name：richtext.page.fill.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillKo = "richtext.page.fill.ko"

        /// SF Symbols's name：richtext.page.fill.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillTh = "richtext.page.fill.th"

        /// SF Symbols's name：richtext.page.fill.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageFillZh = "richtext.page.fill.zh"

        /// SF Symbols's name：richtext.page.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageHe = "richtext.page.he"

        /// SF Symbols's name：richtext.page.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageHi = "richtext.page.hi"

        /// SF Symbols's name：richtext.page.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageJa = "richtext.page.ja"

        /// SF Symbols's name：richtext.page.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageKo = "richtext.page.ko"

        /// SF Symbols's name：richtext.page.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageTh = "richtext.page.th"

        /// SF Symbols's name：richtext.page.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case richtextPageZh = "richtext.page.zh"

        /// SF Symbols's name：robotic.vacuum
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case roboticVacuum = "robotic.vacuum"

        /// SF Symbols's name：robotic.vacuum.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case roboticVacuumFill = "robotic.vacuum.fill"

        /// SF Symbols's name：rublesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignArrowTriangleheadCounterclockwiseRotate90 = "rublesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：rublesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignBankBuilding = "rublesign.bank.building"

        /// SF Symbols's name：rublesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignBankBuildingFill = "rublesign.bank.building.fill"

        /// SF Symbols's name：rublesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignGaugeChartLefthalfRighthalf = "rublesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：rublesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignGaugeChartLeftthirdTopthirdRightthird = "rublesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：rublesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignRing = "rublesign.ring"

        /// SF Symbols's name：rublesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rublesignRingDashed = "rublesign.ring.dashed"

        /// SF Symbols's name：rugbyball
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rugbyball = "rugbyball"

        /// SF Symbols's name：rugbyball.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rugbyballCircle = "rugbyball.circle"

        /// SF Symbols's name：rugbyball.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rugbyballCircleFill = "rugbyball.circle.fill"

        /// SF Symbols's name：rugbyball.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rugbyballFill = "rugbyball.fill"

        /// SF Symbols's name：rupeesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignArrowTriangleheadCounterclockwiseRotate90 = "rupeesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：rupeesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignBankBuilding = "rupeesign.bank.building"

        /// SF Symbols's name：rupeesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignBankBuildingFill = "rupeesign.bank.building.fill"

        /// SF Symbols's name：rupeesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignGaugeChartLefthalfRighthalf = "rupeesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：rupeesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignGaugeChartLeftthirdTopthirdRightthird = "rupeesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：rupeesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignRing = "rupeesign.ring"

        /// SF Symbols's name：rupeesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case rupeesignRingDashed = "rupeesign.ring.dashed"

        /// SF Symbols's name：sharedwithyou
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sharedwithyou = "sharedwithyou"

        /// SF Symbols's name：sharedwithyou.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sharedwithyouCircle = "sharedwithyou.circle"

        /// SF Symbols's name：sharedwithyou.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sharedwithyouCircleFill = "sharedwithyou.circle.fill"

        /// SF Symbols's name：sharedwithyou.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sharedwithyouSlash = "sharedwithyou.slash"

        /// SF Symbols's name：shekelsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignArrowTriangleheadCounterclockwiseRotate90 = "shekelsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：shekelsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignBankBuilding = "shekelsign.bank.building"

        /// SF Symbols's name：shekelsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignBankBuildingFill = "shekelsign.bank.building.fill"

        /// SF Symbols's name：shekelsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignGaugeChartLefthalfRighthalf = "shekelsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：shekelsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignGaugeChartLeftthirdTopthirdRightthird = "shekelsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：shekelsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignRing = "shekelsign.ring"

        /// SF Symbols's name：shekelsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shekelsignRingDashed = "shekelsign.ring.dashed"

        /// SF Symbols's name：shield.pattern.checkered
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case shieldPatternCheckered = "shield.pattern.checkered"

        /// SF Symbols's name：singaporedollarsign
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsign = "singaporedollarsign"

        /// SF Symbols's name：singaporedollarsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignArrowTriangleheadCounterclockwiseRotate90 = "singaporedollarsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：singaporedollarsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignBankBuilding = "singaporedollarsign.bank.building"

        /// SF Symbols's name：singaporedollarsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignBankBuildingFill = "singaporedollarsign.bank.building.fill"

        /// SF Symbols's name：singaporedollarsign.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignCircle = "singaporedollarsign.circle"

        /// SF Symbols's name：singaporedollarsign.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignCircleFill = "singaporedollarsign.circle.fill"

        /// SF Symbols's name：singaporedollarsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignGaugeChartLefthalfRighthalf = "singaporedollarsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：singaporedollarsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignGaugeChartLeftthirdTopthirdRightthird = "singaporedollarsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：singaporedollarsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignRing = "singaporedollarsign.ring"

        /// SF Symbols's name：singaporedollarsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignRingDashed = "singaporedollarsign.ring.dashed"

        /// SF Symbols's name：singaporedollarsign.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignSquare = "singaporedollarsign.square"

        /// SF Symbols's name：singaporedollarsign.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case singaporedollarsignSquareFill = "singaporedollarsign.square.fill"

        /// SF Symbols's name：slider.horizontal.2.arrow.trianglehead.counterclockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sliderHorizontal2ArrowTriangleheadCounterclockwise = "slider.horizontal.2.arrow.trianglehead.counterclockwise"

        /// SF Symbols's name：slider.horizontal.2.rectangle.and.arrow.trianglehead.2.clockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sliderHorizontal2RectangleAndArrowTrianglehead2ClockwiseRotate90 = "slider.horizontal.2.rectangle.and.arrow.trianglehead.2.clockwise.rotate.90"

        /// SF Symbols's name：speaker.wave.1.arrowtriangles.up.right.down.left
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case speakerWave1ArrowtrianglesUpRightDownLeft = "speaker.wave.1.arrowtriangles.up.right.down.left"

        /// SF Symbols's name：square.and.arrow.down.badge.clock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case squareAndArrowDownBadgeClock = "square.and.arrow.down.badge.clock"

        /// SF Symbols's name：square.and.arrow.down.badge.clock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case squareAndArrowDownBadgeClockFill = "square.and.arrow.down.badge.clock.fill"

        /// SF Symbols's name：square.and.arrow.up.trianglebadge.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case squareAndArrowUpTrianglebadgeExclamationmarkFill = "square.and.arrow.up.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：square.grid.3x3.square.badge.ellipsis
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case squareGrid3x3SquareBadgeEllipsis = "square.grid.3x3.square.badge.ellipsis"

        /// SF Symbols's name：squareroot
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case squareroot = "squareroot"

        /// SF Symbols's name：steeringwheel.and.hands
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case steeringwheelAndHands = "steeringwheel.and.hands"

        /// SF Symbols's name：steeringwheel.arrow.trianglehead.counterclockwise.and.clockwise
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case steeringwheelArrowTriangleheadCounterclockwiseAndClockwise = "steeringwheel.arrow.trianglehead.counterclockwise.and.clockwise"

        /// SF Symbols's name：sterlingsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignArrowTriangleheadCounterclockwiseRotate90 = "sterlingsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：sterlingsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignBankBuilding = "sterlingsign.bank.building"

        /// SF Symbols's name：sterlingsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignBankBuildingFill = "sterlingsign.bank.building.fill"

        /// SF Symbols's name：sterlingsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignGaugeChartLefthalfRighthalf = "sterlingsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：sterlingsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignGaugeChartLeftthirdTopthirdRightthird = "sterlingsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：sterlingsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignRing = "sterlingsign.ring"

        /// SF Symbols's name：sterlingsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sterlingsignRingDashed = "sterlingsign.ring.dashed"

        /// SF Symbols's name：sun.lefthalf.filled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sunLefthalfFilled = "sun.lefthalf.filled"

        /// SF Symbols's name：sun.righthalf.filled
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case sunRighthalfFilled = "sun.righthalf.filled"

        /// SF Symbols's name：suspension.shock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suspensionShock = "suspension.shock"

        /// SF Symbols's name：suv.side.front.open.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideFrontOpenCrop = "suv.side.front.open.crop"

        /// SF Symbols's name：suv.side.front.open.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideFrontOpenCropFill = "suv.side.front.open.crop.fill"

        /// SF Symbols's name：suv.side.hill.descent.control
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideHillDescentControl = "suv.side.hill.descent.control"

        /// SF Symbols's name：suv.side.hill.descent.control.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideHillDescentControlFill = "suv.side.hill.descent.control.fill"

        /// SF Symbols's name：suv.side.rear.open.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideRearOpenCrop = "suv.side.rear.open.crop"

        /// SF Symbols's name：suv.side.rear.open.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideRearOpenCropFill = "suv.side.rear.open.crop.fill"

        /// SF Symbols's name：suv.side.roof.cargo.carrier
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideRoofCargoCarrier = "suv.side.roof.cargo.carrier"

        /// SF Symbols's name：suv.side.roof.cargo.carrier.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideRoofCargoCarrierFill = "suv.side.roof.cargo.carrier.fill"

        /// SF Symbols's name：suv.side.roof.cargo.carrier.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideRoofCargoCarrierSlash = "suv.side.roof.cargo.carrier.slash"

        /// SF Symbols's name：suv.side.roof.cargo.carrier.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case suvSideRoofCargoCarrierSlashFill = "suv.side.roof.cargo.carrier.slash.fill"

        /// SF Symbols's name：swedishkronasign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignArrowTriangleheadCounterclockwiseRotate90 = "swedishkronasign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：swedishkronasign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignBankBuilding = "swedishkronasign.bank.building"

        /// SF Symbols's name：swedishkronasign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignBankBuildingFill = "swedishkronasign.bank.building.fill"

        /// SF Symbols's name：swedishkronasign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignGaugeChartLefthalfRighthalf = "swedishkronasign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：swedishkronasign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignGaugeChartLeftthirdTopthirdRightthird = "swedishkronasign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：swedishkronasign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignRing = "swedishkronasign.ring"

        /// SF Symbols's name：swedishkronasign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case swedishkronasignRingDashed = "swedishkronasign.ring.dashed"

        /// SF Symbols's name：tachometer
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tachometer = "tachometer"

        /// SF Symbols's name：tengesign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignArrowTriangleheadCounterclockwiseRotate90 = "tengesign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：tengesign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignBankBuilding = "tengesign.bank.building"

        /// SF Symbols's name：tengesign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignBankBuildingFill = "tengesign.bank.building.fill"

        /// SF Symbols's name：tengesign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignGaugeChartLefthalfRighthalf = "tengesign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：tengesign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignGaugeChartLeftthirdTopthirdRightthird = "tengesign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：tengesign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignRing = "tengesign.ring"

        /// SF Symbols's name：tengesign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tengesignRingDashed = "tengesign.ring.dashed"

        /// SF Symbols's name：text.bubble.badge.clock
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textBubbleBadgeClock = "text.bubble.badge.clock"

        /// SF Symbols's name：text.bubble.badge.clock.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textBubbleBadgeClockFill = "text.bubble.badge.clock.fill"

        /// SF Symbols's name：text.bubble.badge.clock.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textBubbleBadgeClockFillRtl = "text.bubble.badge.clock.fill.rtl"

        /// SF Symbols's name：text.bubble.badge.clock.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textBubbleBadgeClockRtl = "text.bubble.badge.clock.rtl"

        /// SF Symbols's name：text.document
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textDocument = "text.document"

        /// SF Symbols's name：text.document.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textDocumentFill = "text.document.fill"

        /// SF Symbols's name：text.line.magnify
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textLineMagnify = "text.line.magnify"

        /// SF Symbols's name：text.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPage = "text.page"

        /// SF Symbols's name：text.page.badge.magnifyingglass
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPageBadgeMagnifyingglass = "text.page.badge.magnifyingglass"

        /// SF Symbols's name：text.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPageFill = "text.page.fill"

        /// SF Symbols's name：text.page.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPageSlash = "text.page.slash"

        /// SF Symbols's name：text.page.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPageSlashFill = "text.page.slash.fill"

        /// SF Symbols's name：text.page.slash.fill.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPageSlashFillRtl = "text.page.slash.fill.rtl"

        /// SF Symbols's name：text.page.slash.rtl
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textPageSlashRtl = "text.page.slash.rtl"

        /// SF Symbols's name：text.rectangle.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textRectanglePage = "text.rectangle.page"

        /// SF Symbols's name：text.rectangle.page.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textRectanglePageFill = "text.rectangle.page.fill"

        /// SF Symbols's name：textformat.alt.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltAr = "textformat.alt.ar"

        /// SF Symbols's name：textformat.alt.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltEl = "textformat.alt.el"

        /// SF Symbols's name：textformat.alt.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltHe = "textformat.alt.he"

        /// SF Symbols's name：textformat.alt.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltHi = "textformat.alt.hi"

        /// SF Symbols's name：textformat.alt.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltJa = "textformat.alt.ja"

        /// SF Symbols's name：textformat.alt.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltKo = "textformat.alt.ko"

        /// SF Symbols's name：textformat.alt.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltTh = "textformat.alt.th"

        /// SF Symbols's name：textformat.alt.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAltZh = "textformat.alt.zh"

        /// SF Symbols's name：textformat.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatAr = "textformat.ar"

        /// SF Symbols's name：textformat.characters
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharacters = "textformat.characters"

        /// SF Symbols's name：textformat.characters.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersAr = "textformat.characters.ar"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRight = "textformat.characters.arrow.left.and.right"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightAr = "textformat.characters.arrow.left.and.right.ar"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightEl = "textformat.characters.arrow.left.and.right.el"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightHe = "textformat.characters.arrow.left.and.right.he"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightHi = "textformat.characters.arrow.left.and.right.hi"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightJa = "textformat.characters.arrow.left.and.right.ja"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightKo = "textformat.characters.arrow.left.and.right.ko"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.ru
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightRu = "textformat.characters.arrow.left.and.right.ru"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightTh = "textformat.characters.arrow.left.and.right.th"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersArrowLeftAndRightZh = "textformat.characters.arrow.left.and.right.zh"

        /// SF Symbols's name：textformat.characters.dottedunderline
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderline = "textformat.characters.dottedunderline"

        /// SF Symbols's name：textformat.characters.dottedunderline.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineAr = "textformat.characters.dottedunderline.ar"

        /// SF Symbols's name：textformat.characters.dottedunderline.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineEl = "textformat.characters.dottedunderline.el"

        /// SF Symbols's name：textformat.characters.dottedunderline.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineHe = "textformat.characters.dottedunderline.he"

        /// SF Symbols's name：textformat.characters.dottedunderline.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineHi = "textformat.characters.dottedunderline.hi"

        /// SF Symbols's name：textformat.characters.dottedunderline.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineJa = "textformat.characters.dottedunderline.ja"

        /// SF Symbols's name：textformat.characters.dottedunderline.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineKo = "textformat.characters.dottedunderline.ko"

        /// SF Symbols's name：textformat.characters.dottedunderline.ru
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineRu = "textformat.characters.dottedunderline.ru"

        /// SF Symbols's name：textformat.characters.dottedunderline.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineTh = "textformat.characters.dottedunderline.th"

        /// SF Symbols's name：textformat.characters.dottedunderline.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersDottedunderlineZh = "textformat.characters.dottedunderline.zh"

        /// SF Symbols's name：textformat.characters.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersEl = "textformat.characters.el"

        /// SF Symbols's name：textformat.characters.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersHe = "textformat.characters.he"

        /// SF Symbols's name：textformat.characters.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersHi = "textformat.characters.hi"

        /// SF Symbols's name：textformat.characters.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersJa = "textformat.characters.ja"

        /// SF Symbols's name：textformat.characters.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersKo = "textformat.characters.ko"

        /// SF Symbols's name：textformat.characters.ru
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersRu = "textformat.characters.ru"

        /// SF Symbols's name：textformat.characters.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersTh = "textformat.characters.th"

        /// SF Symbols's name：textformat.characters.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatCharactersZh = "textformat.characters.zh"

        /// SF Symbols's name：textformat.el
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatEl = "textformat.el"

        /// SF Symbols's name：textformat.he
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatHe = "textformat.he"

        /// SF Symbols's name：textformat.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatHi = "textformat.hi"

        /// SF Symbols's name：textformat.ja
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatJa = "textformat.ja"

        /// SF Symbols's name：textformat.ko
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatKo = "textformat.ko"

        /// SF Symbols's name：textformat.numbers
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbers = "textformat.numbers"

        /// SF Symbols's name：textformat.numbers.ar
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersAr = "textformat.numbers.ar"

        /// SF Symbols's name：textformat.numbers.bn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersBn = "textformat.numbers.bn"

        /// SF Symbols's name：textformat.numbers.gu
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersGu = "textformat.numbers.gu"

        /// SF Symbols's name：textformat.numbers.hi
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersHi = "textformat.numbers.hi"

        /// SF Symbols's name：textformat.numbers.km
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersKm = "textformat.numbers.km"

        /// SF Symbols's name：textformat.numbers.kn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersKn = "textformat.numbers.kn"

        /// SF Symbols's name：textformat.numbers.ml
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersMl = "textformat.numbers.ml"

        /// SF Symbols's name：textformat.numbers.mni
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersMni = "textformat.numbers.mni"

        /// SF Symbols's name：textformat.numbers.my
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersMy = "textformat.numbers.my"

        /// SF Symbols's name：textformat.numbers.or
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersOr = "textformat.numbers.or"

        /// SF Symbols's name：textformat.numbers.pa
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersPa = "textformat.numbers.pa"

        /// SF Symbols's name：textformat.numbers.sat
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersSat = "textformat.numbers.sat"

        /// SF Symbols's name：textformat.numbers.te
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatNumbersTe = "textformat.numbers.te"

        /// SF Symbols's name：textformat.size.bn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeBn = "textformat.size.bn"

        /// SF Symbols's name：textformat.size.gu
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeGu = "textformat.size.gu"

        /// SF Symbols's name：textformat.size.kn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeKn = "textformat.size.kn"

        /// SF Symbols's name：textformat.size.larger.bn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerBn = "textformat.size.larger.bn"

        /// SF Symbols's name：textformat.size.larger.gu
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerGu = "textformat.size.larger.gu"

        /// SF Symbols's name：textformat.size.larger.kn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerKn = "textformat.size.larger.kn"

        /// SF Symbols's name：textformat.size.larger.ml
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerMl = "textformat.size.larger.ml"

        /// SF Symbols's name：textformat.size.larger.mni
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerMni = "textformat.size.larger.mni"

        /// SF Symbols's name：textformat.size.larger.mr
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerMr = "textformat.size.larger.mr"

        /// SF Symbols's name：textformat.size.larger.or
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerOr = "textformat.size.larger.or"

        /// SF Symbols's name：textformat.size.larger.pa
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerPa = "textformat.size.larger.pa"

        /// SF Symbols's name：textformat.size.larger.sat
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerSat = "textformat.size.larger.sat"

        /// SF Symbols's name：textformat.size.larger.si
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerSi = "textformat.size.larger.si"

        /// SF Symbols's name：textformat.size.larger.ta
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerTa = "textformat.size.larger.ta"

        /// SF Symbols's name：textformat.size.larger.te
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeLargerTe = "textformat.size.larger.te"

        /// SF Symbols's name：textformat.size.ml
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeMl = "textformat.size.ml"

        /// SF Symbols's name：textformat.size.mni
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeMni = "textformat.size.mni"

        /// SF Symbols's name：textformat.size.mr
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeMr = "textformat.size.mr"

        /// SF Symbols's name：textformat.size.or
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeOr = "textformat.size.or"

        /// SF Symbols's name：textformat.size.pa
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizePa = "textformat.size.pa"

        /// SF Symbols's name：textformat.size.sat
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSat = "textformat.size.sat"

        /// SF Symbols's name：textformat.size.si
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSi = "textformat.size.si"

        /// SF Symbols's name：textformat.size.smaller.bn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerBn = "textformat.size.smaller.bn"

        /// SF Symbols's name：textformat.size.smaller.gu
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerGu = "textformat.size.smaller.gu"

        /// SF Symbols's name：textformat.size.smaller.kn
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerKn = "textformat.size.smaller.kn"

        /// SF Symbols's name：textformat.size.smaller.ml
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerMl = "textformat.size.smaller.ml"

        /// SF Symbols's name：textformat.size.smaller.mni
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerMni = "textformat.size.smaller.mni"

        /// SF Symbols's name：textformat.size.smaller.mr
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerMr = "textformat.size.smaller.mr"

        /// SF Symbols's name：textformat.size.smaller.or
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerOr = "textformat.size.smaller.or"

        /// SF Symbols's name：textformat.size.smaller.pa
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerPa = "textformat.size.smaller.pa"

        /// SF Symbols's name：textformat.size.smaller.sat
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerSat = "textformat.size.smaller.sat"

        /// SF Symbols's name：textformat.size.smaller.si
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerSi = "textformat.size.smaller.si"

        /// SF Symbols's name：textformat.size.smaller.ta
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerTa = "textformat.size.smaller.ta"

        /// SF Symbols's name：textformat.size.smaller.te
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeSmallerTe = "textformat.size.smaller.te"

        /// SF Symbols's name：textformat.size.ta
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeTa = "textformat.size.ta"

        /// SF Symbols's name：textformat.size.te
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatSizeTe = "textformat.size.te"

        /// SF Symbols's name：textformat.th
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatTh = "textformat.th"

        /// SF Symbols's name：textformat.zh
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case textformatZh = "textformat.zh"

        /// SF Symbols's name：thermometer.and.liquid.waves.snowflake
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case thermometerAndLiquidWavesSnowflake = "thermometer.and.liquid.waves.snowflake"

        /// SF Symbols's name：thermometer.and.liquid.waves.trianglebadge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case thermometerAndLiquidWavesTrianglebadgeExclamationmark = "thermometer.and.liquid.waves.trianglebadge.exclamationmark"

        /// SF Symbols's name：thermometer.variable
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case thermometerVariable = "thermometer.variable"

        /// SF Symbols's name：tire
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tire = "tire"

        /// SF Symbols's name：tire.badge.snowflake
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tireBadgeSnowflake = "tire.badge.snowflake"

        /// SF Symbols's name：tow.hitch
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case towHitch = "tow.hitch"

        /// SF Symbols's name：tow.hitch.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case towHitchExclamationmark = "tow.hitch.exclamationmark"

        /// SF Symbols's name：tow.hitch.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case towHitchExclamationmarkFill = "tow.hitch.exclamationmark.fill"

        /// SF Symbols's name：tow.hitch.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case towHitchFill = "tow.hitch.fill"

        /// SF Symbols's name：truck.pickup.side.front.open.crop
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckPickupSideFrontOpenCrop = "truck.pickup.side.front.open.crop"

        /// SF Symbols's name：truck.pickup.side.front.open.crop.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckPickupSideFrontOpenCropFill = "truck.pickup.side.front.open.crop.fill"

        /// SF Symbols's name：truck.side.hill.descent.control
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckSideHillDescentControl = "truck.side.hill.descent.control"

        /// SF Symbols's name：truck.side.hill.descent.control.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckSideHillDescentControlFill = "truck.side.hill.descent.control.fill"

        /// SF Symbols's name：truck.side.roof.cargo.carrier
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckSideRoofCargoCarrier = "truck.side.roof.cargo.carrier"

        /// SF Symbols's name：truck.side.roof.cargo.carrier.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckSideRoofCargoCarrierFill = "truck.side.roof.cargo.carrier.fill"

        /// SF Symbols's name：truck.side.roof.cargo.carrier.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckSideRoofCargoCarrierSlash = "truck.side.roof.cargo.carrier.slash"

        /// SF Symbols's name：truck.side.roof.cargo.carrier.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case truckSideRoofCargoCarrierSlashFill = "truck.side.roof.cargo.carrier.slash.fill"

        /// SF Symbols's name：tsa
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tsa = "tsa"

        /// SF Symbols's name：tsa.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tsaCircle = "tsa.circle"

        /// SF Symbols's name：tsa.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tsaCircleFill = "tsa.circle.fill"

        /// SF Symbols's name：tsa.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tsaSlash = "tsa.slash"

        /// SF Symbols's name：tugriksign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignArrowTriangleheadCounterclockwiseRotate90 = "tugriksign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：tugriksign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignBankBuilding = "tugriksign.bank.building"

        /// SF Symbols's name：tugriksign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignBankBuildingFill = "tugriksign.bank.building.fill"

        /// SF Symbols's name：tugriksign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignGaugeChartLefthalfRighthalf = "tugriksign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：tugriksign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignGaugeChartLeftthirdTopthirdRightthird = "tugriksign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：tugriksign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignRing = "tugriksign.ring"

        /// SF Symbols's name：tugriksign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case tugriksignRingDashed = "tugriksign.ring.dashed"

        /// SF Symbols's name：turkishlirasign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignArrowTriangleheadCounterclockwiseRotate90 = "turkishlirasign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：turkishlirasign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignBankBuilding = "turkishlirasign.bank.building"

        /// SF Symbols's name：turkishlirasign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignBankBuildingFill = "turkishlirasign.bank.building.fill"

        /// SF Symbols's name：turkishlirasign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignGaugeChartLefthalfRighthalf = "turkishlirasign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：turkishlirasign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignGaugeChartLeftthirdTopthirdRightthird = "turkishlirasign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：turkishlirasign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignRing = "turkishlirasign.ring"

        /// SF Symbols's name：turkishlirasign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case turkishlirasignRingDashed = "turkishlirasign.ring.dashed"

        /// SF Symbols's name：vision.pro
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionPro = "vision.pro"

        /// SF Symbols's name：vision.pro.and.arrow.forward
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProAndArrowForward = "vision.pro.and.arrow.forward"

        /// SF Symbols's name：vision.pro.and.arrow.forward.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProAndArrowForwardFill = "vision.pro.and.arrow.forward.fill"

        /// SF Symbols's name：vision.pro.badge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProBadgeExclamationmark = "vision.pro.badge.exclamationmark"

        /// SF Symbols's name：vision.pro.badge.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProBadgeExclamationmarkFill = "vision.pro.badge.exclamationmark.fill"

        /// SF Symbols's name：vision.pro.badge.play
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProBadgePlay = "vision.pro.badge.play"

        /// SF Symbols's name：vision.pro.badge.play.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProBadgePlayFill = "vision.pro.badge.play.fill"

        /// SF Symbols's name：vision.pro.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProCircle = "vision.pro.circle"

        /// SF Symbols's name：vision.pro.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProCircleFill = "vision.pro.circle.fill"

        /// SF Symbols's name：vision.pro.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProFill = "vision.pro.fill"

        /// SF Symbols's name：vision.pro.slash
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProSlash = "vision.pro.slash"

        /// SF Symbols's name：vision.pro.slash.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProSlashCircle = "vision.pro.slash.circle"

        /// SF Symbols's name：vision.pro.slash.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProSlashCircleFill = "vision.pro.slash.circle.fill"

        /// SF Symbols's name：vision.pro.slash.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProSlashFill = "vision.pro.slash.fill"

        /// SF Symbols's name：vision.pro.trianglebadge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProTrianglebadgeExclamationmark = "vision.pro.trianglebadge.exclamationmark"

        /// SF Symbols's name：vision.pro.trianglebadge.exclamationmark.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case visionProTrianglebadgeExclamationmarkFill = "vision.pro.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：wallet.bifold
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case walletBifold = "wallet.bifold"

        /// SF Symbols's name：wallet.bifold.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case walletBifoldFill = "wallet.bifold.fill"

        /// SF Symbols's name：wand.and.sparkles
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wandAndSparkles = "wand.and.sparkles"

        /// SF Symbols's name：wand.and.sparkles.inverse
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wandAndSparklesInverse = "wand.and.sparkles.inverse"

        /// SF Symbols's name：water.waves.and.arrow.trianglehead.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case waterWavesAndArrowTriangleheadDown = "water.waves.and.arrow.trianglehead.down"

        /// SF Symbols's name：water.waves.and.arrow.trianglehead.down.trianglebadge.exclamationmark
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case waterWavesAndArrowTriangleheadDownTrianglebadgeExclamationmark = "water.waves.and.arrow.trianglehead.down.trianglebadge.exclamationmark"

        /// SF Symbols's name：water.waves.and.arrow.trianglehead.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case waterWavesAndArrowTriangleheadUp = "water.waves.and.arrow.trianglehead.up"

        /// SF Symbols's name：wave.3.down
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3Down = "wave.3.down"

        /// SF Symbols's name：wave.3.down.car.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownCarSide = "wave.3.down.car.side"

        /// SF Symbols's name：wave.3.down.car.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownCarSideFill = "wave.3.down.car.side.fill"

        /// SF Symbols's name：wave.3.down.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownCircle = "wave.3.down.circle"

        /// SF Symbols's name：wave.3.down.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownCircleFill = "wave.3.down.circle.fill"

        /// SF Symbols's name：wave.3.down.convertible.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownConvertibleSide = "wave.3.down.convertible.side"

        /// SF Symbols's name：wave.3.down.convertible.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownConvertibleSideFill = "wave.3.down.convertible.side.fill"

        /// SF Symbols's name：wave.3.down.pickup.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownPickupSide = "wave.3.down.pickup.side"

        /// SF Symbols's name：wave.3.down.pickup.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownPickupSideFill = "wave.3.down.pickup.side.fill"

        /// SF Symbols's name：wave.3.down.suv.side
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownSuvSide = "wave.3.down.suv.side"

        /// SF Symbols's name：wave.3.down.suv.side.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3DownSuvSideFill = "wave.3.down.suv.side.fill"

        /// SF Symbols's name：wave.3.up
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3Up = "wave.3.up"

        /// SF Symbols's name：wave.3.up.circle
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3UpCircle = "wave.3.up.circle"

        /// SF Symbols's name：wave.3.up.circle.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wave3UpCircleFill = "wave.3.up.circle.fill"

        /// SF Symbols's name：waveform.badge.microphone
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case waveformBadgeMicrophone = "waveform.badge.microphone"

        /// SF Symbols's name：wheelchair
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wheelchair = "wheelchair"

        /// SF Symbols's name：widget.extralarge
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetExtralarge = "widget.extralarge"

        /// SF Symbols's name：widget.extralarge.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetExtralargeBadgePlus = "widget.extralarge.badge.plus"

        /// SF Symbols's name：widget.large
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetLarge = "widget.large"

        /// SF Symbols's name：widget.large.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetLargeBadgePlus = "widget.large.badge.plus"

        /// SF Symbols's name：widget.medium
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetMedium = "widget.medium"

        /// SF Symbols's name：widget.medium.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetMediumBadgePlus = "widget.medium.badge.plus"

        /// SF Symbols's name：widget.small
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetSmall = "widget.small"

        /// SF Symbols's name：widget.small.badge.plus
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case widgetSmallBadgePlus = "widget.small.badge.plus"

        /// SF Symbols's name：wonsign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignArrowTriangleheadCounterclockwiseRotate90 = "wonsign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：wonsign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignBankBuilding = "wonsign.bank.building"

        /// SF Symbols's name：wonsign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignBankBuildingFill = "wonsign.bank.building.fill"

        /// SF Symbols's name：wonsign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignGaugeChartLefthalfRighthalf = "wonsign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：wonsign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignGaugeChartLeftthirdTopthirdRightthird = "wonsign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：wonsign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignRing = "wonsign.ring"

        /// SF Symbols's name：wonsign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case wonsignRingDashed = "wonsign.ring.dashed"

        /// SF Symbols's name：xmark.triangle.circle.square
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case xmarkTriangleCircleSquare = "xmark.triangle.circle.square"

        /// SF Symbols's name：xmark.triangle.circle.square.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case xmarkTriangleCircleSquareFill = "xmark.triangle.circle.square.fill"

        /// SF Symbols's name：yensign.arrow.trianglehead.counterclockwise.rotate.90
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignArrowTriangleheadCounterclockwiseRotate90 = "yensign.arrow.trianglehead.counterclockwise.rotate.90"

        /// SF Symbols's name：yensign.bank.building
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignBankBuilding = "yensign.bank.building"

        /// SF Symbols's name：yensign.bank.building.fill
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignBankBuildingFill = "yensign.bank.building.fill"

        /// SF Symbols's name：yensign.gauge.chart.lefthalf.righthalf
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignGaugeChartLefthalfRighthalf = "yensign.gauge.chart.lefthalf.righthalf"

        /// SF Symbols's name：yensign.gauge.chart.leftthird.topthird.rightthird
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignGaugeChartLeftthirdTopthirdRightthird = "yensign.gauge.chart.leftthird.topthird.rightthird"

        /// SF Symbols's name：yensign.ring
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignRing = "yensign.ring"

        /// SF Symbols's name：yensign.ring.dashed
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case yensignRingDashed = "yensign.ring.dashed"

        /// SF Symbols's name：zipper.page
        @available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)
        case zipperPage = "zipper.page"

        /// SF Symbols's name：bolt.house
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case boltHouse = "bolt.house"

        /// SF Symbols's name：bolt.house.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case boltHouseFill = "bolt.house.fill"

        /// SF Symbols's name：cable.connector.video
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case cableConnectorVideo = "cable.connector.video"

        /// SF Symbols's name：car.top.radiowaves.2.front.left.front.front.right
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case carTopRadiowaves2FrontLeftFrontFrontRight = "car.top.radiowaves.2.front.left.front.front.right"

        /// SF Symbols's name：car.top.radiowaves.2.front.left.front.front.right.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case carTopRadiowaves2FrontLeftFrontFrontRightFill = "car.top.radiowaves.2.front.left.front.front.right.fill"

        /// SF Symbols's name：car.top.radiowaves.2.rear.left.rear.rear.right
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case carTopRadiowaves2RearLeftRearRearRight = "car.top.radiowaves.2.rear.left.rear.rear.right"

        /// SF Symbols's name：car.top.radiowaves.2.rear.left.rear.rear.right.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case carTopRadiowaves2RearLeftRearRearRightFill = "car.top.radiowaves.2.rear.left.rear.rear.right.fill"

        /// SF Symbols's name：character.circle.bn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleBn = "character.circle.bn"

        /// SF Symbols's name：character.circle.fill.bn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillBn = "character.circle.fill.bn"

        /// SF Symbols's name：character.circle.fill.gu
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillGu = "character.circle.fill.gu"

        /// SF Symbols's name：character.circle.fill.kn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillKn = "character.circle.fill.kn"

        /// SF Symbols's name：character.circle.fill.ml
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillMl = "character.circle.fill.ml"

        /// SF Symbols's name：character.circle.fill.mni
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillMni = "character.circle.fill.mni"

        /// SF Symbols's name：character.circle.fill.mr
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillMr = "character.circle.fill.mr"

        /// SF Symbols's name：character.circle.fill.or
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillOr = "character.circle.fill.or"

        /// SF Symbols's name：character.circle.fill.pa
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillPa = "character.circle.fill.pa"

        /// SF Symbols's name：character.circle.fill.sat
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillSat = "character.circle.fill.sat"

        /// SF Symbols's name：character.circle.fill.si
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillSi = "character.circle.fill.si"

        /// SF Symbols's name：character.circle.fill.ta
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillTa = "character.circle.fill.ta"

        /// SF Symbols's name：character.circle.fill.te
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleFillTe = "character.circle.fill.te"

        /// SF Symbols's name：character.circle.gu
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleGu = "character.circle.gu"

        /// SF Symbols's name：character.circle.kn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleKn = "character.circle.kn"

        /// SF Symbols's name：character.circle.ml
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleMl = "character.circle.ml"

        /// SF Symbols's name：character.circle.mni
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleMni = "character.circle.mni"

        /// SF Symbols's name：character.circle.mr
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleMr = "character.circle.mr"

        /// SF Symbols's name：character.circle.or
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleOr = "character.circle.or"

        /// SF Symbols's name：character.circle.pa
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCirclePa = "character.circle.pa"

        /// SF Symbols's name：character.circle.sat
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleSat = "character.circle.sat"

        /// SF Symbols's name：character.circle.si
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleSi = "character.circle.si"

        /// SF Symbols's name：character.circle.ta
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleTa = "character.circle.ta"

        /// SF Symbols's name：character.circle.te
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterCircleTe = "character.circle.te"

        /// SF Symbols's name：character.square.bn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareBn = "character.square.bn"

        /// SF Symbols's name：character.square.fill.bn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillBn = "character.square.fill.bn"

        /// SF Symbols's name：character.square.fill.gu
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillGu = "character.square.fill.gu"

        /// SF Symbols's name：character.square.fill.kn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillKn = "character.square.fill.kn"

        /// SF Symbols's name：character.square.fill.ml
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillMl = "character.square.fill.ml"

        /// SF Symbols's name：character.square.fill.mni
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillMni = "character.square.fill.mni"

        /// SF Symbols's name：character.square.fill.mr
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillMr = "character.square.fill.mr"

        /// SF Symbols's name：character.square.fill.or
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillOr = "character.square.fill.or"

        /// SF Symbols's name：character.square.fill.pa
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillPa = "character.square.fill.pa"

        /// SF Symbols's name：character.square.fill.sat
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillSat = "character.square.fill.sat"

        /// SF Symbols's name：character.square.fill.si
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillSi = "character.square.fill.si"

        /// SF Symbols's name：character.square.fill.ta
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillTa = "character.square.fill.ta"

        /// SF Symbols's name：character.square.fill.te
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareFillTe = "character.square.fill.te"

        /// SF Symbols's name：character.square.gu
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareGu = "character.square.gu"

        /// SF Symbols's name：character.square.kn
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareKn = "character.square.kn"

        /// SF Symbols's name：character.square.ml
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareMl = "character.square.ml"

        /// SF Symbols's name：character.square.mni
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareMni = "character.square.mni"

        /// SF Symbols's name：character.square.mr
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareMr = "character.square.mr"

        /// SF Symbols's name：character.square.or
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareOr = "character.square.or"

        /// SF Symbols's name：character.square.pa
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquarePa = "character.square.pa"

        /// SF Symbols's name：character.square.sat
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareSat = "character.square.sat"

        /// SF Symbols's name：character.square.si
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareSi = "character.square.si"

        /// SF Symbols's name：character.square.ta
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareTa = "character.square.ta"

        /// SF Symbols's name：character.square.te
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case characterSquareTe = "character.square.te"

        /// SF Symbols's name：dot.car.top.radiowaves.2.rear.left.rear.rear.right
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case dotCarTopRadiowaves2RearLeftRearRearRight = "dot.car.top.radiowaves.2.rear.left.rear.rear.right"

        /// SF Symbols's name：dot.car.top.radiowaves.2.rear.left.rear.rear.right.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case dotCarTopRadiowaves2RearLeftRearRearRightFill = "dot.car.top.radiowaves.2.rear.left.rear.rear.right.fill"

        /// SF Symbols's name：envelope.stack
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case envelopeStack = "envelope.stack"

        /// SF Symbols's name：envelope.stack.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case envelopeStackFill = "envelope.stack.fill"

        /// SF Symbols's name：exclamationmark.message
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case exclamationmarkMessage = "exclamationmark.message"

        /// SF Symbols's name：exclamationmark.message.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case exclamationmarkMessageFill = "exclamationmark.message.fill"

        /// SF Symbols's name：hand.thumbsdown.slash
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case handThumbsdownSlash = "hand.thumbsdown.slash"

        /// SF Symbols's name：hand.thumbsdown.slash.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case handThumbsdownSlashFill = "hand.thumbsdown.slash.fill"

        /// SF Symbols's name：hand.thumbsup.slash
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case handThumbsupSlash = "hand.thumbsup.slash"

        /// SF Symbols's name：hand.thumbsup.slash.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case handThumbsupSlashFill = "hand.thumbsup.slash.fill"

        /// SF Symbols's name：laurel.leading.laurel.trailing
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case laurelLeadingLaurelTrailing = "laurel.leading.laurel.trailing"

        /// SF Symbols's name：memories.badge.checkmark
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case memoriesBadgeCheckmark = "memories.badge.checkmark"

        /// SF Symbols's name：memories.badge.xmark
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case memoriesBadgeXmark = "memories.badge.xmark"

        /// SF Symbols's name：photo.badge.magnifyingglass
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case photoBadgeMagnifyingglass = "photo.badge.magnifyingglass"

        /// SF Symbols's name：photo.badge.magnifyingglass.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case photoBadgeMagnifyingglassFill = "photo.badge.magnifyingglass.fill"

        /// SF Symbols's name：questionmark.message
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case questionmarkMessage = "questionmark.message"

        /// SF Symbols's name：questionmark.message.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case questionmarkMessageFill = "questionmark.message.fill"

        /// SF Symbols's name：rectangle.grid.3x1
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case rectangleGrid3x1 = "rectangle.grid.3x1"

        /// SF Symbols's name：rectangle.grid.3x1.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case rectangleGrid3x1Fill = "rectangle.grid.3x1.fill"

        /// SF Symbols's name：square.and.arrow.down.badge.checkmark
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case squareAndArrowDownBadgeCheckmark = "square.and.arrow.down.badge.checkmark"

        /// SF Symbols's name：square.and.arrow.down.badge.checkmark.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case squareAndArrowDownBadgeCheckmarkFill = "square.and.arrow.down.badge.checkmark.fill"

        /// SF Symbols's name：square.and.arrow.down.badge.xmark
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case squareAndArrowDownBadgeXmark = "square.and.arrow.down.badge.xmark"

        /// SF Symbols's name：square.and.arrow.down.badge.xmark.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case squareAndArrowDownBadgeXmarkFill = "square.and.arrow.down.badge.xmark.fill"

        /// SF Symbols's name：waveform.badge.checkmark
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformBadgeCheckmark = "waveform.badge.checkmark"

        /// SF Symbols's name：waveform.badge.xmark
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformBadgeXmark = "waveform.badge.xmark"

        /// SF Symbols's name：waveform.path.ecg.magnifyingglass
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgMagnifyingglass = "waveform.path.ecg.magnifyingglass"

        /// SF Symbols's name：waveform.path.ecg.text
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgText = "waveform.path.ecg.text"

        /// SF Symbols's name：waveform.path.ecg.text.clipboard
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextClipboard = "waveform.path.ecg.text.clipboard"

        /// SF Symbols's name：waveform.path.ecg.text.clipboard.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextClipboardFill = "waveform.path.ecg.text.clipboard.fill"

        /// SF Symbols's name：waveform.path.ecg.text.clipboard.fill.rtl
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextClipboardFillRtl = "waveform.path.ecg.text.clipboard.fill.rtl"

        /// SF Symbols's name：waveform.path.ecg.text.clipboard.rtl
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextClipboardRtl = "waveform.path.ecg.text.clipboard.rtl"

        /// SF Symbols's name：waveform.path.ecg.text.page
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextPage = "waveform.path.ecg.text.page"

        /// SF Symbols's name：waveform.path.ecg.text.page.fill
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextPageFill = "waveform.path.ecg.text.page.fill"

        /// SF Symbols's name：waveform.path.ecg.text.page.fill.rtl
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextPageFillRtl = "waveform.path.ecg.text.page.fill.rtl"

        /// SF Symbols's name：waveform.path.ecg.text.page.rtl
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextPageRtl = "waveform.path.ecg.text.page.rtl"

        /// SF Symbols's name：waveform.path.ecg.text.rtl
        @available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *)
        case waveformPathEcgTextRtl = "waveform.path.ecg.text.rtl"

        /// SF Symbols's name：airpods.gen4
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case airpodsGen4 = "airpods.gen4"

        /// SF Symbols's name：airpods.gen4.chargingcase.wireless
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case airpodsGen4ChargingcaseWireless = "airpods.gen4.chargingcase.wireless"

        /// SF Symbols's name：airpods.gen4.chargingcase.wireless.fill
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case airpodsGen4ChargingcaseWirelessFill = "airpods.gen4.chargingcase.wireless.fill"

        /// SF Symbols's name：airpods.gen4.left
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case airpodsGen4Left = "airpods.gen4.left"

        /// SF Symbols's name：airpods.gen4.right
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case airpodsGen4Right = "airpods.gen4.right"

        /// SF Symbols's name：apple.writing.tools
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case appleWritingTools = "apple.writing.tools"

        /// SF Symbols's name：exclamationmark.triangle.text.page
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case exclamationmarkTriangleTextPage = "exclamationmark.triangle.text.page"

        /// SF Symbols's name：exclamationmark.triangle.text.page.fill
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case exclamationmarkTriangleTextPageFill = "exclamationmark.triangle.text.page.fill"

        /// SF Symbols's name：exclamationmark.triangle.text.page.fill.rtl
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case exclamationmarkTriangleTextPageFillRtl = "exclamationmark.triangle.text.page.fill.rtl"

        /// SF Symbols's name：exclamationmark.triangle.text.page.rtl
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case exclamationmarkTriangleTextPageRtl = "exclamationmark.triangle.text.page.rtl"

        /// SF Symbols's name：figure.seated.side.left.air.distribution.upper.and.middle.and.lower
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case figureSeatedSideLeftAirDistributionUpperAndMiddleAndLower = "figure.seated.side.left.air.distribution.upper.and.middle.and.lower"

        /// SF Symbols's name：figure.seated.side.right.air.distribution.upper.and.middle.and.lower
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case figureSeatedSideRightAirDistributionUpperAndMiddleAndLower = "figure.seated.side.right.air.distribution.upper.and.middle.and.lower"

        /// SF Symbols's name：headphones.dots
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case headphonesDots = "headphones.dots"

        /// SF Symbols's name：info.triangle
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case infoTriangle = "info.triangle"

        /// SF Symbols's name：info.triangle.fill
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case infoTriangleFill = "info.triangle.fill"

        /// SF Symbols's name：inset.filled.rectangle.and.person.filled.circle
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case insetFilledRectangleAndPersonFilledCircle = "inset.filled.rectangle.and.person.filled.circle"

        /// SF Symbols's name：inset.filled.rectangle.and.person.filled.circle.fill
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case insetFilledRectangleAndPersonFilledCircleFill = "inset.filled.rectangle.and.person.filled.circle.fill"

        /// SF Symbols's name：questionmark.message.ar
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case questionmarkMessageAr = "questionmark.message.ar"

        /// SF Symbols's name：questionmark.message.fill.ar
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case questionmarkMessageFillAr = "questionmark.message.fill.ar"

        /// SF Symbols's name：receipt
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case receipt = "receipt"

        /// SF Symbols's name：receipt.fill
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case receiptFill = "receipt.fill"

        /// SF Symbols's name：wand.and.outline
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case wandAndOutline = "wand.and.outline"

        /// SF Symbols's name：wand.and.outline.inverse
        @available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *)
        case wandAndOutlineInverse = "wand.and.outline.inverse"

        /// SF Symbols's name：arrow.backward.to.line.compact
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case arrowBackwardToLineCompact = "arrow.backward.to.line.compact"

        /// SF Symbols's name：arrow.forward.to.line.compact
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case arrowForwardToLineCompact = "arrow.forward.to.line.compact"

        /// SF Symbols's name：car.side.arrow.left.and.right
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carSideArrowLeftAndRight = "car.side.arrow.left.and.right"

        /// SF Symbols's name：car.side.arrow.left.and.right.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carSideArrowLeftAndRightFill = "car.side.arrow.left.and.right.fill"

        /// SF Symbols's name：car.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle = "car.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle"

        /// SF Symbols's name：car.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill = "car.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill"

        /// SF Symbols's name：car.side.rear.and.collision.and.car.side.front.and.arrow.forward
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carSideRearAndCollisionAndCarSideFrontAndArrowForward = "car.side.rear.and.collision.and.car.side.front.and.arrow.forward"

        /// SF Symbols's name：car.side.rear.and.collision.and.car.side.front.and.steeringwheel
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carSideRearAndCollisionAndCarSideFrontAndSteeringwheel = "car.side.rear.and.collision.and.car.side.front.and.steeringwheel"

        /// SF Symbols's name：car.top.lane.dashed.departure.left.slash
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carTopLaneDashedDepartureLeftSlash = "car.top.lane.dashed.departure.left.slash"

        /// SF Symbols's name：car.top.lane.dashed.departure.left.slash.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carTopLaneDashedDepartureLeftSlashFill = "car.top.lane.dashed.departure.left.slash.fill"

        /// SF Symbols's name：car.top.lane.dashed.departure.right.slash
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carTopLaneDashedDepartureRightSlash = "car.top.lane.dashed.departure.right.slash"

        /// SF Symbols's name：car.top.lane.dashed.departure.right.slash.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case carTopLaneDashedDepartureRightSlashFill = "car.top.lane.dashed.departure.right.slash.fill"

        /// SF Symbols's name：character.cursor.ibeam.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamBn = "character.cursor.ibeam.bn"

        /// SF Symbols's name：character.cursor.ibeam.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamGu = "character.cursor.ibeam.gu"

        /// SF Symbols's name：character.cursor.ibeam.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamKn = "character.cursor.ibeam.kn"

        /// SF Symbols's name：character.cursor.ibeam.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamMl = "character.cursor.ibeam.ml"

        /// SF Symbols's name：character.cursor.ibeam.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamMni = "character.cursor.ibeam.mni"

        /// SF Symbols's name：character.cursor.ibeam.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamMr = "character.cursor.ibeam.mr"

        /// SF Symbols's name：character.cursor.ibeam.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamOr = "character.cursor.ibeam.or"

        /// SF Symbols's name：character.cursor.ibeam.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamPa = "character.cursor.ibeam.pa"

        /// SF Symbols's name：character.cursor.ibeam.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamSat = "character.cursor.ibeam.sat"

        /// SF Symbols's name：character.cursor.ibeam.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamSi = "character.cursor.ibeam.si"

        /// SF Symbols's name：character.cursor.ibeam.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamTa = "character.cursor.ibeam.ta"

        /// SF Symbols's name：character.cursor.ibeam.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterCursorIbeamTe = "character.cursor.ibeam.te"

        /// SF Symbols's name：character.magnify.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyBn = "character.magnify.bn"

        /// SF Symbols's name：character.magnify.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyGu = "character.magnify.gu"

        /// SF Symbols's name：character.magnify.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyKn = "character.magnify.kn"

        /// SF Symbols's name：character.magnify.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyMl = "character.magnify.ml"

        /// SF Symbols's name：character.magnify.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyMni = "character.magnify.mni"

        /// SF Symbols's name：character.magnify.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyMr = "character.magnify.mr"

        /// SF Symbols's name：character.magnify.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyOr = "character.magnify.or"

        /// SF Symbols's name：character.magnify.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyPa = "character.magnify.pa"

        /// SF Symbols's name：character.magnify.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifySat = "character.magnify.sat"

        /// SF Symbols's name：character.magnify.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifySi = "character.magnify.si"

        /// SF Symbols's name：character.magnify.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyTa = "character.magnify.ta"

        /// SF Symbols's name：character.magnify.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterMagnifyTe = "character.magnify.te"

        /// SF Symbols's name：character.textbox.badge.sparkles
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparkles = "character.textbox.badge.sparkles"

        /// SF Symbols's name：character.textbox.badge.sparkles.ar
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesAr = "character.textbox.badge.sparkles.ar"

        /// SF Symbols's name：character.textbox.badge.sparkles.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesBn = "character.textbox.badge.sparkles.bn"

        /// SF Symbols's name：character.textbox.badge.sparkles.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesGu = "character.textbox.badge.sparkles.gu"

        /// SF Symbols's name：character.textbox.badge.sparkles.he
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesHe = "character.textbox.badge.sparkles.he"

        /// SF Symbols's name：character.textbox.badge.sparkles.hi
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesHi = "character.textbox.badge.sparkles.hi"

        /// SF Symbols's name：character.textbox.badge.sparkles.ja
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesJa = "character.textbox.badge.sparkles.ja"

        /// SF Symbols's name：character.textbox.badge.sparkles.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesKn = "character.textbox.badge.sparkles.kn"

        /// SF Symbols's name：character.textbox.badge.sparkles.ko
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesKo = "character.textbox.badge.sparkles.ko"

        /// SF Symbols's name：character.textbox.badge.sparkles.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesMl = "character.textbox.badge.sparkles.ml"

        /// SF Symbols's name：character.textbox.badge.sparkles.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesMni = "character.textbox.badge.sparkles.mni"

        /// SF Symbols's name：character.textbox.badge.sparkles.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesMr = "character.textbox.badge.sparkles.mr"

        /// SF Symbols's name：character.textbox.badge.sparkles.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesOr = "character.textbox.badge.sparkles.or"

        /// SF Symbols's name：character.textbox.badge.sparkles.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesPa = "character.textbox.badge.sparkles.pa"

        /// SF Symbols's name：character.textbox.badge.sparkles.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesSat = "character.textbox.badge.sparkles.sat"

        /// SF Symbols's name：character.textbox.badge.sparkles.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesSi = "character.textbox.badge.sparkles.si"

        /// SF Symbols's name：character.textbox.badge.sparkles.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesTa = "character.textbox.badge.sparkles.ta"

        /// SF Symbols's name：character.textbox.badge.sparkles.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesTe = "character.textbox.badge.sparkles.te"

        /// SF Symbols's name：character.textbox.badge.sparkles.th
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesTh = "character.textbox.badge.sparkles.th"

        /// SF Symbols's name：character.textbox.badge.sparkles.zh
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBadgeSparklesZh = "character.textbox.badge.sparkles.zh"

        /// SF Symbols's name：character.textbox.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxBn = "character.textbox.bn"

        /// SF Symbols's name：character.textbox.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxGu = "character.textbox.gu"

        /// SF Symbols's name：character.textbox.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxKn = "character.textbox.kn"

        /// SF Symbols's name：character.textbox.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxMl = "character.textbox.ml"

        /// SF Symbols's name：character.textbox.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxMni = "character.textbox.mni"

        /// SF Symbols's name：character.textbox.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxMr = "character.textbox.mr"

        /// SF Symbols's name：character.textbox.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxOr = "character.textbox.or"

        /// SF Symbols's name：character.textbox.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxPa = "character.textbox.pa"

        /// SF Symbols's name：character.textbox.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxSat = "character.textbox.sat"

        /// SF Symbols's name：character.textbox.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxSi = "character.textbox.si"

        /// SF Symbols's name：character.textbox.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxTa = "character.textbox.ta"

        /// SF Symbols's name：character.textbox.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case characterTextboxTe = "character.textbox.te"

        /// SF Symbols's name：convertible.side.arrow.left.and.right
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case convertibleSideArrowLeftAndRight = "convertible.side.arrow.left.and.right"

        /// SF Symbols's name：convertible.side.arrow.left.and.right.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case convertibleSideArrowLeftAndRightFill = "convertible.side.arrow.left.and.right.fill"

        /// SF Symbols's name：convertible.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case convertibleSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle = "convertible.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle"

        /// SF Symbols's name：convertible.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case convertibleSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill = "convertible.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill"

        /// SF Symbols's name：cursorarrow.resize.north.east.south.east
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case cursorarrowResizeNorthEastSouthEast = "cursorarrow.resize.north.east.south.east"

        /// SF Symbols's name：electronic.toll.collection
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollection = "electronic.toll.collection"

        /// SF Symbols's name：electronic.toll.collection.rectangle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollectionRectangle = "electronic.toll.collection.rectangle"

        /// SF Symbols's name：electronic.toll.collection.rectangle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollectionRectangleFill = "electronic.toll.collection.rectangle.fill"

        /// SF Symbols's name：electronic.toll.collection.rectangle.slash
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollectionRectangleSlash = "electronic.toll.collection.rectangle.slash"

        /// SF Symbols's name：electronic.toll.collection.rectangle.slash.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollectionRectangleSlashFill = "electronic.toll.collection.rectangle.slash.fill"

        /// SF Symbols's name：electronic.toll.collection.rectangle.trianglebadge.exclamationmark
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollectionRectangleTrianglebadgeExclamationmark = "electronic.toll.collection.rectangle.trianglebadge.exclamationmark"

        /// SF Symbols's name：electronic.toll.collection.rectangle.trianglebadge.exclamationmark.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case electronicTollCollectionRectangleTrianglebadgeExclamationmarkFill = "electronic.toll.collection.rectangle.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：engine.emission.and.drop.2.water.wave.below
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case engineEmissionAndDrop2WaterWaveBelow = "engine.emission.and.drop.2.water.wave.below"

        /// SF Symbols's name：envelope.and.arrow.3.down
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case envelopeAndArrow3Down = "envelope.and.arrow.3.down"

        /// SF Symbols's name：envelope.and.arrow.3.down.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case envelopeAndArrow3DownFill = "envelope.and.arrow.3.down.fill"

        /// SF Symbols's name：flag.pattern.checkered.lc
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case flagPatternCheckeredLc = "flag.pattern.checkered.lc"

        /// SF Symbols's name：fuel.filter.water
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case fuelFilterWater = "fuel.filter.water"

        /// SF Symbols's name：function.ar
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case functionAr = "function.ar"

        /// SF Symbols's name：hydrogen
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case hydrogen = "hydrogen"

        /// SF Symbols's name：hydrogen.circle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case hydrogenCircle = "hydrogen.circle"

        /// SF Symbols's name：hydrogen.circle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case hydrogenCircleFill = "hydrogen.circle.fill"

        /// SF Symbols's name：hydrogen.square
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case hydrogenSquare = "hydrogen.square"

        /// SF Symbols's name：hydrogen.square.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case hydrogenSquareFill = "hydrogen.square.fill"

        /// SF Symbols's name：info.circle.text.page
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case infoCircleTextPage = "info.circle.text.page"

        /// SF Symbols's name：info.circle.text.page.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case infoCircleTextPageFill = "info.circle.text.page.fill"

        /// SF Symbols's name：info.circle.text.page.fill.rtl
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case infoCircleTextPageFillRtl = "info.circle.text.page.fill.rtl"

        /// SF Symbols's name：info.circle.text.page.rtl
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case infoCircleTextPageRtl = "info.circle.text.page.rtl"

        /// SF Symbols's name：key.car.side
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keyCarSide = "key.car.side"

        /// SF Symbols's name：key.car.side.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keyCarSideFill = "key.car.side.fill"

        /// SF Symbols's name：key.convertible.side
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keyConvertibleSide = "key.convertible.side"

        /// SF Symbols's name：key.convertible.side.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keyConvertibleSideFill = "key.convertible.side.fill"

        /// SF Symbols's name：key.suv.side
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keySuvSide = "key.suv.side"

        /// SF Symbols's name：key.suv.side.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keySuvSideFill = "key.suv.side.fill"

        /// SF Symbols's name：key.truck.pickup.side
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keyTruckPickupSide = "key.truck.pickup.side"

        /// SF Symbols's name：key.truck.pickup.side.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case keyTruckPickupSideFill = "key.truck.pickup.side.fill"

        /// SF Symbols's name：long.text.page.and.pencil
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case longTextPageAndPencil = "long.text.page.and.pencil"

        /// SF Symbols's name：long.text.page.and.pencil.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case longTextPageAndPencilFill = "long.text.page.and.pencil.fill"

        /// SF Symbols's name：macmini.gen2
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case macminiGen2 = "macmini.gen2"

        /// SF Symbols's name：macmini.gen2.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case macminiGen2Fill = "macmini.gen2.fill"

        /// SF Symbols's name：macmini.gen3
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case macminiGen3 = "macmini.gen3"

        /// SF Symbols's name：macmini.gen3.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case macminiGen3Fill = "macmini.gen3.fill"

        /// SF Symbols's name：memories.slash
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case memoriesSlash = "memories.slash"

        /// SF Symbols's name：minus.plus.batteryblock.stack.arrowtriangle.left
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case minusPlusBatteryblockStackArrowtriangleLeft = "minus.plus.batteryblock.stack.arrowtriangle.left"

        /// SF Symbols's name：minus.plus.batteryblock.stack.arrowtriangle.left.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case minusPlusBatteryblockStackArrowtriangleLeftFill = "minus.plus.batteryblock.stack.arrowtriangle.left.fill"

        /// SF Symbols's name：minus.plus.batteryblock.stack.arrowtriangle.right
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case minusPlusBatteryblockStackArrowtriangleRight = "minus.plus.batteryblock.stack.arrowtriangle.right"

        /// SF Symbols's name：minus.plus.batteryblock.stack.arrowtriangle.right.and.arrowtriangle.left
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case minusPlusBatteryblockStackArrowtriangleRightAndArrowtriangleLeft = "minus.plus.batteryblock.stack.arrowtriangle.right.and.arrowtriangle.left"

        /// SF Symbols's name：minus.plus.batteryblock.stack.arrowtriangle.right.and.arrowtriangle.left.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case minusPlusBatteryblockStackArrowtriangleRightAndArrowtriangleLeftFill = "minus.plus.batteryblock.stack.arrowtriangle.right.and.arrowtriangle.left.fill"

        /// SF Symbols's name：minus.plus.batteryblock.stack.arrowtriangle.right.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case minusPlusBatteryblockStackArrowtriangleRightFill = "minus.plus.batteryblock.stack.arrowtriangle.right.fill"

        /// SF Symbols's name：nosign.badge.clock
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case nosignBadgeClock = "nosign.badge.clock"

        /// SF Symbols's name：person.checkmark.and.xmark
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case personCheckmarkAndXmark = "person.checkmark.and.xmark"

        /// SF Symbols's name：person.checkmark.and.xmark.rtl
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case personCheckmarkAndXmarkRtl = "person.checkmark.and.xmark.rtl"

        /// SF Symbols's name：person.fill.checkmark.and.xmark
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case personFillCheckmarkAndXmark = "person.fill.checkmark.and.xmark"

        /// SF Symbols's name：person.fill.checkmark.and.xmark.rtl
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case personFillCheckmarkAndXmarkRtl = "person.fill.checkmark.and.xmark.rtl"

        /// SF Symbols's name：photo.badge.shield.exclamationmark
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case photoBadgeShieldExclamationmark = "photo.badge.shield.exclamationmark"

        /// SF Symbols's name：photo.badge.shield.exclamationmark.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case photoBadgeShieldExclamationmarkFill = "photo.badge.shield.exclamationmark.fill"

        /// SF Symbols's name：photo.trianglebadge.exclamationmark
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case photoTrianglebadgeExclamationmark = "photo.trianglebadge.exclamationmark"

        /// SF Symbols's name：photo.trianglebadge.exclamationmark.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case photoTrianglebadgeExclamationmarkFill = "photo.trianglebadge.exclamationmark.fill"

        /// SF Symbols's name：pi
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case pi = "pi"

        /// SF Symbols's name：pi.circle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case piCircle = "pi.circle"

        /// SF Symbols's name：pi.circle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case piCircleFill = "pi.circle.fill"

        /// SF Symbols's name：pi.square
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case piSquare = "pi.square"

        /// SF Symbols's name：pi.square.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case piSquareFill = "pi.square.fill"

        /// SF Symbols's name：plus.minus.capsule
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case plusMinusCapsule = "plus.minus.capsule"

        /// SF Symbols's name：plus.minus.capsule.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case plusMinusCapsuleFill = "plus.minus.capsule.fill"

        /// SF Symbols's name：repeat.badge.xmark.circle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case repeatBadgeXmarkCircleFill = "repeat.badge.xmark.circle.fill"

        /// SF Symbols's name：road.lane.arrowtriangle.2.outward
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case roadLaneArrowtriangle2Outward = "road.lane.arrowtriangle.2.outward"

        /// SF Symbols's name：robotic.vacuum.and.arrowtriangle.up
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case roboticVacuumAndArrowtriangleUp = "robotic.vacuum.and.arrowtriangle.up"

        /// SF Symbols's name：robotic.vacuum.and.arrowtriangle.up.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case roboticVacuumAndArrowtriangleUpFill = "robotic.vacuum.and.arrowtriangle.up.fill"

        /// SF Symbols's name：robotic.vacuum.and.ellipsis
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case roboticVacuumAndEllipsis = "robotic.vacuum.and.ellipsis"

        /// SF Symbols's name：robotic.vacuum.and.ellipsis.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case roboticVacuumAndEllipsisFill = "robotic.vacuum.and.ellipsis.fill"

        /// SF Symbols's name：spoon.serving
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case spoonServing = "spoon.serving"

        /// SF Symbols's name：square.and.arrow.up.badge.checkmark
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case squareAndArrowUpBadgeCheckmark = "square.and.arrow.up.badge.checkmark"

        /// SF Symbols's name：square.and.arrow.up.badge.checkmark.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case squareAndArrowUpBadgeCheckmarkFill = "square.and.arrow.up.badge.checkmark.fill"

        /// SF Symbols's name：squareshape.split.2x2.dotted.inside
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case squareshapeSplit2x2DottedInside = "squareshape.split.2x2.dotted.inside"

        /// SF Symbols's name：squareshape.split.2x2.dotted.inside.and.outside
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case squareshapeSplit2x2DottedInsideAndOutside = "squareshape.split.2x2.dotted.inside.and.outside"

        /// SF Symbols's name：squareshape.split.2x2.dotted.outside
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case squareshapeSplit2x2DottedOutside = "squareshape.split.2x2.dotted.outside"

        /// SF Symbols's name：star.hexagon
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case starHexagon = "star.hexagon"

        /// SF Symbols's name：star.hexagon.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case starHexagonFill = "star.hexagon.fill"

        /// SF Symbols's name：suv.side.arrow.left.and.right
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case suvSideArrowLeftAndRight = "suv.side.arrow.left.and.right"

        /// SF Symbols's name：suv.side.arrow.left.and.right.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case suvSideArrowLeftAndRightFill = "suv.side.arrow.left.and.right.fill"

        /// SF Symbols's name：suv.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case suvSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle = "suv.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle"

        /// SF Symbols's name：suv.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case suvSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill = "suv.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill"

        /// SF Symbols's name：textformat.alt.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltBn = "textformat.alt.bn"

        /// SF Symbols's name：textformat.alt.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltGu = "textformat.alt.gu"

        /// SF Symbols's name：textformat.alt.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltKn = "textformat.alt.kn"

        /// SF Symbols's name：textformat.alt.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltMl = "textformat.alt.ml"

        /// SF Symbols's name：textformat.alt.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltMni = "textformat.alt.mni"

        /// SF Symbols's name：textformat.alt.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltMr = "textformat.alt.mr"

        /// SF Symbols's name：textformat.alt.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltOr = "textformat.alt.or"

        /// SF Symbols's name：textformat.alt.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltPa = "textformat.alt.pa"

        /// SF Symbols's name：textformat.alt.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltSat = "textformat.alt.sat"

        /// SF Symbols's name：textformat.alt.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltSi = "textformat.alt.si"

        /// SF Symbols's name：textformat.alt.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltTa = "textformat.alt.ta"

        /// SF Symbols's name：textformat.alt.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatAltTe = "textformat.alt.te"

        /// SF Symbols's name：textformat.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatBn = "textformat.bn"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightBn = "textformat.characters.arrow.left.and.right.bn"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightGu = "textformat.characters.arrow.left.and.right.gu"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightKn = "textformat.characters.arrow.left.and.right.kn"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightMl = "textformat.characters.arrow.left.and.right.ml"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightMni = "textformat.characters.arrow.left.and.right.mni"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightMr = "textformat.characters.arrow.left.and.right.mr"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightOr = "textformat.characters.arrow.left.and.right.or"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightPa = "textformat.characters.arrow.left.and.right.pa"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightSat = "textformat.characters.arrow.left.and.right.sat"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightSi = "textformat.characters.arrow.left.and.right.si"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightTa = "textformat.characters.arrow.left.and.right.ta"

        /// SF Symbols's name：textformat.characters.arrow.left.and.right.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersArrowLeftAndRightTe = "textformat.characters.arrow.left.and.right.te"

        /// SF Symbols's name：textformat.characters.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersBn = "textformat.characters.bn"

        /// SF Symbols's name：textformat.characters.dottedunderline.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineBn = "textformat.characters.dottedunderline.bn"

        /// SF Symbols's name：textformat.characters.dottedunderline.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineGu = "textformat.characters.dottedunderline.gu"

        /// SF Symbols's name：textformat.characters.dottedunderline.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineKn = "textformat.characters.dottedunderline.kn"

        /// SF Symbols's name：textformat.characters.dottedunderline.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineMl = "textformat.characters.dottedunderline.ml"

        /// SF Symbols's name：textformat.characters.dottedunderline.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineMni = "textformat.characters.dottedunderline.mni"

        /// SF Symbols's name：textformat.characters.dottedunderline.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineMr = "textformat.characters.dottedunderline.mr"

        /// SF Symbols's name：textformat.characters.dottedunderline.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineOr = "textformat.characters.dottedunderline.or"

        /// SF Symbols's name：textformat.characters.dottedunderline.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlinePa = "textformat.characters.dottedunderline.pa"

        /// SF Symbols's name：textformat.characters.dottedunderline.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineSat = "textformat.characters.dottedunderline.sat"

        /// SF Symbols's name：textformat.characters.dottedunderline.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineSi = "textformat.characters.dottedunderline.si"

        /// SF Symbols's name：textformat.characters.dottedunderline.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineTa = "textformat.characters.dottedunderline.ta"

        /// SF Symbols's name：textformat.characters.dottedunderline.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersDottedunderlineTe = "textformat.characters.dottedunderline.te"

        /// SF Symbols's name：textformat.characters.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersGu = "textformat.characters.gu"

        /// SF Symbols's name：textformat.characters.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersKn = "textformat.characters.kn"

        /// SF Symbols's name：textformat.characters.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersMl = "textformat.characters.ml"

        /// SF Symbols's name：textformat.characters.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersMni = "textformat.characters.mni"

        /// SF Symbols's name：textformat.characters.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersMr = "textformat.characters.mr"

        /// SF Symbols's name：textformat.characters.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersOr = "textformat.characters.or"

        /// SF Symbols's name：textformat.characters.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersPa = "textformat.characters.pa"

        /// SF Symbols's name：textformat.characters.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersSat = "textformat.characters.sat"

        /// SF Symbols's name：textformat.characters.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersSi = "textformat.characters.si"

        /// SF Symbols's name：textformat.characters.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersTa = "textformat.characters.ta"

        /// SF Symbols's name：textformat.characters.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatCharactersTe = "textformat.characters.te"

        /// SF Symbols's name：textformat.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatGu = "textformat.gu"

        /// SF Symbols's name：textformat.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatKn = "textformat.kn"

        /// SF Symbols's name：textformat.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatMl = "textformat.ml"

        /// SF Symbols's name：textformat.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatMni = "textformat.mni"

        /// SF Symbols's name：textformat.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatMr = "textformat.mr"

        /// SF Symbols's name：textformat.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatOr = "textformat.or"

        /// SF Symbols's name：textformat.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatPa = "textformat.pa"

        /// SF Symbols's name：textformat.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSat = "textformat.sat"

        /// SF Symbols's name：textformat.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSi = "textformat.si"

        /// SF Symbols's name：textformat.subscript.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptBn = "textformat.subscript.bn"

        /// SF Symbols's name：textformat.subscript.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptGu = "textformat.subscript.gu"

        /// SF Symbols's name：textformat.subscript.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptKn = "textformat.subscript.kn"

        /// SF Symbols's name：textformat.subscript.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptMl = "textformat.subscript.ml"

        /// SF Symbols's name：textformat.subscript.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptMni = "textformat.subscript.mni"

        /// SF Symbols's name：textformat.subscript.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptMr = "textformat.subscript.mr"

        /// SF Symbols's name：textformat.subscript.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptOr = "textformat.subscript.or"

        /// SF Symbols's name：textformat.subscript.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptPa = "textformat.subscript.pa"

        /// SF Symbols's name：textformat.subscript.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptSat = "textformat.subscript.sat"

        /// SF Symbols's name：textformat.subscript.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptSi = "textformat.subscript.si"

        /// SF Symbols's name：textformat.subscript.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptTa = "textformat.subscript.ta"

        /// SF Symbols's name：textformat.subscript.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSubscriptTe = "textformat.subscript.te"

        /// SF Symbols's name：textformat.superscript.bn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptBn = "textformat.superscript.bn"

        /// SF Symbols's name：textformat.superscript.gu
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptGu = "textformat.superscript.gu"

        /// SF Symbols's name：textformat.superscript.kn
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptKn = "textformat.superscript.kn"

        /// SF Symbols's name：textformat.superscript.ml
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptMl = "textformat.superscript.ml"

        /// SF Symbols's name：textformat.superscript.mni
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptMni = "textformat.superscript.mni"

        /// SF Symbols's name：textformat.superscript.mr
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptMr = "textformat.superscript.mr"

        /// SF Symbols's name：textformat.superscript.or
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptOr = "textformat.superscript.or"

        /// SF Symbols's name：textformat.superscript.pa
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptPa = "textformat.superscript.pa"

        /// SF Symbols's name：textformat.superscript.sat
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptSat = "textformat.superscript.sat"

        /// SF Symbols's name：textformat.superscript.si
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptSi = "textformat.superscript.si"

        /// SF Symbols's name：textformat.superscript.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptTa = "textformat.superscript.ta"

        /// SF Symbols's name：textformat.superscript.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatSuperscriptTe = "textformat.superscript.te"

        /// SF Symbols's name：textformat.ta
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatTa = "textformat.ta"

        /// SF Symbols's name：textformat.te
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case textformatTe = "textformat.te"

        /// SF Symbols's name：truck.pickup.side.arrow.left.and.right
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case truckPickupSideArrowLeftAndRight = "truck.pickup.side.arrow.left.and.right"

        /// SF Symbols's name：truck.pickup.side.arrow.left.and.right.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case truckPickupSideArrowLeftAndRightFill = "truck.pickup.side.arrow.left.and.right.fill"

        /// SF Symbols's name：truck.pickup.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case truckPickupSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle = "truck.pickup.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle"

        /// SF Symbols's name：truck.pickup.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill
        @available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *)
        case truckPickupSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill = "truck.pickup.side.hill.down.and.gauge.open.with.lines.needle.25percent.and.arrowtriangle.fill"

        /// SF Symbols's name：apple.intelligence.badge.xmark
        @available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *)
        case appleIntelligenceBadgeXmark = "apple.intelligence.badge.xmark"

        /// SF Symbols's name：beats.powerbeats.pro.2
        @available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *)
        case beatsPowerbeatsPro2 = "beats.powerbeats.pro.2"

        /// SF Symbols's name：beats.powerbeats.pro.2.chargingcase
        @available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *)
        case beatsPowerbeatsPro2Chargingcase = "beats.powerbeats.pro.2.chargingcase"

        /// SF Symbols's name：beats.powerbeats.pro.2.chargingcase.fill
        @available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *)
        case beatsPowerbeatsPro2ChargingcaseFill = "beats.powerbeats.pro.2.chargingcase.fill"

        /// SF Symbols's name：beats.powerbeats.pro.2.left
        @available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *)
        case beatsPowerbeatsPro2Left = "beats.powerbeats.pro.2.left"

        /// SF Symbols's name：beats.powerbeats.pro.2.right
        @available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *)
        case beatsPowerbeatsPro2Right = "beats.powerbeats.pro.2.right"

        public static var allCases: [Self] {
            var allCases: [Self] = []

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._0Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._0CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._0Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._0SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._00Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._00CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._00Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._00SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._01Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._01CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._01Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._01SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._02Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._02CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._02Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._02SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._03Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._03CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._03Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._03SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._04Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._04CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._04Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._04SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._05Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._05CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._05Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._05SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._06Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._06CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._06Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._06SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._07Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._07CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._07Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._07SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._08Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._08CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._08Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._08SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._09Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._09CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._09Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._09SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._1Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._1CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._1Magnifyingglass)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._1Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._1SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._10Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._10CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._10Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._10SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._11Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._11CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._11Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._11SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._12Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._12CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._12Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._12SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._13Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._13CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._13Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._13SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._14Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._14CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._14Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._14SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._15Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._15CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._15Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._15SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._16Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._16CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._16Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._16SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._17Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._17CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._17Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._17SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._18Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._18CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._18Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._18SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._19Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._19CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._19Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._19SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._2Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._2CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._2Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._2SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._20Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._20CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._20Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._20SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._21Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._21CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._21Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._21SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._22Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._22CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._22Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._22SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._23Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._23CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._23Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._23SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._24Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._24CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._24Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._24SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._25Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._25CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._25Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._25SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._26Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._26CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._26Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._26SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._27Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._27CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._27Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._27SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._28Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._28CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._28Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._28SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._29Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._29CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._29Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._29SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._3Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._3CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._3Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._3SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._30Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._30CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._30Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._30SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._31Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._31CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._31Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._31SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._32Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._32CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._32Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._32SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._33Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._33CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._33Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._33SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._34Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._34CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._34Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._34SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._35Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._35CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._35Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._35SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._36Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._36CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._36Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._36SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._37Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._37CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._37Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._37SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._38Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._38CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._38Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._38SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._39Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._39CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._39Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._39SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4AltCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4AltCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4AltSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4AltSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._4SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._40Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._40CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._40Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._40SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._41Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._41CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._41Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._41SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._42Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._42CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._42Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._42SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._43Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._43CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._43Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._43SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._44Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._44CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._44Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._44SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._45Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._45CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._45Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._45SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._46Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._46CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._46Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._46SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._47Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._47CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._47Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._47SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._48Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._48CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._48Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._48SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._49Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._49CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._49Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._49SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._5Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._5CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._5Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._5SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._50Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._50CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._50Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._50SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6AltCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6AltCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6AltSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6AltSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._6SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._7Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._7CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._7Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._7SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._8Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._8CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._8Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._8SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9AltCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9AltCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9AltSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9AltSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9Circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9CircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9Square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self._9SquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.a)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.aCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.aCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.aSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.aSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.airplane)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.airplayaudio)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.airplayvideo)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.alarm)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.alarmFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.alt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ant)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.antCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.antCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.antFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.antennaRadiowavesLeftAndRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.app)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.appBadge)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.appBadgeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.appFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.appGift)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.appGiftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.archivebox)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.archiveboxFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arkit)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrow2Circlepath)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrow2CirclepathCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrow2CirclepathCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrow2Squarepath)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrow3Trianglepath)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowBranch)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowClockwise)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowClockwiseCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowClockwiseCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowClockwiseIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowClockwiseIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowCounterclockwise)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowCounterclockwiseCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowCounterclockwiseCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowCounterclockwiseIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowCounterclockwiseIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownDoc)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownDocFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeftVideo)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownLeftVideoFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownToLine)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowDownToLineAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftAndRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftAndRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftAndRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftAndRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftAndRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftToLine)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowLeftToLineAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowMerge)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightArrowLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightArrowLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightArrowLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightArrowLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightArrowLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightToLine)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowRightToLineAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowSwap)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnDownLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnDownRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnLeftDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnLeftUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnRightDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnRightUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnUpLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowTurnUpRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpAndDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpAndDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpAndDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpAndDownSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpAndDownSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpArrowDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpArrowDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpArrowDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpArrowDownSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpArrowDownSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpBin)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpBinFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpDoc)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpDocFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightDiamond)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightDiamondFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightVideo)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpRightVideoFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpToLine)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUpToLineAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnDownSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnDownSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnUpCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnUpCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnUpSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowUturnUpSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeft2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeft2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowshapeTurnUpRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleDownFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleDownSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleDownSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleLeftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleUpCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleUpCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleUpFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleUpSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.arrowtriangleUpSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.asteriskCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.asteriskCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.at)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.atBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.atBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.australsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.australsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.australsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.australsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.backward)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.backwardEnd)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.backwardEndAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.backwardEndAltFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.backwardEndFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.backwardFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.badgePlusRadiowavesRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bag)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bagBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bagBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bagFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bagFillBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bagFillBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bahtsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bahtsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bahtsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bahtsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bandage)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bandageFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.barcode)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.barcodeViewfinder)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.battery0)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.battery100)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.battery25)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bedDouble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bedDoubleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bell)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bellCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bellCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bellFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bellSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bellSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.binXmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.binXmarkFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bitcoinsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bitcoinsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bitcoinsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bitcoinsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bold)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boldItalicUnderline)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boldUnderline)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bolt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltBadgeA)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltBadgeAFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltHorizontal)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltHorizontalCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltHorizontalCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltHorizontalFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltHorizontalIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltHorizontalIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.boltSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.book)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bookCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bookCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bookFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bookmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bookmarkFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.briefcase)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.briefcaseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleLeftAndBubbleRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleLeftAndBubbleRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleLeftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleMiddleBottom)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleMiddleBottomFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleMiddleTop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleMiddleTopFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.bubbleRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.burn)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.burst)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.burstFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.calendar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.calendarBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.calendarBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.calendarCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.calendarCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.camera)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraOnRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraOnRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraRotate)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraRotateFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cameraViewfinder)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.capslock)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.capslockFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.capsule)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.capsuleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.captionsBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.captionsBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.carFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cart)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cartBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cartBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cartFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cartFillBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cartFillBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cedisignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cedisignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cedisignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cedisignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.centsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.centsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.centsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.centsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chartBar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chartBarFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chartPie)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chartPieFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkSeal)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkSealFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkShield)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkShieldFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.checkmarkSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronCompactDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronCompactLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronCompactRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronCompactUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronDownSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronDownSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeft2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeftCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeftCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeftSlashChevronRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeftSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronLeftSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronRight2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronRightCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronRightCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronRightSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronRightSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronUpChevronDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronUpCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronUpCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronUpSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.chevronUpSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleBottomthirdSplit)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleGrid3x3)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleGrid3x3Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleGridHex)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleGridHexFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleLefthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.circleRighthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.clear)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.clearFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.clock)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.clockFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudBolt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudBoltFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudBoltRain)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudBoltRainFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudDrizzle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudDrizzleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudFog)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudFogFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudHail)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudHailFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudHeavyrain)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudHeavyrainFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudMoon)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudMoonBolt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudMoonBoltFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudMoonFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudMoonRain)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudMoonRainFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudRain)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudRainFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSleet)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSleetFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSnow)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSnowFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSun)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSunBolt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSunBoltFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSunFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSunRain)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cloudSunRainFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.coloncurrencysignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.coloncurrencysignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.coloncurrencysignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.coloncurrencysignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.command)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.control)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.creditcard)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.creditcardFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.crop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cropRotate)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cruzeirosignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cruzeirosignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cruzeirosignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cruzeirosignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cube)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cubeBox)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cubeBoxFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cubeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.cursorRays)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.decreaseIndent)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.decreaseQuotelevel)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.deleteLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.deleteLeftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.deleteRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.deleteRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.desktopcomputer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dial)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dialFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.divide)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.divideCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.divideCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.divideSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.divideSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.doc)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docAppend)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docOnClipboard)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docOnClipboardFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docOnDoc)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docOnDocFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docPlaintext)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docRichtext)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docText)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docTextFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docTextMagnifyingglass)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.docTextViewfinder)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dollarsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dollarsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dollarsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dollarsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dongsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dongsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dongsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dongsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dotRadiowavesLeftAndRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dotRadiowavesRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dotSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dotSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dropTriangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.dropTriangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ear)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eject)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ejectFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ellipsesBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ellipsesBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ellipsis)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ellipsisCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ellipsisCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelope)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeBadge)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeBadgeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeOpen)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.envelopeOpenFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.equal)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.equalCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.equalCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.equalSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.equalSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.escape)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eurosignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eurosignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eurosignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eurosignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkOctagon)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkOctagonFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkShield)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkShieldFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkTriangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.exclamationmarkTriangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eye)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyeSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyeSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyedropper)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyedropperFull)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyedropperHalffull)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.eyeglasses)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fCursive)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fCursiveCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fCursiveCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.faceid)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.film)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.filmFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flag)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flagCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flagCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flagFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flagSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flagSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flame)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flameFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.florinsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.florinsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.florinsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.florinsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flowchart)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.flowchartFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folder)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderBadgePersonCrop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderFillBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderFillBadgePersonCrop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.folderFillBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.forward)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.forwardEnd)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.forwardEndAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.forwardEndAltFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.forwardEndFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.forwardFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.francsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.francsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.francsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.francsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.function)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.fx)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gamecontroller)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gamecontrollerFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gauge)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gaugeBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gaugeBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gear)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gift)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.giftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.globe)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward10)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward10Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward10Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward15)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward15Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward15Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward30)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward30Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward30Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward45)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward45Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward45Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward60)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward60Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward60Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward75)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward75Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward75Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward90)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward90Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackward90Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gobackwardMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward10)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward10Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward10Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward15)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward15Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward15Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward30)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward30Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward30Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward45)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward45Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward45Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward60)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward60Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward60Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward75)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward75Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward75Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward90)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward90Ar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforward90Hi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.goforwardPlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.greaterthan)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.greaterthanCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.greaterthanCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.greaterthanSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.greaterthanSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.grid)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gridCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.gridCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.guaranisignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.guaranisignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.guaranisignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.guaranisignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.guitars)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hammer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hammerFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handDraw)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handDrawFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handPointLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handPointLeftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handPointRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handPointRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handRaised)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handRaisedFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handRaisedSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handRaisedSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handThumbsdown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handThumbsdownFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handThumbsup)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.handThumbsupFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.headphones)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heart)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartSlashCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartSlashCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.heartSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.helm)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hexagon)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hexagonFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hifispeaker)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hifispeakerFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hourglass)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hourglassBottomhalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hourglassTophalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.house)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.houseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hryvniasignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hryvniasignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hryvniasignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hryvniasignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.hurricane)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.iCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.iCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.iSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.iSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudAndArrowDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudAndArrowDownFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudAndArrowUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudAndArrowUpFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.icloudSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.increaseIndent)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.increaseQuotelevel)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.indianrupeesignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.indianrupeesignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.indianrupeesignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.indianrupeesignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.info)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.infoCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.infoCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.italic)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.jCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.jCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.jSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.jSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.keyboard)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.keyboardChevronCompactDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kipsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kipsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kipsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.kipsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.largecircleFillCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.larisignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.larisignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.larisignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.larisignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lasso)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.leafArrowCirclepath)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lessthan)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lessthanCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lessthanCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lessthanSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lessthanSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lightMax)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lightMin)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lightbulb)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lightbulbFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lightbulbSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lightbulbSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lineHorizontal3)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lineHorizontal3Decrease)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lineHorizontal3DecreaseCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lineHorizontal3DecreaseCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.link)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.linkCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.linkCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.linkIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.linkIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lirasignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lirasignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lirasignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lirasignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.listBullet)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.listBulletBelowRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.listBulletIndent)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.listDash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.listNumber)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.listNumberRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.livephoto)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.livephotoPlay)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.livephotoSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.location)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationNorth)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationNorthFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationNorthLine)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationNorthLineFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.locationSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lock)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockOpen)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockOpenFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockRotation)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockRotationOpen)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockShield)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockShieldFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.lockSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.macwindow)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.magnifyingglass)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.magnifyingglassCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.magnifyingglassCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.manatsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.manatsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.manatsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.manatsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.map)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mapFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mappin)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mappinAndEllipse)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mappinSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.memories)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.memoriesBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.memoriesBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.message)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.messageCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.messageCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.messageFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.metronome)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.mic)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.micCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.micCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.micFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.micSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.micSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.millsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.millsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.millsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.millsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusMagnifyingglass)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusSlashPlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.minusSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moon)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonStars)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonStarsFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonZzz)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.moonZzzFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.multiply)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.multiplyCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.multiplyCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.multiplySquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.multiplySquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.musicHouse)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.musicHouseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.musicMic)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.musicNote)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.musicNoteList)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nairasignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nairasignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nairasignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nairasignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.nosign)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.number)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.numberCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.numberCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.numberSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.numberSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.oCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.oCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.oSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.oSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.option)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.paintbrush)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.paintbrushFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pano)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.panoFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.paperclip)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.paperplane)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.paperplaneFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.paragraph)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pause)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pauseCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pauseCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pauseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pauseRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pauseRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencil)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilAndEllipsisRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilAndOutline)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilTip)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilTipCropCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilTipCropCircleBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pencilTipCropCircleBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.percent)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person2SquareStack)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person2SquareStackFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person3)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.person3Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personBadgeMinusFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personBadgePlusFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleBadgeCheckmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleBadgeExclam)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleBadgeXmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleFillBadgeCheckmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleFillBadgeExclam)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleFillBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleFillBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropCircleFillBadgeXmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personCropSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.personalhotspot)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.perspective)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesetasignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesetasignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesetasignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesetasignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesosignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesosignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesosignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pesosignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phone)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneArrowDownLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneArrowRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneArrowUpRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneDownCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneDownCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneDownFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneFillArrowDownLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneFillArrowRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneFillArrowUpRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.phoneFillBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.photo)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.photoFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.photoFillOnRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.photoOnRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pin)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pinFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pinSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.pinSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.play)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playpause)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.playpauseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusApp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusAppFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusMagnifyingglass)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusRectangleFillOnRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusRectangleOnRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusSlashMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusSquareFillOnSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusSquareOnSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusminus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusminusCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.plusminusCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.power)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.printer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.printerFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.projective)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.purchased)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.purchasedCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.purchasedCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.qCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.qCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.qSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.qSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.qrcode)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.qrcodeViewfinder)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkDiamond)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkDiamondFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkVideo)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkVideoFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkVideoFillRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.questionmarkVideoRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.quoteBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.quoteBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.radiowavesLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.radiowavesRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rays)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.recordingtape)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangle3Offgrid)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangle3OffgridFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleAndArrowUpRightAndArrowDownLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleAndArrowUpRightAndArrowDownLeftSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleAndPaperclip)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleBadgeCheckmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleBadgeXmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleCompressVertical)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleDock)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleExpandVertical)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleFillBadgeCheckmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleFillBadgeXmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleFillOnRectangleAngledFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleFillOnRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleGrid1x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleGrid1x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleGrid2x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleGrid2x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleGrid3x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleGrid3x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleOnRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleOnRectangleAngled)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleSplit3x1)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleSplit3x1Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleSplit3x3)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleSplit3x3Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStack)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackBadgePersonCrop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackFillBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackFillBadgePersonCrop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackFillBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackPersonCrop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rectangleStackPersonCropFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.`repeat`)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.repeat1)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.`return`)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rhombus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rhombusFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rosette)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rotateLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rotateLeftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rotateRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rotateRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rublesignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rublesignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rublesignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rublesignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rupeesignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rupeesignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rupeesignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.rupeesignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.safari)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.safariFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.scissors)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.scope)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.scribble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.selectionPinInOut)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sheqelsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sheqelsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sheqelsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sheqelsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shield)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shieldFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shieldLefthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shieldSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shieldSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shift)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shiftFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.shuffle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sidebarLeft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sidebarRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.signature)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.skew)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.slashCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.slashCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sliderHorizontal3)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sliderHorizontalBelowRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.slowmo)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smallcircleCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smallcircleCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smallcircleFillCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smallcircleFillCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smiley)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smileyFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smoke)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.smokeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.snow)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sparkles)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker1)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker1Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker3)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speaker3Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerSlashFillRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerSlashRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerZzz)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerZzzFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerZzzFillRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speakerZzzRtl)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.speedometer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sportscourt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sportscourtFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.square)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowDownFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowDownOnSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowDownOnSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowUpFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowUpOnSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndArrowUpOnSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndLineVerticalAndSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndLineVerticalAndSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareAndPencil)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareFillAndLineVerticalAndSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareFillAndLineVerticalSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareFillOnCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareFillOnSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareGrid2x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareGrid2x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareGrid3x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareGrid3x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareGrid4x3Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareLefthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareOnCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareOnSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareRighthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareSplit1x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareSplit1x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareSplit2x1)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareSplit2x1Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareSplit2x2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareSplit2x2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dDownDottedline)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dDownRight)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dDownRightFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dUpFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dUpSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStack3dUpSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squareStackFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.squaresBelowRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.star)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.starCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.starCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.starFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.starLefthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.starSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.starSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.staroflife)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.staroflifeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sterlingsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sterlingsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sterlingsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sterlingsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.stop)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.stopCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.stopCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.stopFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.stopwatch)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.stopwatchFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.strikethrough)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitClub)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitClubFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitDiamond)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitDiamondFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitHeart)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitHeartFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitSpade)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.suitSpadeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sum)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunDust)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunDustFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunHaze)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunHazeFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunMax)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunMaxFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunMin)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunMinFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunrise)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunriseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunset)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.sunsetFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.table)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tableBadgeMore)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tableBadgeMoreFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tableFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tag)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tagCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tagCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tagFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.teletype)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.teletypeAnswer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tengesignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tengesignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tengesignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tengesignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textAligncenter)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textAlignleft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textAlignright)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textAppend)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBadgeCheckmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBadgeStar)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBadgeXmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBubble)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textBubbleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textCursor)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textInsert)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textJustify)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textJustifyleft)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textJustifyright)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textQuote)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textbox)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformat)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformat123)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformatAbc)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformatAbcDottedunderline)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformatAlt)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformatSize)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformatSubscript)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.textformatSuperscript)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.thermometer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.thermometerSnowflake)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.thermometerSun)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.timelapse)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.timer)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tornado)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tortoise)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tortoiseFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tramFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trashCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trashCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trashSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trashSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tray)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tray2)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tray2Fill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayAndArrowDown)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayAndArrowDownFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayAndArrowUp)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayAndArrowUpFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayFull)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.trayFullFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.triangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.triangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.triangleLefthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.triangleRighthalfFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tropicalstorm)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tugriksignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tugriksignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tugriksignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tugriksignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tuningfork)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.turkishlirasignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.turkishlirasignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.turkishlirasignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.turkishlirasignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tv)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tvCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tvCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tvFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tvMusicNote)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.tvMusicNoteFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.uCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.uCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.uSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.uSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.uiwindowSplit2x1)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.umbrella)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.umbrellaFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.underline)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.vCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.vCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.vSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.vSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.video)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoBadgePlusFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.videoSlashFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.view2d)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.view3d)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.viewfinder)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.viewfinderCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.viewfinderCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wandAndRays)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wandAndRaysInverse)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wandAndStars)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wandAndStarsInverse)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveform)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveformCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveformCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveformPath)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveformPathBadgeMinus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveformPathBadgePlus)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.waveformPathEcg)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wifi)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wifiExclamationmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wifiSlash)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wind)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.windSnow)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wonsignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wonsignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wonsignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wonsignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wrench)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.wrenchFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xSquareroot)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmark)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkIcloud)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkIcloudFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkOctagon)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkOctagonFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkRectangle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkRectangleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkSeal)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkSealFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkShield)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkShieldFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.xmarkSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.yCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.yCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ySquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.ySquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.yensignCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.yensignCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.yensignSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.yensignSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.zCircle)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.zCircleFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.zSquare)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.zSquareFill)
            }

            if #available(iOS 13.0, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.0, *) {
                allCases.append(Self.zzz)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.arrowUturnLeftCircleBadgeEllipsis)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.aspectratio)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.aspectratioFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.car)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.circleGrid2x2)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.circleGrid2x2Fill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.flashlightOffFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.flashlightOnFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.flipHorizontal)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.flipHorizontalFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.mappinCircle)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.mappinCircleFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.paperclipCircle)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.paperclipCircleFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.pinCircle)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.pinCircleFill)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.scissorsBadgeEllipsis)
            }

            if #available(iOS 13.1, macOS 10.15, tvOS 13.0, visionOS 1.0, watchOS 6.1, *) {
                allCases.append(Self.studentdesk)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self._1MagnifyingglassAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self._4kTv)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self._4kTvFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillHi)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillJa)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillKo)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillTh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedFillZh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedHi)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedJa)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedKo)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedTh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aBookClosedZh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.aMagnify)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.abc)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airplaneCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airplaneCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airpodLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airpodRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airpodproLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airpodproRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airpods)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airpodspro)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airportExpress)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airportExtreme)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.airportExtremeTower)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.amplifier)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appclip)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applelogo)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applescript)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applescriptFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appletv)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appletvFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applewatch)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applewatchRadiowavesLeftAndRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applewatchSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.applewatchWatchface)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appsIpad)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appsIpadLandscape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appsIphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appsIphoneBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appsIphoneLandscape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.appsIphoneLandscapeRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.archiveboxCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.archiveboxCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowBackwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowBackwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowClockwiseHeart)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowClockwiseHeartFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownApp)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownAppFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownBackwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownBackwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownForwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownHeart)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownHeartFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeftCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeftCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowForwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowForwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftAndRightRighttriangleLeftRighttriangleRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftAndRightRighttriangleLeftRighttriangleRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftArrowRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftArrowRightCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftArrowRightCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftArrowRightSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowLeftArrowRightSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowRectanglepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowRightDocOnClipboard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangle2Circlepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathCamera)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathCameraFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathDocOnClipboard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleBranch)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleCapsulepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleMerge)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTrianglePull)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleSwap)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleTurnUpRightCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleTurnUpRightCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleTurnUpRightDiamond)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTriangleTurnUpRightDiamondFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTurnUpForwardIphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowTurnUpForwardIphoneFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpAndDownAndArrowLeftAndRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpAndDownRighttriangleUpFillRighttriangleDownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpAndDownRighttriangleUpRighttriangleDown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpAndPersonRectanglePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpAndPersonRectangleTurnLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpAndPersonRectangleTurnRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpBackwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpDocOnClipboard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForwardApp)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForwardAppFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpForwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpHeart)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpHeartFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRightCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRightCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpLeftAndDownRightAndArrowUpRightAndDownLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpLeftAndDownRightMagnifyingglass)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpMessage)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpMessageFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeftRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeftRectangleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnBackwardCircleBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnBackwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnBackwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnForwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowUturnForwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeBounceForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeBounceForwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeBounceRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeBounceRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackward2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackward2Circle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackward2CircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackward2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpForwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeft2Circle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeTurnUpLeft2CircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeZigzagForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeZigzagForwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeZigzagRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowshapeZigzagRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleBackwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleBackwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleBackwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleForwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleForwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleForwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleLeftAndLineVerticalAndArrowtriangleRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleLeftFillAndLineVerticalAndArrowtriangleRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleRightAndLineVerticalAndArrowtriangleLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.arrowtriangleRightFillAndLineVerticalAndArrowtriangleLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.atCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.atCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.atom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.backwardFrame)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.backwardFrameFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.badgePlusRadiowavesForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bagCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bagCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.banknote)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.banknoteFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.barometer)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.battery100Bolt)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.battery100BoltRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bellBadge)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bellBadgeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bellSlashCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bellSlashCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bicycle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bicycleCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bicycleCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.binoculars)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.binocularsFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltCar)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltCarFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltFillBatteryblock)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltFillBatteryblockFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltHeart)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltHeartFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltSlashCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.boltSlashCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bonjour)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bookClosed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bookClosedFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bookmarkCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bookmarkCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bookmarkSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bookmarkSlashFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.booksVertical)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.booksVerticalFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.building)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.building2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.building2CropCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.building2CropCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.building2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.buildingColumns)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.buildingColumnsFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.buildingFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.bus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.busDoubledecker)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.busDoubledeckerFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.busFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.calendarBadgeClock)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.calendarBadgeClockRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.calendarBadgeExclamationmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraAperture)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraFillBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraFilters)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringCenterWeighted)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringCenterWeightedAverage)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringMatrix)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringMultispot)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringNone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringPartial)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringSpot)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringUnknown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cameraMeteringUnknownAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.candybarphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.capsulePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.capsulePortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.car2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.car2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.carCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.carCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.`case`)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.caseFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chartBarDocHorizontal)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chartBarDocHorizontalFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chartBarXaxis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.checkerboardRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.checkmarkIcloud)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.checkmarkIcloudFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.checkmarkRectanglePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.checkmarkRectanglePortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronBackward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronBackward2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronBackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronBackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronBackwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronBackwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronForward2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronForwardSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.chevronForwardSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleBottomhalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleDashedInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleFillSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleGridCross)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleGridCrossDownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleGridCrossFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleGridCrossLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleGridCrossRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleGridCrossUpFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circleTophalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlebadge)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlebadge2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlebadge2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlebadgeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlesHexagongrid)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlesHexagongridFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlesHexagonpath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.circlesHexagonpathFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.clockArrowCirclepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.comb)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.combFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.commandCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.commandCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.commandSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.commandSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.coneFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.contextualmenuAndCursorarrow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cpu)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.creditcardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.creditcardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cross)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crossCase)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crossCaseFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crossCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crossCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crossFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.crownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cubeTransparent)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cubeTransparentFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.curlybraces)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.curlybracesSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.curlybracesSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowAndSquareOnSquareDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowClick)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowClick2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowClickBadgeClock)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowMotionlines)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowMotionlinesClick)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowRays)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cursorarrowSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cylinder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cylinderFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cylinderSplit1x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.cylinderSplit1x2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.deskclock)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.deskclockFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dialMax)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dialMaxFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dialMin)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dialMinFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.diamond)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.diamondFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace1)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace1Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace3Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace4)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace4Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace5)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace5Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace6)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dieFace6Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.display)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.display2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.displayTrianglebadgeExclamationmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docAppendFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docAppendFillRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docAppendRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docBadgeGearshape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docBadgeGearshapeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docFillBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docFillBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docPlaintextFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docRichtextAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docRichtextFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docRichtextFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docRichtextFillHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docRichtextHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docTextBelowEcg)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docTextBelowEcgFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docTextFillViewfinder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.docZipper)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dockArrowDownRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dockArrowUpRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dockRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dotArrowtrianglesUpRightDownLeftCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dotCircleAndCursorarrow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dotRadiowavesForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dotSquareshape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dotSquareshapeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dotSquareshapeSplit2x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dpad)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dpadDownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dpadFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dpadLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dpadRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dpadUpFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.drop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.dropFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.earBadgeCheckmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.earFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.earTrianglebadgeExclamationmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.earpods)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ejectCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ejectCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ellipsisBubble)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ellipsisBubbleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ellipsisRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ellipsisRectangleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.envelopeArrowTriangleBranch)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.envelopeArrowTriangleBranchFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.envelopeBadgeShieldLeadinghalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.envelopeFillBadgeShieldTrailinghalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.esim)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.esimFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.exclamationmark2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.exclamationmark3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.exclamationmarkArrowCirclepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.exclamationmarkArrowTriangle2Circlepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldrive)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgeCheckmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgeIcloud)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgeMinus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgePersonCrop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgeTimemachine)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgeWifi)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveBadgeXmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveConnectedToLineBelow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveConnectedToLineBelowFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgeCheckmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgeIcloud)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgeMinus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgePersonCrop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgeTimemachine)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgeWifi)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.externaldriveFillBadgeXmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.eyeCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.eyeCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.eyebrow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.eyes)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.eyesInverse)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.faceDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.faceDashedFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.faceSmiling)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.faceSmilingFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.faxmachine)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.fiberchannel)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureStand)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureStandLineDottedFigureStand)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWalk)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWalkCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWalkCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWalkDiamond)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWalkDiamondFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWave)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWaveCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.figureWaveCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.filemenuAndCursorarrow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.filemenuAndCursorarrowRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.filemenuAndSelection)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.flagBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.flagBadgeEllipsisFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.flagSlashCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.flagSlashCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.flipphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.fn)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.folderBadgeGear)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.folderBadgeQuestionmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.folderBadgeQuestionmarkAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.folderFillBadgeGear)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.folderFillBadgeQuestionmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.folderFillBadgeQuestionmarkAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.forwardFrame)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.forwardFrameFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.gearshape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.gearshape2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.gearshape2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.gearshapeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.giftCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.giftCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.giftcard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.giftcardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.graduationcap)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.graduationcapFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.greetingcard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.greetingcardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.guitarsFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.gyroscope)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hSquareFillOnSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hSquareOnSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointDown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointDownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointUp)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointUpBraille)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointUpBrailleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointUpFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointUpLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handPointUpLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handTap)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handTapFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handWave)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handWaveFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handsClap)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handsClapFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handsSparkles)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.handsSparklesFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.headphonesCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.headphonesCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hearingaidEar)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.heartTextSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.heartTextSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hifispeaker2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hifispeaker2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hifispeakerAndHomepod)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hifispeakerAndHomepodFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.highlighter)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.homekit)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.homepod)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.homepod2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.homepod2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.homepodFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.hourglassBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.houseCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.houseCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.infinity)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.internaldrive)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.internaldriveFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipad)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipadHomebutton)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipadHomebuttonLandscape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipadLandscape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.iphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.iphoneHomebutton)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.iphoneHomebuttonRadiowavesLeftAndRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.iphoneHomebuttonSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.iphoneRadiowavesLeftAndRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.iphoneSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipod)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipodshuffleGen1)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipodshuffleGen2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipodshuffleGen3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipodshuffleGen4)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ipodtouch)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.jSquareFillOnSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.jSquareOnSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.k)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.key)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyIcloud)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyIcloudFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyboardBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyboardChevronCompactLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyboardMacwindow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyboardOnehandedLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.keyboardOnehandedRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lJoystick)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lJoystickDown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lJoystickDownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lJoystickFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lRectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lRectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.l1RectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.l1RectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.l2RectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.l2RectangleRoundedtopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ladybug)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ladybugFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.laptopcomputer)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.laptopcomputerAndIphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lassoSparkles)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.latch2Case)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.latch2CaseFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lbRectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lbRectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.leaf)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.leafArrowTriangleCirclepath)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.leafFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.level)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.levelFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lifepreserver)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lifepreserverFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.line3CrossedSwirlCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.line3CrossedSwirlCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineDiagonal)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineDiagonalArrow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineHorizontal2DecreaseCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineHorizontal2DecreaseCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineHorizontal3Circle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineHorizontal3CircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineHorizontalStarFillLineHorizontal)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lineweight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.linkBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.listAndFilm)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.listBulletRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.listNumberAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.listStar)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.listTriangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.livephotoBadgeA)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.locationFillViewfinder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.locationViewfinder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockDoc)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockDocFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockRectangleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockRectangleOnRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockRectangleOnRectangleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockRectangleStack)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockRectangleStackFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockSquareStack)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lockSquareStackFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.loupe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ltRectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ltRectangleRoundedtopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lungs)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.lungsFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macmini)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macminiFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macproGen1)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macproGen2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macproGen2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macproGen3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macproGen3Server)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macwindowBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macwindowOnRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.macwindowOnRectangleRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mail)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mailAndTextMagnifyingglass)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mailAndTextMagnifyingglassRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mailFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mailStack)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mailStackFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.megaphone)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.megaphoneFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.memorychip)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.menubarArrowDownRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.menubarArrowUpRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.menubarDockRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.menubarDockRectangleBadgeRecord)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.menubarRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.metronomeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.minusDiamond)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.minusDiamondFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.minusPlusBatteryblock)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.minusPlusBatteryblockFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.minusRectanglePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.minusRectanglePortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mosaic)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mosaicFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mount)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mountFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mouth)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mouthFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.move3d)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.musicNoteHouse)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.musicNoteHouseFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.musicQuarternote3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mustache)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.mustacheFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.network)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.newspaper)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.newspaperFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.nose)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.noseFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.note)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.noteText)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.noteTextBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.octagon)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.octagonFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.opticaldisc)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.opticaldiscdrive)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.opticaldiscdriveFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.oval)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ovalFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ovalPortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ovalPortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paintbrushPointed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paintbrushPointedFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paintpalette)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paintpaletteFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paperclipBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paperplaneCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paperplaneCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.paragraphsign)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pc)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pencilTipCropCircleBadgeArrowForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.percentAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.person2Circle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.person2CircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personAndArrowLeftAndArrowRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropCircleBadgeExclamationmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropCircleBadgeQuestionmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropCircleBadgeQuestionmarkAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropCircleFillBadgeExclamationmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropCircleFillBadgeQuestionmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropCircleFillBadgeQuestionmarkAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personCropSquareFillAndAtRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillAndArrowLeftAndArrowRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillBadgeMinus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillCheckmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillCheckmarkRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillQuestionmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillQuestionmarkAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillQuestionmarkRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillTurnDown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillTurnLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillTurnRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillViewfinder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillXmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.personFillXmarkRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.phoneBubbleLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.phoneBubbleLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.phoneConnection)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.phoneFillConnection)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.photoOnRectangleAngled)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pianokeys)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pianokeysInverse)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pills)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pillsFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pip)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pipEnter)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pipExit)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pipFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pipRemove)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pipSwap)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.placeholdertextFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.playSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.playSlashFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusDiamond)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusDiamondFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusMessage)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusMessageFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusRectangleFillOnFolderFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusRectangleOnFolder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusRectanglePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusRectanglePortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.plusViewfinder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pointFillTopleftDownCurvedtoPointFillBottomrightUp)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pointTopleftDownCurvedtoPointBottomrightUp)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.poweroff)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.poweron)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.powersleep)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.printerDotmatrix)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.printerDotmatrixFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.printerDotmatrixFillAndPaperFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.printerFillAndPaperFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.puzzlepiece)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.puzzlepieceFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pyramid)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.pyramidFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkCircleAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkCircleFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkDiamondAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkDiamondFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkFolder)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkFolderAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkFolderFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkFolderFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkSquareAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkSquareDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkSquareDashedAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkSquareFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkVideoAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.questionmarkVideoFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.quoteBubbleFillRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.quoteBubbleRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rJoystick)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rJoystickDown)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rJoystickDownFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rJoystickFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rRectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rRectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rSquareFillOnSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rSquareOnSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.r1RectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.r1RectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.r2RectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.r2RectangleRoundedtopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.radio)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.radioFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rbRectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rbRectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.recordCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.recordCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangle3OffgridBubbleLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangle3OffgridBubbleLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleAndPencilAndEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleAndPencilAndEllipsisRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleAndTextMagnifyingglass)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleAndTextMagnifyingglassRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleArrowtriangle2Inward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleArrowtriangle2Outward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleBadgeMinus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleBottomthirdInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleCenterInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleConnectedToLineBelow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleDashedAndPaperclip)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleDashedBadgeRecord)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleFillBadgeMinus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleFillBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleFillOnRectangleFillCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleFillOnRectangleFillCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleFillOnRectangleFillSlashFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleInsetBottomleftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleInsetBottomrightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleInsetTopleftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleInsetToprightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleLefthalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleLefthalfInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleLefthalfInsetFillArrowLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleLeftthirdInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleOnRectangleSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectanglePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectanglePortraitArrowtriangle2Inward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectanglePortraitArrowtriangle2Outward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectanglePortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRighthalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRighthalfInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRighthalfInsetFillArrowRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRightthirdInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRoundedbottom)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRoundedbottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleRoundedtopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSlashFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSplit1x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSplit1x2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSplit2x1)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSplit2x1Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSplit2x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rectangleSplit2x2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.restart)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.restartCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rotate3d)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rtRectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rtRectangleRoundedtopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ruler)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.rulerFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scale3d)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scalemass)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scalemassFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scanner)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scannerFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scribbleVariable)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scroll)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.scrollFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sdcard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sdcardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.seal)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sealFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.serverRack)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shadow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shekelsignCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shekelsignCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shekelsignSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shekelsignSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shieldLefthalfFillSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shippingbox)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.shippingboxFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sidebarLeading)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sidebarSquaresLeading)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sidebarSquaresLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sidebarSquaresRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sidebarSquaresTrailing)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sidebarTrailing)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.signatureAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.signatureHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.signpostLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.signpostLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.signpostRight)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.signpostRightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.simcard)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.simcard2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.simcard2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.simcardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sleep)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sliderHorizontalBelowSquareFillAndSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sliderVertical3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sparkle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sparklesRectangleStack)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sparklesRectangleStackFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sparklesSquareFillOnSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerSlashCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerSlashCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerSlashCircleFillRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerSlashCircleRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave1)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave1Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave2Circle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave2CircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.speakerWave3Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square2Stack3d)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square2Stack3dBottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square2Stack3dTopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square3Stack3d)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square3Stack3dBottomFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square3Stack3dMiddleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.square3Stack3dTopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareAndAtRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareBottomhalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareDashedInsetFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareFillOnSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareFillTextGrid1x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x1BelowLineGrid1x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x1FillBelowLineGrid1x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x1FolderBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x1FolderFillBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3BottomleftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3BottommiddleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3BottomrightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3FillSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3MiddleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3MiddleleftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3MiddlerightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3TopleftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3TopmiddleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareGrid3x3ToprightFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareOnSquareDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareOnSquareSquareshapeControlhandles)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSlashFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSplitBottomrightquarter)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSplitBottomrightquarterFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSplitDiagonal)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSplitDiagonal2x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSplitDiagonal2x2Fill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareSplitDiagonalFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareStack3dDownForward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareStack3dDownForwardFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareStack3dForwardDottedline)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareStack3dForwardDottedlineFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareStack3dUpBadgeA)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareStack3dUpBadgeAFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareTophalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeControlhandlesOnSquareshapeControlhandles)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeDashedSquareshape)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeSplit2x2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeSplit2x2Dotted)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeSplit3x3)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.squareshapeSquareshapeDashed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.starLeadinghalfFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.starSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.starSquareFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.staroflifeCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.staroflifeCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.stethoscope)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.sumAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.swift)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.switch2)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tBubbleAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tBubbleFillAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tBubbleFillHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tBubbleHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tablecells)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tablecellsBadgeEllipsis)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tablecellsBadgeEllipsisFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tablecellsFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tagSlash)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tagSlashFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.target)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.teletypeCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.teletypeCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.terminal)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.terminalFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textAndCommandMacwindow)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBadgeCheckmarkRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBelowPhoto)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBelowPhotoFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBookClosed)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBookClosedFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBubbleFillRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textBubbleRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorHi)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorJa)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorKo)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorTh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textCursorZh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textMagnifyingglass)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textMagnifyingglassRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textQuoteRtl)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textRedaction)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxAr)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxHe)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxHi)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxJa)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxKo)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxTh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textboxZh)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.textformat123Ar)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.thermometerSunFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ticket)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.ticketFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.timelineSelection)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.timerSquare)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.togglepower)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.touchid)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tram)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tramCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tramCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tramTunnelFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.trayCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.trayCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.triangleCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.triangleCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.tvAndHifispeakerFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.videoBadgeCheckmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.videoBubbleLeft)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.videoBubbleLeftFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.videoFillBadgeCheckmark)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.videoFillBadgePlus)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wake)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.walletPass)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.walletPassFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3Backward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3BackwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3BackwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3Forward)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3ForwardCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3ForwardCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3Left)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3LeftCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3LeftCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3Right)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3RightCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wave3RightCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.waveformPathEcgRectangle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.waveformPathEcgRectangleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wrenchAndScrewdriver)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.wrenchAndScrewdriverFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkBin)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkBinCircle)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkBinCircleFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkBinFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkDiamond)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkDiamondFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkRectanglePortrait)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xmarkRectanglePortraitFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.xserve)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.zlRectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.zlRectangleRoundedtopFill)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.zrRectangleRoundedtop)
            }

            if #available(iOS 14.0, macOS 11.0, tvOS 14.0, visionOS 1.0, watchOS 7.0, *) {
                allCases.append(Self.zrRectangleRoundedtopFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.aqiHigh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.aqiLow)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.aqiMedium)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.brazilianrealsignCircle)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.brazilianrealsignCircleFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.brazilianrealsignSquare)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.brazilianrealsignSquareFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.cartCircle)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.cartCircleFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.character)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosed)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedFillZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterBookClosedZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.characterZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.clockArrow2Circlepath)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.directcurrent)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.docTextBelowEcgFillRtl)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.docTextBelowEcgRtl)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.exclamationmarkApplewatch)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.infinityCircle)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.infinityCircleFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.ipadBadgePlay)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.ipadHomebuttonBadgePlay)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.ipadHomebuttonLandscapeBadgePlay)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.ipadLandscapeBadgePlay)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.iphoneBadgePlay)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.iphoneHomebuttonBadgePlay)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.iphoneHomebuttonLandscape)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.iphoneLandscape)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.ipodtouchLandscape)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.lockApplewatch)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.photoTv)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.playTv)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.playTvFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.rectangleBadgePersonCrop)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.rectangleFillBadgePersonCrop)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.rectangleTopthirdInset)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.repeat1Circle)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.repeat1CircleFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.repeatCircle)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.repeatCircleFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.shieldCheckerboard)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.shuffleCircle)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.shuffleCircleFill)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textBelowPhotoFillRtl)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textBelowPhotoRtl)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLarger)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeLargerZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmaller)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeSmallerZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSizeZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSubscriptZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptAr)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptHe)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptHi)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptJa)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptKo)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptTh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.textformatSuperscriptZh)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.torus)
            }

            if #available(iOS 14.2, macOS 11.0, tvOS 14.2, visionOS 1.0, watchOS 7.1, *) {
                allCases.append(Self.tvAndMediabox)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.airpodsmax)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.applewatchSideRight)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterBubble)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterBubbleAr)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterBubbleFill)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterBubbleFillAr)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterBubbleFillHe)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterBubbleHe)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeam)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamAr)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamHe)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamHi)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamJa)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamKo)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamTh)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterCursorIbeamZh)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextbox)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxAr)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxHe)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxHi)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxJa)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxKo)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxTh)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.characterTextboxZh)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.hifispeakerAndHomepodmini)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.hifispeakerAndHomepodminiFill)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.homepodAndHomepodmini)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.homepodAndHomepodminiFill)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.homepodmini)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.homepodmini2)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.homepodmini2Fill)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.homepodminiFill)
            }

            if #available(iOS 14.5, macOS 11.3, tvOS 14.5, visionOS 1.0, watchOS 7.4, *) {
                allCases.append(Self.rectangleTopthirdInsetFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._1MagnifyingglassHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._123Rectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._123RectangleAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._123RectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._123RectangleFillAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._123RectangleFillHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self._123RectangleHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplaneArrival)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplaneDeparture)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplayaudioBadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplayaudioCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplayaudioCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplayvideoBadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplayvideoCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airplayvideoCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airpodsChargingcase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airpodsChargingcaseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airpodsChargingcaseWireless)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airpodsChargingcaseWirelessFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airpodsproChargingcaseWireless)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airpodsproChargingcaseWirelessFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airtag)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airtagFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airtagRadiowavesForward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airtagRadiowavesForwardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airtagRadiowavesForwardFillRtl)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.airtagRadiowavesForwardRtl)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignHorizontalCenter)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignHorizontalCenterFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignHorizontalLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignHorizontalLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignHorizontalRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignHorizontalRightFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignVerticalBottom)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignVerticalBottomFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignVerticalCenter)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignVerticalCenterFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignVerticalTop)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alignVerticalTopFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.allergens)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.alternatingcurrent)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.antennaRadiowavesLeftAndRightCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.antennaRadiowavesLeftAndRightCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.antennaRadiowavesLeftAndRightSlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appBadgeCheckmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appBadgeCheckmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appConnectedToAppBelowFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appDashed)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.applepencil)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen1)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen1Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen2)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen2Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen3)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen3Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen4)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.appletvremoteGen4Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.applewatchCaseInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arkitBadgeXmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowBackwardToLine)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowBackwardToLineCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowBackwardToLineCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowDownToLineCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowDownToLineCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowDownToLineCompact)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowForwardToLine)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowForwardToLineCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowForwardToLineCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowLeftToLineCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowLeftToLineCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowLeftToLineCompact)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowRightToLineCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowRightToLineCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowRightToLineCompact)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowUpAndDownRighttriangleUpRighttriangleDownFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowUpToLineCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowUpToLineCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowUpToLineCompact)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowtriangleLeftAndLineVerticalAndArrowtriangleRightFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.arrowtriangleRightAndLineVerticalAndArrowtriangleLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.asterisk)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.backwardCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.backwardCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.battery50)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.battery75)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsEarphones)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsHeadphones)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeats)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeats3)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeatspro)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeatsproChargingcase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeatsproChargingcaseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeatsproLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsPowerbeatsproRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsStudiobudLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsStudiobudRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsStudiobuds)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsStudiobudsChargingcase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.beatsStudiobudsChargingcaseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bedDoubleCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bedDoubleCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bellAndWaveform)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bellAndWaveformFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bellBadgeCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bellBadgeCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bellSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bellSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltBatteryblock)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltBatteryblockFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltCarCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltCarCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltShield)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltShieldFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.boltSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bookClosedCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bookClosedCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bookmarkSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bookmarkSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.booksVerticalCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.booksVerticalCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.brain)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.brainHeadProfile)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.briefcaseCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.briefcaseCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bubbleLeftAndExclamationmarkBubbleRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bubbleLeftAndExclamationmarkBubbleRightFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bubbleLeftCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bubbleLeftCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bubbleRightCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.bubbleRightCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.buildingColumnsCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.buildingColumnsCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cableConnector)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cableConnectorHorizontal)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cablecar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cablecarFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.calendarDayTimelineLeading)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.calendarDayTimelineLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.calendarDayTimelineRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.calendarDayTimelineTrailing)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cameraShutterButton)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cameraShutterButtonFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsuleBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsuleInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsuleLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsulePortraitBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsulePortraitInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsulePortraitLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsulePortraitRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsulePortraitTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsuleRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.capsuleTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.carFerry)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.carFerryFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleFillHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleFillJa)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleFillKo)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleFillTh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleFillZh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleJa)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleKo)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleTh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.characterBubbleZh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.chartLineUptrendXyaxis)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.chartLineUptrendXyaxisCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.chartLineUptrendXyaxisCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.chartXyaxisLine)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checkerboardShield)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checklist)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checklistRtl)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checkmarkBubble)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checkmarkBubbleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checkmarkCircleTrianglebadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checkmarkDiamond)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.checkmarkDiamondFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.chevronLeftForwardslashChevronRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleAndLineHorizontal)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleAndLineHorizontalFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleDashedInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleDotted)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGrid2x1)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGrid2x1Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGrid2x1LeftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGrid2x1RightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGrid3x3Circle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGrid3x3CircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGridCrossDownFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGridCrossLeftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGridCrossRightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleGridCrossUpFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleHexagongrid)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleHexagongridCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleHexagongridCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleHexagongridFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleHexagonpath)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleHexagonpathFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleSlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleSlashFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.circleTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.clockBadgeCheckmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.clockBadgeCheckmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.clockBadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.clockBadgeExclamationmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.clockCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.clockCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.computermouse)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.computermouseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cpuFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.creditcardAnd123)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.creditcardTrianglebadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.crossVial)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.crossVialFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cupAndSaucer)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.cupAndSaucerFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.deleteBackward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.deleteBackwardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.deleteForward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.deleteForwardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.desktopcomputerAndArrowDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.desktopcomputerTrianglebadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diamondTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dice)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.diceFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownArrowClockwise)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownArrowClockwiseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownArrowCounterclockwise)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownArrowCounterclockwiseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownHorizontalArrowClockwise)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownHorizontalArrowClockwiseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownHorizontalArrowCounterclockwise)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownHorizontalArrowCounterclockwiseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownHorizontalPress)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownHorizontalPressFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownPress)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.digitalcrownPressFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.displayAndArrowDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextFillHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextFillJa)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextFillKo)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextFillTh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextFillZh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextJa)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextKo)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextTh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docRichtextZh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docTextImage)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docTextImageFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docViewfinder)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.docViewfinderFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dotCircleAndHandPointUpLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dotCircleViewfinder)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dotRadiowavesUpForward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dotViewfinder)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dpadDownFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dpadLeftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dpadRightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dpadUpFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dropCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.dropCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.earAndWaveform)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.earbuds)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.earbudsCase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.earbudsCaseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ellipsisCurlybraces)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ellipsisVerticalBubble)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ellipsisVerticalBubbleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.envelopeBadgeShieldHalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.envelopeBadgeShieldHalfFilledFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.exclamationmarkBubbleCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.exclamationmarkBubbleCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.eyeSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.eyeSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.eyeSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.eyeSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.eyeTrianglebadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.eyeTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.facemask)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.facemaskFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fanblades)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fanbladesFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ferry)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ferryFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fibrechannel)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.figureRoll)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.filmCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.filmCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flag2Crossed)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flag2CrossedFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flagAndFlagFilledCrossed)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flagFilledAndFlagCrossed)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flagSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flagSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flameCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.flameCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.folderBadgeGearshape)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.folderFillBadgeGearshape)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.forkKnife)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.forkKnifeCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.forkKnifeCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.forwardCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.forwardCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fuelpump)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fuelpumpCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fuelpumpCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.fuelpumpFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearBadgeCheckmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearBadgeQuestionmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearBadgeXmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearshapeCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gearshapeCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeAmericas)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeAmericasFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeAsiaAustralia)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeAsiaAustraliaFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeBadgeChevronBackward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeEuropeAfrica)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.globeEuropeAfricaFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gobackward5)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gobackward5Ar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.gobackward5Hi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.goforward5)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.goforward5Ar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.goforward5Hi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.graduationcapCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.graduationcapCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hSquareOnSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hammerCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hammerCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handRaisedCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handRaisedCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handRaisedSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handRaisedSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handRaisedSquareOnSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handRaisedSquareOnSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handThumbsdownCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handThumbsdownCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handThumbsupCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.handThumbsupCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hearingdeviceEar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.heartRectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.heartRectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.heartSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.heartSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hexagonBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hexagonLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hexagonRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hexagonTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hifispeakerAndAppletv)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hifispeakerAndAppletvFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.homepodAndAppletv)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.homepodAndAppletvFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.homepodminiAndAppletv)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.homepodminiAndAppletvFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hourglassBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hourglassCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hourglassCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.hourglassTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.humidity)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.humidityFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.icloudSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.icloudSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ipadAndArrowForward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ipadAndIphone)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ipadRearCamera)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneAndArrowForward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneHomebuttonCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneHomebuttonCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneHomebuttonRadiowavesLeftAndRightCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneHomebuttonRadiowavesLeftAndRightCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneHomebuttonSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneHomebuttonSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneRadiowavesLeftAndRightCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneRadiowavesLeftAndRightCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneRearCamera)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneSmartbatterycaseGen1)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.iphoneSmartbatterycaseGen2)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ipodtouchSlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ivfluidBag)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ivfluidBagFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.jSquareOnSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.keyboardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickPressDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickPressDownFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltDownFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltRightFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltUp)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lJoystickTiltUpFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lanyardcard)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lanyardcardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.laptopcomputerAndArrowDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.laptopcomputerTrianglebadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lassoAndSparkles)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.leafCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.leafCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lightbulbCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lightbulbCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line2HorizontalDecreaseCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line2HorizontalDecreaseCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line3Horizontal)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line3HorizontalCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line3HorizontalCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line3HorizontalDecrease)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line3HorizontalDecreaseCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.line3HorizontalDecreaseCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.linesMeasurementHorizontal)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listBulletCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listBulletCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listBulletRectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listBulletRectanglePortrait)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listBulletRectanglePortraitFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listDashHeaderRectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.listNumberHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.locationMagnifyingglass)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.locationNorthCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.locationNorthCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.locationSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.locationSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockDesktopcomputer)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockDisplay)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockIpad)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockIphone)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockLaptopcomputer)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockOpenApplewatch)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockOpenDesktopcomputer)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockOpenDisplay)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockOpenIpad)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockOpenIphone)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.lockOpenLaptopcomputer)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.logoPlaystation)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.logoXbox)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.macproGen1Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.macproGen3Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.magazine)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.magazineFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.magicmouse)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.magicmouseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.magsafeBatterypack)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.magsafeBatterypackFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mapCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mapCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mappinSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mappinSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mappinSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mappinSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.mediastick)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.memorychipFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.menucard)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.menucardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.messageAndWaveform)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.messageAndWaveformFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.micBadgePlus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.micFillBadgePlus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.micSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.micSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.micSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.micSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.minusForwardslashPlus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.musicMicCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.musicMicCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.musicNoteTv)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.musicNoteTvFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.networkBadgeShieldHalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.newspaperCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.newspaperCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.octagonBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.octagonLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.octagonRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.octagonTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalPortraitBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalPortraitInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalPortraitLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalPortraitRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalPortraitTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.ovalTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.parentheses)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.parkingsign)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.parkingsignCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.parkingsignCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pawprint)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pawprintCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pawprintCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pawprintFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.peacesign)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pentagon)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pentagonBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pentagonFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pentagonLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pentagonRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pentagonTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.person2CropSquareStack)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.person2CropSquareStackFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.person2Wave2)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.person2Wave2Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.person3Sequence)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.person3SequenceFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personBadgeClock)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personBadgeClockFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropArtframe)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadge)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeClock)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeClockFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeExclamationmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeMoon)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeMoonFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeQuestionmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropCircleBadgeQuestionmarkFillAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropRectangleStack)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropRectangleStackFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropSquareFilledAndAtRectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personCropSquareFilledAndAtRectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personTextRectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personTextRectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personWave2)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personWave2Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personalhotspotCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.personalhotspotCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.phoneAndWaveform)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.phoneAndWaveformFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.photoArtframe)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.photoCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.photoCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pillsCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pillsCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pinSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pinSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platter2FilledIpad)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platter2FilledIpadLandscape)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platter2FilledIphone)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platter2FilledIphoneLandscape)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platterBottomApplewatchCase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platterFilledBottomApplewatchCase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platterFilledTopApplewatchCase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.platterTopApplewatchCase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.playRectangleOnRectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.playRectangleOnRectangleCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.playRectangleOnRectangleCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.playRectangleOnRectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.playSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.playSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.plusForwardslashMinus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.plusRectangleOnFolderFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.plusSquareDashed)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.point3ConnectedTrianglepathDotted)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.point3FilledConnectedTrianglepathDotted)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pointFilledTopleftDownCurvedtoPointBottomrightUp)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pointTopleftDownCurvedtoPointBottomrightUpFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.pointTopleftDownCurvedtoPointFilledBottomrightUp)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.powerCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.powerCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.powerDotted)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.powerplug)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.powerplugFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.printerDotmatrixFilledAndPaper)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.printerFilledAndPaper)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.puzzlepieceExtension)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.puzzlepieceExtensionFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.questionmarkApp)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.questionmarkAppAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.questionmarkAppDashed)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.questionmarkAppDashedAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.questionmarkAppFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.questionmarkAppFillAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.quoteClosing)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.quoteOpening)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickPressDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickPressDownFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltDown)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltDownFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltRightFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltUp)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rJoystickTiltUpFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rSquareOnSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangle2Swap)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangle3Group)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangle3GroupBubbleLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangle3GroupBubbleLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangle3GroupFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleAndHandPointUpLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleAndHandPointUpLeftFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleAndHandPointUpLeftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleBottomhalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleBottomthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleCenterInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleCenterInsetFilledBadgePlus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleFilledAndHandPointUpLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetBottomleadingFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetBottomleftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetBottomrightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetBottomtrailingFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetFilledAndPersonFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetFilledOnRectangle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetTopleadingFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetTopleftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetToprightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleInsetToptrailingFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLeadinghalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLeadinghalfInsetFilledArrowLeading)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLeadingthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLefthalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLefthalfInsetFilledArrowLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleLeftthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleSlashFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleOnRectangleSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitAndArrowRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitAndArrowRightFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomhalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomleadingInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomleftInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomrightInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitBottomtrailingInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitCenterInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitLeadinghalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitLeadingthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitLefthalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitLeftthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitOnRectanglePortrait)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitOnRectanglePortraitFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitOnRectanglePortraitSlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitOnRectanglePortraitSlashFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitRighthalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitRightthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitSlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitSlashFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitSplit2x1)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitSplit2x1Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitSplit2x1Slash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitSplit2x1SlashFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTophalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTopleadingInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTopleftInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitToprightInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTopthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitToptrailingInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTrailinghalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectanglePortraitTrailingthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleRighthalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleRighthalfInsetFilledArrowRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleRightthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleSplit2x1Slash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleSplit2x1SlashFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleStackBadgePersonCropFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleStackBadgePlay)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleStackBadgePlayFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleTophalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleTopthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleTrailinghalfInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleTrailinghalfInsetFilledArrowTrailing)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.rectangleTrailingthirdInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.repeat1Ar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.repeat1CircleAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.repeat1CircleFillAr)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.repeat1CircleFillHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.repeat1CircleHi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.repeat1Hi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.restartCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.returnLeft)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.returnRight)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.scissorsCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.scissorsCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.scooter)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.screwdriver)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.screwdriverFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sensorTagRadiowavesForward)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sensorTagRadiowavesForwardFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shareplay)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shareplaySlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shieldLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shieldLefthalfFilledSlash)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shieldRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shippingboxCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.shippingboxCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.signatureJa)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.signatureTh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.signatureZh)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sleepCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sleepCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sliderHorizontal2RectangleAndArrowTriangle2Circlepath)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sliderHorizontalBelowSquareFilledAndSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.smallcircleFilledCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.smallcircleFilledCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.snowflake)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.snowflakeCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.snowflakeCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sparkleMagnifyingglass)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sparklesSquareFilledOnSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sparklesTv)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sparklesTvFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.speakerBadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.speakerBadgeExclamationmarkFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.speakerCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.speakerCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.square2Stack3dBottomFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.square2Stack3dTopFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.square3Stack3dBottomFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.square3Stack3dMiddleFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.square3Stack3dTopFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareAndArrowUpCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareAndArrowUpCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareAndArrowUpTrianglebadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareAndAtRectangleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareAndLineVerticalAndSquareFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareDashedInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareFillAndLineVerticalAndSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareFilledAndLineVerticalAndSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareFilledOnSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x1BelowLineGrid1x2Fill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3BottomleftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3BottommiddleFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3BottomrightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3MiddleFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3MiddleleftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3MiddlerightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3Square)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3TopleftFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3TopmiddleFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareGrid3x3ToprightFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareTextSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareTextSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.squareTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.starBubble)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.starBubbleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.starLeadinghalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.stethoscopeCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.stethoscopeCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.suitcase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.suitcaseCart)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.suitcaseCartFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.suitcaseFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sunAndHorizon)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sunAndHorizonFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sunMaxCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.sunMaxCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tablecellsFillBadgeEllipsis)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tagSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tagSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.takeoutbagAndCupAndStraw)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.takeoutbagAndCupAndStrawFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.teletypeAnswerCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.teletypeAnswerCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.testtube2)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.textViewfinder)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.textformat123Hi)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.theatermasks)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.theatermasksCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.theatermasksCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.theatermasksFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trainSideFrontCar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trainSideMiddleCar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trainSideRearCar)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tramFillTunnel)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trapezoidAndLineHorizontal)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trapezoidAndLineHorizontalFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trapezoidAndLineVertical)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trapezoidAndLineVerticalFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trashSlashCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trashSlashCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trashSlashSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trashSlashSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trashSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.trashSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.triangleBottomhalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.triangleInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.triangleLefthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.triangleRighthalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.triangleTophalfFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tshirt)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tshirtFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.tvInsetFilled)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.videoAndWaveform)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.videoAndWaveformFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.videoBadgeEllipsis)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.videoFillBadgeEllipsis)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.videoSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.videoSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.wakeCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.wakeCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.watchfaceApplewatchCase)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.waveformAndMagnifyingglass)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.waveformAndMic)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.waveformBadgeExclamationmark)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.waveformBadgeMinus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.waveformBadgePlus)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.wifiCircle)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.wifiCircleFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.wifiSquare)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.wifiSquareFill)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.xmarkApp)
            }

            if #available(iOS 15.0, macOS 12.0, tvOS 15.0, visionOS 1.0, watchOS 8.0, *) {
                allCases.append(Self.xmarkAppFill)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.boltRingClosed)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.platterFilledBottomAndArrowDownIphone)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.platterFilledBottomIphone)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.platterFilledTopAndArrowUpIphone)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.platterFilledTopIphone)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.square3Layers3dDownBackward)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.square3Layers3dDownForward)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.square3Layers3dDownLeft)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.square3Layers3dDownRight)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.textJustifyLeading)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.textJustifyLeft)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.textJustifyRight)
            }

            if #available(iOS 15.1, macOS 12.0, tvOS 15.1, visionOS 1.0, watchOS 8.1, *) {
                allCases.append(Self.textJustifyTrailing)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.airpodGen3Left)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.airpodGen3Right)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.airpodsGen3)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.airpodsGen3ChargingcaseWireless)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.airpodsGen3ChargingcaseWirelessFill)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.beatsFitPro)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.beatsFitProChargingcase)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.beatsFitProChargingcaseFill)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.beatsFitProLeft)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.beatsFitProRight)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.rectangleLeadinghalfFilled)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.rectangleTrailinghalfFilled)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.square3Layers3dDownLeftSlash)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.square3Layers3dDownRightSlash)
            }

            if #available(iOS 15.2, macOS 12.1, tvOS 15.2, visionOS 1.0, watchOS 8.3, *) {
                allCases.append(Self.square3Stack3dSlash)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.cameraMacro)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.cameraMacroCircle)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.cameraMacroCircleFill)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.dotsAndLineVerticalAndCursorarrowRectangle)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.keyViewfinder)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.personBadgeKey)
            }

            if #available(iOS 15.4, macOS 12.3, tvOS 15.4, visionOS 1.0, watchOS 8.5, *) {
                allCases.append(Self.personBadgeKeyFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.absBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.airConditionerHorizontal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.airConditionerHorizontalFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.airConditionerVertical)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.airConditionerVerticalFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.airPurifier)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.airPurifierFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.alarmWavesLeftAndRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.alarmWavesLeftAndRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.allergensFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.angle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.appleLogo)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowDownAndLineHorizontalAndArrowUp)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowDownMessage)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowDownMessageFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowLeftAndLineVerticalAndArrowRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowLeftAndRightTextVertical)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowRightAndLineVerticalAndArrowLeft)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowUpAndDownAndSparkles)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowUpAndDownTextHorizontal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowUpAndLineHorizontalAndArrowDown)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowUpCircleBadgeClock)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeBackward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeBackwardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeForward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeForwardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeLeft)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeLeftFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardBadgeClock)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardBadgeClockFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardBadgeClockFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.arrowshapeTurnUpBackwardBadgeClockRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.australsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.avRemote)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.avRemoteFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.backpack)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.backpackFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.backwardEndCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.backwardEndCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bagBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bagBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bagFillBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bagFillBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bahtsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.balloon)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.balloon2)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.balloon2Fill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.balloonFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.baseball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.baseballCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.baseballCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.baseballDiamondBases)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.baseballFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.basket)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.basketFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.basketball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.basketballCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.basketballCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.basketballFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bathtub)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bathtubFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.battery100Circle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.battery100CircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.beachUmbrella)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.beachUmbrellaFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bellAndWavesLeftAndRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bellAndWavesLeftAndRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bird)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.birdFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.birthdayCake)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.birthdayCakeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bitcoinsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.blindsHorizontalClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.blindsHorizontalOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.blindsVerticalClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.blindsVerticalOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boltBadgeClock)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boltBadgeClockFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boltBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boxTruck)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boxTruckBadgeClock)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boxTruckBadgeClockFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boxTruckBadgeClockFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boxTruckBadgeClockRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.boxTruckFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.brakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.brakesignalDashed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.brazilianrealsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bubblesAndSparkles)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.bubblesAndSparklesFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.buttonProgrammable)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.buttonProgrammableSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.buttonProgrammableSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cabinet)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cabinetFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.carbonDioxideCloud)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.carbonDioxideCloudFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.carbonMonoxideCloud)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.carbonMonoxideCloudFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.carrot)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.carrotFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cartBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cartBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cartBadgeQuestionmarkRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cartFillBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cartFillBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cartFillBadgeQuestionmarkRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cedisign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cellularbars)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.centsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chair)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chairFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chairLounge)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chairLoungeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chandelier)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chandelierFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.characterDuployan)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.characterPhonetic)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.characterSutton)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chartLineDowntrendXyaxis)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chartLineDowntrendXyaxisCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chartLineDowntrendXyaxisCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chartLineFlattrendXyaxis)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chartLineFlattrendXyaxisCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chartLineFlattrendXyaxisCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checklistChecked)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checklistCheckedRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checklistUnchecked)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkCircleBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkCircleBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkCircleBadgeQuestionmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkCircleBadgeQuestionmarkFillAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkCircleBadgeXmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkCircleBadgeXmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkMessage)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.checkmarkMessageFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chevronBackwardToLine)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chevronForwardToLine)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chevronLeftToLine)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.chevronRightToLine)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.circleDashedRectangle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.circleFilledPatternDiagonallineRectangle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.circleRectangleDashed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.circleRectangleFilledPatternDiagonalline)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clipboard)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clipboardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadge)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeQuestionmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeQuestionmarkFillAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeXmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.clockBadgeXmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudBoltCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudBoltCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudBoltRainCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudBoltRainCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudDrizzleCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudDrizzleCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudFogCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudFogCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudHailCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudHailCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudHeavyrainCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudHeavyrainCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudMoonBoltCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudMoonBoltCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudMoonCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudMoonCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudMoonRainCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudMoonRainCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudRainCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudRainCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSleetCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSleetCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSnowCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSnowCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSunBoltCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSunBoltCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSunCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSunCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSunRainCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cloudSunRainCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.coloncurrencysign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.compassDrawing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.contactSensor)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.contactSensorFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cooktop)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cooktopFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.creditcardViewfinder)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cricketBall)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cricketBallCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cricketBallCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cricketBallFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cruzeirosign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.cursorarrowSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.curtainsClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.curtainsOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dehumidifier)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dehumidifierFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.deskview)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.deskviewFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dialHigh)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dialHighFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dialLow)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dialLowFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dialMedium)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dialMediumFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dishwasher)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dishwasherFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeHorizontalCenter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeHorizontalCenterFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeHorizontalLeft)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeHorizontalLeftFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeHorizontalRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeHorizontalRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeVerticalBottom)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeVerticalBottomFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeVerticalCenter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeVerticalCenterFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeVerticalTop)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.distributeVerticalTopFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.docBadgeArrowUp)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.docBadgeArrowUpFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dollarsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dollarsignArrowCirclepath)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dongsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorFrenchClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorFrenchOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageClosedTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageDoubleBayClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageDoubleBayClosedTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageDoubleBayOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageDoubleBayOpenTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorGarageOpenTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorLeftHandClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorLeftHandOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorRightHandClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorRightHandOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorSlidingLeftHandClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorSlidingLeftHandOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorSlidingRightHandClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.doorSlidingRightHandOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropDegreesign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropDegreesignFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropDegreesignSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropDegreesignSlashFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropDegreesignSlashFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropDegreesignSlashRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropKeypadRectangle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dropKeypadRectangleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dryer)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dryerFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dumbbell)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.dumbbellFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.ellipsisMessage)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.ellipsisMessageFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.entryLeverKeypad)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.entryLeverKeypadFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.entryLeverKeypadTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.entryLeverKeypadTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.envelopeOpenBadgeClock)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.eraser)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.eraserFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.eraserLineDashed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.eraserLineDashedFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.eurosign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.exclamationmarkBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.exclamationmarkLock)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.exclamationmarkLockFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.exclamationmarkQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.exclamationmarkQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveBadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveFillBadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveFillBadgeQuestionmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveFillBadgeQuestionmarkAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveFillTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.externaldriveTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.faceSmilingInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanAndLightCeiling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanAndLightCeilingFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanCeiling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanCeilingFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanDesk)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanDeskFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanFloor)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanFloorFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanOscillation)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanOscillationFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanbladesSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fanbladesSlashFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.faxmachineFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figure2AndChildHoldinghands)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figure2ArmsOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureAmericanFootball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureAndChildHoldinghands)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureArchery)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureArmsOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureAustralianFootball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureBadminton)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureBarre)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureBaseball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureBasketball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureBowling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureBoxing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureClimbing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureCooldown)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureCoreTraining)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureCricket)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureCrossTraining)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureCurling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureDance)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureDiscSports)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureDressLineVerticalFigure)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureElliptical)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureEquestrianSports)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureFall)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureFallCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureFallCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureFencing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureFishing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureFlexibility)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureGolf)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureGymnastics)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureHandCycling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureHandball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureHighintensityIntervaltraining)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureHiking)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureHockey)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureHunting)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureIndoorCycle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureJumprope)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureKickboxing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureLacrosse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureMartialArts)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureMindAndBody)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureMixedCardio)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureOpenWaterSwim)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureOutdoorCycle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figurePickleball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figurePilates)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figurePlay)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figurePoolSwim)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRacquetball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRollRunningpace)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRolling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRower)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRugby)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRun)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRunCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureRunCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSailing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSkating)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSkiingCrosscountry)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSkiingDownhill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSnowboarding)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSoccer)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSocialdance)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSoftball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSquash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureStairStepper)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureStairs)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureStepTraining)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureStrengthtrainingFunctional)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureStrengthtrainingTraditional)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureSurfing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureTableTennis)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureTaichi)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureTennis)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureTrackAndField)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureVolleyball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureWalkArrival)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureWalkDeparture)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureWalkMotion)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureWaterFitness)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureWaterpolo)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureWrestling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.figureYoga)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.filmStack)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.filmStackFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fireplace)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fireplaceFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.firewall)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.firewallFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fish)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fishFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.flag2CrossedCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.flag2CrossedCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.flagCheckered)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.flagCheckered2Crossed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fleuron)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fleuronFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.florinsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fluidBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.football)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.footballCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.footballCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.footballFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.forwardEndCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.forwardEndCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fossilShell)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fossilShellFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.francsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fryingPan)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.fryingPanFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gaugeHigh)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gaugeLow)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gaugeMedium)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gaugeMediumBadgeMinus)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gaugeMediumBadgePlus)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gearBadge)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gearBadgeRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.gearshapeArrowTriangle2Circlepath)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.globeCentralSouthAsia)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.globeCentralSouthAsiaFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.globeDesk)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.globeDeskFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.guaranisign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.handApp)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.handAppFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.handRaisedFingersSpread)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.handRaisedFingersSpreadFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.headlightHighBeam)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.headlightHighBeamFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.headlightLowBeam)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.headlightLowBeamFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hearingdeviceAndSignalMeter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hearingdeviceAndSignalMeterFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hearingdeviceEarFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.heaterVertical)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.heaterVerticalFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hifireceiver)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hifireceiverFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hifispeakerAndAppletvFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hifispeakerAndAppletvRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hockeyPuck)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hockeyPuckCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hockeyPuckCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hockeyPuckFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.holdBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.homepodAndAppletvFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.homepodAndAppletvRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.homepodminiAndAppletvFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.homepodminiAndAppletvRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hryvniasign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.humidifier)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.humidifierAndDroplets)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.humidifierAndDropletsFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.humidifierFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hurricaneCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.hurricaneCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.indianrupeesign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.infoBubble)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.infoBubbleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.infoSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.infoSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardBadgeEllipsisFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardBadgeEye)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardBadgeEyeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardChevronCompactDownFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardChevronCompactLeftFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardOnehandedLeftFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.keyboardOnehandedRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.kipsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampCeiling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampCeilingFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampCeilingInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampDesk)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampDeskFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampFloor)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampFloorFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampTable)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lampTableFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.laptopcomputerAndIpad)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.larisign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.laurelLeading)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.laurelTrailing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightBeaconMax)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightBeaconMaxFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightBeaconMin)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightBeaconMinFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightCylindricalCeiling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightCylindricalCeilingFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightCylindricalCeilingInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightPanel)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightPanelFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRecessed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRecessed3)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRecessed3Fill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRecessed3Inverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRecessedFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRecessedInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRibbon)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightRibbonFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightStrip2)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightStrip2Fill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightbulb2)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightbulb2Fill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightbulbLed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightbulbLedFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightbulbLedWide)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightbulbLedWideFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOff)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOffFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOffSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOffSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOn)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOnFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOnSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lightswitchOnSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lirasign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.listBulletClipboard)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.listBulletClipboardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.listClipboard)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.listClipboardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lizard)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lizardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.locationSlashCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.locationSlashCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lockOpenTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lockOpenTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lockTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.lockTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.macstudio)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.macstudioFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.manatsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.medal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.medalFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.medicalThermometer)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.medicalThermometerFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadge)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeCircleFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeCircleRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeFilledFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeFilledFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.messageBadgeRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.micAndSignalMeter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.micAndSignalMeterFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.micBadgeXmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.micFillBadgeXmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.microbe)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.microbeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.microbeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.microbeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.microwave)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.microwaveFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.millsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.mirrorSideLeft)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.mirrorSideRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonHaze)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonHazeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonHazeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonHazeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonStarsCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonStarsCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseFirstQuarter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseFirstQuarterInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseFullMoon)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseFullMoonInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseLastQuarter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseLastQuarterInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseNewMoon)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseNewMoonInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaningCrescent)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaningCrescentInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaningGibbous)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaningGibbousInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaxingCrescent)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaxingCrescentInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaxingGibbous)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.moonphaseWaxingGibbousInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.nairasign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.nosignApp)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.nosignAppFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.numbersign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.oar2Crossed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.opticaldiscFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.oven)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.ovenFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.parkinglight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.parkinglightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.parkingsignBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.parkingsignBrakesignalSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.partyPopper)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.partyPopperFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pedestrianGateClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pedestrianGateOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pencilAndRuler)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pencilAndRulerFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pencilLine)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.person2BadgeGearshape)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.person2BadgeGearshapeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.person2Gobackward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.person2Slash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.person2SlashFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personAndBackgroundDotted)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personBadgeShieldCheckmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personBadgeShieldCheckmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personBust)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personBustFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personCropRectangleBadgePlus)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personCropRectangleBadgePlusFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personLineDottedPerson)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.personLineDottedPersonFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pesetasign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pesosign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneArrowDownLeftFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneArrowRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneArrowUpRightCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneArrowUpRightCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneArrowUpRightFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneBadgeCheckmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneConnectionFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneDownWavesLeftAndRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.phoneFillBadgeCheckmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.photoStack)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.photoStackFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pillCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pillCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pillFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pipeAndDrop)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.pipeAndDropFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.playDesktopcomputer)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.playDisplay)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.playLaptopcomputer)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.playpauseCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.playpauseCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.playstationLogo)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.popcorn)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.popcornCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.popcornCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.popcornFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletStrip)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletStripFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeA)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeAFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeASquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeASquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeB)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeBFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeBSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeBSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeC)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeCFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeCSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeCSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeD)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeDFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeDSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeDSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeE)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeEFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeESquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeESquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeF)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeFFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeFSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeFSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeG)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeGFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeGSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeGSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeH)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeHFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeHSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeHSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeI)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeIFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeISquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeISquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeJ)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeJFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeJSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeJSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeK)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeKFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeKSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeKSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeL)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeLFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeLSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeLSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeM)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeMFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeMSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeMSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeN)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeNFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeNSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeNSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeO)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeOFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeOSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.poweroutletTypeOSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.questionmarkBubble)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.questionmarkBubbleAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.questionmarkBubbleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.questionmarkBubbleFillAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.quotelevel)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.recordingtapeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.recordingtapeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rectanglePortraitAndArrowForward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rectanglePortraitAndArrowForwardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rectanglePortraitOnRectanglePortraitAngled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rectanglePortraitOnRectanglePortraitAngledFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.refrigerator)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.refrigeratorFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.roadLanes)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.roadLanesCurvedLeft)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.roadLanesCurvedRight)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rollerShadeClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rollerShadeOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.romanShadeClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.romanShadeOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rublesign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.rupeesign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sailboat)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sailboatFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sensor)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sensorFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sharedWithYou)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sharedWithYouSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shazamLogo)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shazamLogoFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shekelsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shippingboxAndArrowBackward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shippingboxAndArrowBackwardFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shoeprintsFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.shower)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.showerFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.showerHandheld)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.showerHandheldFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.showerSidejet)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.showerSidejetFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sink)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sinkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sliderHorizontal2Gobackward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sliderHorizontal2SquareBadgeArrowDown)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sliderHorizontal2SquareOnSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sliderHorizontalBelowSquareAndSquareFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.smokeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.smokeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.soccerball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.soccerballCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.soccerballCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.soccerballCircleFillInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.soccerballCircleInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.soccerballInverse)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sofa)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sofaFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.space)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerMinus)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerMinusFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerPlus)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerPlusFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerWave2BubbleLeft)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerWave2BubbleLeftFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerWave2BubbleLeftFillRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.speakerWave2BubbleLeftRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.spigot)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.spigotFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sportscourtCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sportscourtCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sprinkler)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sprinklerAndDroplets)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sprinklerAndDropletsFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sprinklerFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square2Layers3d)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square2Layers3dBottomFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square2Layers3dTopFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3d)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3dBottomFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3dDownBackwardSlashRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3dDownForwardSlashRtl)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3dMiddleFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3dSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.square3Layers3dTopFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareAndPencilCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareAndPencilCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareBottomthirdInsetFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareDotted)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareLeadingthirdInsetFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareLeftthirdInsetFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareOnSquareBadgePersonCrop)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareOnSquareBadgePersonCropFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareOnSquareIntersectionDashed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareRightthirdInsetFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareTopthirdInsetFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareTrailingthirdInsetFilled)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squaresLeadingRectangle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.squareshapeDottedSplit2x2)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.stairs)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.starSquareOnSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.starSquareOnSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sterlingsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.stove)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.stoveFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunAndHorizonCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunAndHorizonCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunDustCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunDustCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunHazeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunHazeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunMaxTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunMaxTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunriseCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunriseCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunsetCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.sunsetCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.swatchpalette)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.swatchpaletteFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.switchProgrammable)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.switchProgrammableFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.switchProgrammableSquare)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.switchProgrammableSquareFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.syringe)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.syringeFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tableFurniture)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tableFurnitureFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.teddybear)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.teddybearFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tengesign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisRacket)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisRacketCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisRacketCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisballCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisballCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tennisballFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tent)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tentFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.textLineFirstAndArrowtriangleForward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.textLineLastAndArrowtriangleForward)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.textWordSpacing)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.textformat12)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.textformat12Ar)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.textformat12Hi)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.theatermaskAndPaintbrush)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.theatermaskAndPaintbrushFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerBrakesignal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerHigh)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerLow)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerMedium)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerMediumSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerSnowflakeCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerSnowflakeCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerSunCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.thermometerSunCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.timerCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.timerCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.toilet)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.toiletFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tornadoCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tornadoCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.trophy)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.trophyCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.trophyCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.trophyFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tropicalstormCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tropicalstormCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tugriksign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.turkishlirasign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.tvAndMediaboxFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.umbrellaPercent)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.umbrellaPercentAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.umbrellaPercentFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.umbrellaPercentFillAr)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.vialViewfinder)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.videoDoorbell)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.videoDoorbellFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.videoprojector)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.videoprojectorFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.volleyball)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.volleyballCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.volleyballCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.volleyballFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.washer)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.washerFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.waterWaves)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.waterWavesAndArrowDown)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.waterWavesAndArrowDownTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.waterWavesAndArrowUp)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.waterWavesSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.waveformSlash)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.webCamera)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.webCameraFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wifiRouter)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wifiRouterFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windSnowCircle)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windSnowCircleFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowAwning)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowAwningClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowCasement)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowCasementClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowCeiling)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowCeilingClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowHorizontal)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowHorizontalClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowShadeClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowShadeOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowVerticalClosed)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windowVerticalOpen)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windshieldFrontAndFluid)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windshieldFrontAndWiper)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windshieldFrontAndWiperAndDrop)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windshieldRearAndFluid)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.windshieldRearAndWiper)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wineglass)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wineglassFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wonsign)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wrenchAdjustable)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.wrenchAdjustableFill)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.xboxLogo)
            }

            if #available(iOS 16.0, macOS 13.0, tvOS 16.0, visionOS 1.0, watchOS 9.0, *) {
                allCases.append(Self.yensign)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._0CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._0CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._0SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._0SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._1Brakesignal)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._1CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._1CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._1Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._1SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._1SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._10Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._11Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._12Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._2Brakesignal)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._2CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._2CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._2Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._2SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._2SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._3CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._3CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._3Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._3SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._3SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._4CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._4CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._4Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._4SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._4SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._5CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._5CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._5Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._5SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._5SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._6CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._6CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._6Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._6SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._6SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._7CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._7CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._7Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._7SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._7SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._8CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._8CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._8Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._8SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._8SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._9CircleAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._9CircleFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._9Lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._9SquareAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self._9SquareFillAr)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.abs)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.absBrakesignalSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.absCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.absCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autoBrakesignal)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autoHeadlightHighBeam)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autoHeadlightHighBeamFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autoHeadlightLowBeam)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autoHeadlightLowBeamFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autostartstop)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autostartstopSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.autostartstopTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.axel2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.axel2FrontAndRearEngaged)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.axel2FrontEngaged)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.axel2RearEngaged)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.backpackCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.backpackCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.batteryblock)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.batteryblockFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.batteryblockSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.batteryblockSlashFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.boltTrianglebadgeExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.boltTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carFrontWavesUp)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carFrontWavesUpFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRear)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearAndTireMarks)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearAndTireMarksSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearRoadLane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearRoadLaneDashed)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearWavesUp)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carRearWavesUpFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSide)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideAirCirculate)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideAirCirculateFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideAirFresh)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideAirFreshFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideAndExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideAndExclamationmarkFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideArrowtriangleDown)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideArrowtriangleDownFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideArrowtriangleUp)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideArrowtriangleUpArrowtriangleDown)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideArrowtriangleUpArrowtriangleDownFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideArrowtriangleUpFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideFrontOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideFrontOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideRearOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carSideRearOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightAndRearLeftAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightAndRearLeftAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightAndRearLeftOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightAndRearLeftOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndFrontRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndRearLeftAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndRearLeftAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndRearLeftOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndRearLeftOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontLeftOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightAndRearLeftAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightAndRearLeftAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightAndRearLeftOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightAndRearLeftOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorFrontRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorRearLeftAndRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorRearLeftAndRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorRearLeftOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorRearLeftOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorRearRightOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopDoorRearRightOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedArrowtriangleInward)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedArrowtriangleInwardFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedBadgeSteeringwheel)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedBadgeSteeringwheelFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedDepartureLeft)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedDepartureLeftFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedDepartureRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopLaneDashedDepartureRightFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesFront)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesFrontFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRear)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearLeft)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearLeftAndRearRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearLeftAndRearRightFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearLeftFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.carTopRadiowavesRearRightFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.chartDotsScatter)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.crossCaseCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.crossCaseCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ellipsisViewfinder)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.engineCombustion)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.engineCombustionFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.exclamationmarkTransmission)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureRunSquareStack)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureRunSquareStackFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSeatbelt)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSeatbeltAndAirbagOff)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSeatbeltAndAirbagOn)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirLower)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirUpper)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirUpperAndLower)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirWindshield)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirbagOff)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirbagOff2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirbagOn)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideAirbagOn2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.fishCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.fishCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.flagCheckeredCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.flagCheckeredCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.fluidTransmission)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.glowplug)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.handRaisedApp)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.handRaisedAppFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.handRaisedBrakesignal)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.handRaisedBrakesignalSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.handbag)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.handbagFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.hazardsign)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.hazardsignFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.headlightDaytime)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.headlightDaytimeFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.headlightFog)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.headlightFogFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.heatElementWindshield)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseAndFlag)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseAndFlagCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseAndFlagCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseAndFlagFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseLodge)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseLodgeCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseLodgeCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.houseLodgeFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.infoWindshield)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadAndIphoneSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen1)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen1BadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen1Landscape)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen1LandscapeBadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen2BadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen2Landscape)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.ipadGen2LandscapeBadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1BadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1Circle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1CircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1Landscape)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1RadiowavesLeftAndRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1RadiowavesLeftAndRightCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1RadiowavesLeftAndRightCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1Slash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1SlashCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen1SlashCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2BadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2Circle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2CircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2Landscape)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2RadiowavesLeftAndRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2RadiowavesLeftAndRightCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2RadiowavesLeftAndRightCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2Slash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2SlashCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen2SlashCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3BadgePlay)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3Circle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3CircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3Landscape)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3RadiowavesLeftAndRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3RadiowavesLeftAndRightCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3RadiowavesLeftAndRightCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3Slash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3SlashCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.iphoneGen3SlashCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.keyHorizontal)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.keyHorizontalFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.keyRadiowavesForward)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.keyRadiowavesForwardFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.kph)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.kphCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.kphCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.lane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.laptopcomputerSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.lightOverheadLeft)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.lightOverheadLeftFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.lightOverheadRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.lightOverheadRightFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.lockOpenRotation)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.macbookAndIpad)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.macbookAndIphone)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusAndFluidBatteryblock)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockExclamationmarkFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockSlashFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockStack)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockStackExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockStackExclamationmarkFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.minusPlusBatteryblockStackFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mirrorSideLeftAndArrowTurnDownRight)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mirrorSideLeftAndHeatWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mirrorSideRightAndArrowTurnDownLeft)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mirrorSideRightAndHeatWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mountain2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mountain2Circle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mountain2CircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mountain2Fill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mph)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mphCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mphCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mug)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.mugFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.oilcan)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.oilcanFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.personCropCircleDashed)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.playSquareStack)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.playSquareStackFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.questionmarkKeyFilled)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.retarderBrakesignal)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.roadLaneArrowtriangle2Inward)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.sailboatCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.sailboatCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostAndArrowtriangleUp)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostAndArrowtriangleUpCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostAndArrowtriangleUpCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostAndArrowtriangleUpFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostLeftCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostLeftCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostRightAndLeft)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostRightAndLeftCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostRightAndLeftCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostRightAndLeftFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostRightCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.signpostRightCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.snowflakeRoadLane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.snowflakeRoadLaneDashed)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.snowflakeSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.sos)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.sosCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.sosCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheel)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelAndHeatWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelAndKey)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelAndLock)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelRoadLane)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelRoadLaneDashed)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.steeringwheelSlash)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.stroller)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.strollerFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suitcaseRolling)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suitcaseRollingFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSide)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideAirCirculate)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideAirCirculateFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideAirFresh)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideAirFreshFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideAndExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideAndExclamationmarkFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideArrowtriangleDown)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideArrowtriangleDownFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideArrowtriangleUp)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideArrowtriangleUpArrowtriangleDown)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideArrowtriangleUpArrowtriangleDownFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideArrowtriangleUpFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideFrontOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideFrontOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideRearOpen)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.suvSideRearOpenFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.taillightFog)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.taillightFogFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tent2)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tent2Circle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tent2CircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tent2Fill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tentCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tentCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.thermometerAndLiquidWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.thermometerTransmission)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.toiletCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.toiletCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.transmission)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.tree)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.treeCircle)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.treeCircleFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.treeFill)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldFrontAndFluidAndSpray)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldFrontAndHeatWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldFrontAndSpray)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldFrontAndWiperAndSpray)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldFrontAndWiperExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldFrontAndWiperIntermittent)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndFluidAndSpray)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndHeatWaves)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndSpray)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndWiperAndDrop)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndWiperAndSpray)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndWiperExclamationmark)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.windshieldRearAndWiperIntermittent)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.wrongwaysign)
            }

            if #available(iOS 16.1, macOS 13.0, tvOS 16.1, visionOS 1.0, watchOS 9.1, *) {
                allCases.append(Self.wrongwaysignFill)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._1LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._1LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._10LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._10LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._11LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._11LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._12LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._12LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._2LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._2LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._3LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._3LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._4LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._4LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._5LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._5LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._6LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._6LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._7LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._7LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._8LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._8LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._9LaneAr)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self._9LaneHi)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.axle2)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.axle2FrontAndRearEngaged)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.axle2FrontEngaged)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.axle2RearEngaged)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.beatsPowerbeatsLeft)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.beatsPowerbeatsRight)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.beatsPowerbeats3Left)
            }

            if #available(iOS 16.4, macOS 13.3, tvOS 16.4, visionOS 1.0, watchOS 9.4, *) {
                allCases.append(Self.beatsPowerbeats3Right)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._2h)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._2hCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._2hCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4a)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4aCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4aCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4h)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4hCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4hCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4l)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4lCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self._4lCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.accessibility)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.accessibilityBadgeArrowUpRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.accessibilityFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.airpodsproChargingcaseWirelessRadiowavesLeftAndRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.airpodsproChargingcaseWirelessRadiowavesLeftAndRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.appleTerminal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.appleTerminalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.appleTerminalOnRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.appleTerminalOnRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applepencilAdapterUsbC)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applepencilAdapterUsbCFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applepencilAndScribble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applepencilGen1)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applepencilGen2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applepencilTip)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applewatchAndArrowForward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.applewatchAndArrowForwardRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.appwindowSwipeRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStick)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickAndArrowDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickAndArrowLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickAndArrowLeftAndArrowRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickAndArrowRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickAndArrowUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickAndArrowUpAndArrowDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickConsole)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arcadeStickConsoleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowBackwardToLineSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowBackwardToLineSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowClockwiseSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowClockwiseSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowCounterclockwiseSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowCounterclockwiseSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownApplewatch)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForwardCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForwardCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForwardSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForwardSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardToptrailingRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownBackwardToptrailingRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownCircleDotted)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackwardSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackwardSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownForwardTopleadingRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownForwardTopleadingRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRightCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRightCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRightSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRightSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftArrowUpRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftArrowUpRightCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftArrowUpRightCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftArrowUpRightSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftArrowUpRightSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftToprightRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownLeftToprightRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeftSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeftSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownRightTopleftRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownRightTopleftRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownToLineSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowDownToLineSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowForwardToLineSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowForwardToLineSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowLeftToLineSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowLeftToLineSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowRightToLineSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowRightToLineSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathIcloud)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowTriangle2CirclepathIcloudFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForwardSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForwardSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpBackwardBottomtrailingRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpBackwardBottomtrailingRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackwardCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackwardCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackwardSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackwardSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardBottomleadingRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpForwardBottomleadingRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRightSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRightSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftArrowDownRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftArrowDownRightCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftArrowDownRightCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftArrowDownRightSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftArrowDownRightSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftBottomrightRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpLeftBottomrightRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeftCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeftCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeftSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightAndArrowDownLeftSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightBottomleftRectangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpRightBottomleftRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpToLineSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpToLineSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpTrash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowUpTrashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowkeys)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowkeysDownFilled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowkeysFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowkeysLeftFilled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowkeysRightFilled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowkeysUpFilled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeBackwardCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeBackwardCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeDownCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeDownCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeForwardCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeForwardCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeLeftArrowshapeRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeLeftArrowshapeRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeLeftCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeLeftCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeRightCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeRightCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeUpCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeUpCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowshapeUpFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowtriangleUpArrowtriangleDownWindowLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.arrowtriangleUpArrowtriangleDownWindowRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australiandollarsign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australiandollarsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australiandollarsignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australiandollarsignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australiandollarsignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australiandollarsignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.australsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.automaticBrakesignal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.automaticHeadlightHighBeam)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.automaticHeadlightHighBeamFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.automaticHeadlightLowBeam)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.automaticHeadlightLowBeamFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.axle2DriveshaftDisengaged)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.axle2FrontDisengaged)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.axle2RearDisengaged)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.axle2RearLock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bahtsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery0percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery100percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery100percentBolt)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery100percentBoltRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery100percentCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery100percentCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery25percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery50percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.battery75percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsFitpro)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsFitproChargingcase)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsFitproChargingcaseFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsFitproLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsFitproRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsStudiobudsplus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsStudiobudsplusChargingcase)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsStudiobudsplusChargingcaseFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsStudiobudsplusLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.beatsStudiobudsplusRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bellBadgeSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bellBadgeSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bellBadgeSlashFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bellBadgeSlashRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bellBadgeWaveform)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bellBadgeWaveformFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.binocularsCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.binocularsCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.birdCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.birdCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bitcoinsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.boltBadgeAutomatic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.boltBadgeAutomaticFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.boltBadgeCheckmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.boltBadgeCheckmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.boltBadgeXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.boltBadgeXmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bookAndWrench)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bookAndWrenchFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bookPages)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bookPagesFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.brainFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.brainFilledHeadProfile)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.brainHeadProfileFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.brazilianrealsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleLeftAndTextBubbleRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleLeftAndTextBubbleRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleLeftAndTextBubbleRightFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.bubbleLeftAndTextBubbleRightRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledbottomHorizontalLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledbottomHorizontalLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledbottomHorizontalRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledbottomHorizontalRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledtopVerticalLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledtopVerticalLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledtopVerticalRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonAngledtopVerticalRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonHorizontalTopPress)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonHorizontalTopPressFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonVerticalLeftPress)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonVerticalLeftPressFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonVerticalRightPress)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.buttonVerticalRightPressFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cableCoaxial)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cableConnectorSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.calendarBadgeCheckmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.calendarBadgeCheckmarkRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cameraBadgeClock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cameraBadgeClockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cameraBadgeEllipsisFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carFrontWavesDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carFrontWavesDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carRearAndCollisionRoadLane)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carRearAndCollisionRoadLaneSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideHillDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideHillDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideHillUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideHillUpFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideLock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideLockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideLockOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideLockOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideRearAndCollisionAndCarSideFront)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideRearAndCollisionAndCarSideFrontSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideRearAndExclamationmarkAndCarSideFront)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carSideRearAndWave3AndCarSideFront)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopDoorSlidingLeftOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopDoorSlidingLeftOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopDoorSlidingRightOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopDoorSlidingRightOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopFrontleftArrowtriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopFrontleftArrowtriangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopFrontrightArrowtriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopFrontrightArrowtriangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRadiowavesRearRightBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRadiowavesRearRightBadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRadiowavesRearRightBadgeXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRadiowavesRearRightBadgeXmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRearleftArrowtriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRearleftArrowtriangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRearrightArrowtriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carTopRearrightArrowtriangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowLeftBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowLeftBadgeXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowLeftExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowLeftXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowRightBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowRightBadgeXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowRightExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carWindowRightXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft1)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft1Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft2Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft3)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeft3Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftAndHeatWaves)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftAndHeatWavesFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftBackrestUpAndDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftBackrestUpAndDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftFan)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftFanFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftForwardAndBackward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftForwardAndBackwardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftMassage)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftMassageFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftUpAndDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatLeftUpAndDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight1)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight1Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight2Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight3)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRight3Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightAndHeatWaves)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightAndHeatWavesFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightBackrestUpAndDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightBackrestUpAndDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightFan)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightFanFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightForwardAndBackward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightForwardAndBackwardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightMassage)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightMassageFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightUpAndDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.carseatRightUpAndDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cat)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.catCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.catCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.catFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cedisignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.centsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnify)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyAr)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyHe)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyHi)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyJa)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyKo)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyTh)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.characterMagnifyZh)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chartBarXaxisAscending)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chartBarXaxisAscendingBadgeClock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chartBarXaxisAscendingBadgeClockRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.checkmarkApplewatch)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.checkmarkBubbleFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.checkmarkBubbleRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.checkmarkGobackward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.checkmarkRectangleStack)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.checkmarkRectangleStackFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chineseyuanrenminbisign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chineseyuanrenminbisignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chineseyuanrenminbisignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chineseyuanrenminbisignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chineseyuanrenminbisignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.chineseyuanrenminbisignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeCheckmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeCheckmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeMinus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeMinusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgePlus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgePlusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeQuestionmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeQuestionmarkAr)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeQuestionmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeQuestionmarkFillAr)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeXmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBadgeXmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBottomhalfFilledInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleBottomrighthalfCheckered)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleDottedAndCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleDottedCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleDottedCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleFilledIpad)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleFilledIpadFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleFilledIpadLandscape)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleFilledIpadLandscapeFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleFilledIphone)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleFilledIphoneFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleLefthalfFilledInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleLefthalfFilledRighthalfStripedHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleLefthalfFilledRighthalfStripedHorizontalInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleLefthalfStripedHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleLefthalfStripedHorizontalInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleRighthalfFilledInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.circleTophalfFilledInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cloudRainbowHalf)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cloudRainbowHalfFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.coloncurrencysignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.creditcardTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cruzeirosignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cursorarrowSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cursorarrowSlashSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.cursorarrowSlashSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.danishkronesign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.danishkronesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.danishkronesignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.danishkronesignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.danishkronesignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.danishkronesignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dishwasherCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dishwasherCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docBadgeClock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docBadgeClockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docQuestionmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docQuestionmarkAr)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docQuestionmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docQuestionmarkFillAr)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docQuestionmarkFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.docQuestionmarkRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dog)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dogCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dogCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dogFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dongsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dotScope)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dotScopeDisplay)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dotScopeLaptopcomputer)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dropHalffull)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dropTransmission)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dryerCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.dryerCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.earBadgeWaveform)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.engineCombustionBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.engineCombustionBadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.envelopeBadgePersonCrop)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.envelopeBadgePersonCropFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurosignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurozonesign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurozonesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurozonesignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurozonesignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurozonesignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eurozonesignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evCharger)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerArrowtriangleLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerArrowtriangleLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerArrowtriangleRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerArrowtriangleRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evChargerSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugAcGbT)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugAcGbTFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugAcType1)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugAcType1Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugAcType2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugAcType2Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcCcs1)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcCcs1Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcCcs2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcCcs2Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcChademo)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcChademoFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcGbT)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcGbTFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcNacs)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.evPlugDcNacsFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.exclamationmarkMagnifyingglass)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.exclamationmarkTirepressure)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.exclamationmarkWarninglight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.exclamationmarkWarninglightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.eyeglassesSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fan)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fanBadgeAutomatic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fanBadgeAutomaticFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fanFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fanSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fanSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fieldOfViewUltrawide)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fieldOfViewUltrawideFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fieldOfViewWide)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fieldOfViewWideFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figure)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figure2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figure2Circle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figure2CircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChild)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChildAndLock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChildAndLockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChildAndLockOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChildAndLockOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChildCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureChildCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSide)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionLower)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionMiddle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionMiddleAndLower)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionMiddleAndLowerAngled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionUpper)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionUpperAngledAndLowerAngled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionUpperAngledAndMiddle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAirDistributionUpperAngledAndMiddleAndLowerAngled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideAutomatic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionLower)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionMiddle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpper)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpperAndLower)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureSeatedSideWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.figureWalkMotionTrianglebadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fireworks)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightOffCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightOffCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightOnCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightOnCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightSlashCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flashlightSlashCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flask)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.flaskFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.florinsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.francsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpArrowtriangleLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpArrowtriangleLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpArrowtriangleRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpArrowtriangleRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.fuelpumpSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle33percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle33percentAndArrowtriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle33percentAndArrowtriangleFrom0percentTo50percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle67percentAndArrowtriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle67percentAndArrowtriangleAndCar)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle84percentExclamation)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedle0percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedle100percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedle33percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedle50percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedle67percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedleBottom0percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedleBottom100percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedleBottom50percent)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedleBottom50percentBadgeMinus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithDotsNeedleBottom50percentBadgePlus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithNeedle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gaugeWithNeedleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gearshiftLayoutSixspeed)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.guaranisignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gymBag)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.gymBagFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.handPointUpLeftAndText)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.handPointUpLeftAndTextFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.handbagCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.handbagCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.handsAndSparkles)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.handsAndSparklesFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hanger)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hareCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hareCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.headProfileArrowForwardAndVisionpro)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.heatWaves)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.horn)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hornBlast)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hornBlastFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hornFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hourglassAndLock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.hryvniasignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.indianrupeesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.infoBubbleFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.infoBubbleRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ipadCase)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ipadCaseAndIphoneCase)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ipadSizes)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.iphoneAndArrowLeftAndArrowRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.iphoneCase)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.iphoneSizes)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.kashidaArabic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.keyRadiowavesForwardSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.keyRadiowavesForwardSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.keySlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.keySlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.kipsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lButtonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lButtonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l1ButtonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l1ButtonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l1Circle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l1CircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l2ButtonAngledtopVerticalLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l2ButtonAngledtopVerticalLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l2ButtonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l2ButtonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l2Circle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l2CircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l3ButtonAngledbottomHorizontalLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l3ButtonAngledbottomHorizontalLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l4ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.l4ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ladybugCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ladybugCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.larisignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.laserBurst)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lassoBadgeSparkles)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lbButtonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lbButtonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lbCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lbCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.left)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.leftCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.leftCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.licenseplate)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.licenseplateFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightbulbMax)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightbulbMaxFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightbulbMin)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightbulbMinBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightbulbMinBadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightbulbMinFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightrail)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightrailFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lightspectrumHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.line3HorizontalButtonAngledtopVerticalRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.line3HorizontalButtonAngledtopVerticalRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.linesMeasurementVertical)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lirasignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.livephotoBadgeAutomatic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lizardCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lizardCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lmButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lmButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lockAppDashed)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lockBadgeClock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lockBadgeClockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lockCircleDotted)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lsbButtonAngledbottomHorizontalLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.lsbButtonAngledbottomHorizontalLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ltButtonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ltButtonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ltCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.ltCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m1ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m1ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m2ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m2ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m3ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m3ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m4ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.m4ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.macbook)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.macbookAndVisionpro)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.macbookGen1)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.macbookGen2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.macwindowAndCursorarrow)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.macwindowAndCursorarrowRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.manatsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.mappinAndEllipseCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.mappinAndEllipseCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.messageBadgeWaveform)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.messageBadgeWaveformFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.millsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonDust)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonDustCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonDustCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonDustFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonrise)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonriseCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonriseCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonriseFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonset)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonsetCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonsetCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.moonsetFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.movieclapper)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.movieclapperFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.nairasignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.networkSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.norwegiankronesign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.norwegiankronesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.norwegiankronesignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.norwegiankronesignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.norwegiankronesignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.norwegiankronesignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.opticid)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.opticidFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p1ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p1ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p2ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p2ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p3ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p3ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p4ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.p4ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.paddleshifterLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.paddleshifterLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.paddleshifterRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.paddleshifterRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.panoBadgePlay)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.panoBadgePlayFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.parkingsignRadiowavesLeftAndRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.parkingsignRadiowavesRightAndSafetycone)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.parkingsignSteeringwheel)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pedalAccelerator)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pedalAcceleratorFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pedalBrake)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pedalBrakeFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pedalClutch)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pedalClutchFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilAndListClipboard)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilAndListClipboardRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilAndScribble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilTipCropCircleBadgeArrowForwardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilTipCropCircleBadgeMinusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilTipCropCircleBadgePlusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pencilTipCropCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.person2BadgeKey)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.person2BadgeKeyFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personAndBackgroundStripedHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personBubble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personBubbleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personBustCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personBustCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personCropCircleDashedCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personCropCircleDashedCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.personSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pesetasignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pesosignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.phoneBadgeWaveform)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.phoneBadgeWaveformFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.phoneBubble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.phoneBubbleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.phoneBubbleFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.phoneBubbleRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoArtframeCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoArtframeCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoBadgeArrowDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoBadgeArrowDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoBadgeCheckmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoBadgeCheckmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoBadgePlus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.photoBadgePlusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.playHouse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.playHouseFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointBottomleftFilledForwardToPointToprightScurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointBottomleftForwardToArrowtriangleUturnScurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointBottomleftForwardToArrowtriangleUturnScurvepathFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointBottomleftForwardToPointToprightFilledScurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointBottomleftForwardToPointToprightScurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointBottomleftForwardToPointToprightScurvepathFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointForwardToPointCapsulepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointForwardToPointCapsulepathFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointTopleftDownToPointBottomrightCurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointTopleftDownToPointBottomrightCurvepathFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointTopleftDownToPointBottomrightFilledCurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.pointTopleftFilledDownToPointBottomrightCurvepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.polishzlotysign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.polishzlotysignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.polishzlotysignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.polishzlotysignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.polishzlotysignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.polishzlotysignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.powercord)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.powercordFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rButtonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rButtonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r1ButtonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r1ButtonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r1Circle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r1CircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r2ButtonAngledtopVerticalRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r2ButtonAngledtopVerticalRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r2ButtonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r2ButtonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r2Circle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r2CircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r3ButtonAngledbottomHorizontalRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r3ButtonAngledbottomHorizontalRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r4ButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.r4ButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rainbow)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rbButtonRoundedbottomHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rbButtonRoundedbottomHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rbCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rbCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangle3GroupBubble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangle3GroupBubbleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleCheckered)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleInsetFilledAndCursorarrow)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleInsetFilledBadgeRecord)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleLandscapeRotate)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleOnRectangleBadgeGearshape)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleOnRectangleButtonAngledtopVerticalLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleOnRectangleButtonAngledtopVerticalLeftFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectanglePortraitBadgePlus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectanglePortraitBadgePlusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectanglePortraitRotate)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio16To9)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio16To9Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio3To4)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio3To4Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio4To3)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio4To3Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio9To16)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rectangleRatio9To16Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.retarderBrakesignalAndExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.retarderBrakesignalSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.right)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rightCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rightCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.righttriangle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.righttriangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.righttriangleSplitDiagonal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.righttriangleSplitDiagonalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rmButtonHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rmButtonHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rotate3dCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rotate3dCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rotate3dFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rsbButtonAngledbottomHorizontalRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rsbButtonAngledbottomHorizontalRightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rtButtonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rtButtonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rtCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rtCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rublesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.rupeesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sharedWithYouCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sharedWithYouCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shekelsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shieldCheckered)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shieldLefthalfFilledBadgeCheckmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shieldLefthalfFilledTrianglebadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shoe)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shoe2)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shoe2Fill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shoeCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shoeCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.shoeFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.skateboard)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.skateboardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.skis)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.skisFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sliderHorizontal2Square)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sliderHorizontalBelowSunMax)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.smartphone)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.snowboard)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.snowboardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.speakerWave2Bubble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.speakerWave2BubbleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.speakerWave2BubbleFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.speakerWave2BubbleRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.square2Layers3dFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareArrowtriangle4Outward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareBadgePlus)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareBadgePlusFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareResize)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareResizeDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareResizeUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareStack3dUpBadgeAutomatic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareStack3dUpBadgeAutomaticFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareStack3dUpTrianglebadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareStack3dUpTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squaresLeadingRectangleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareshapeDottedSquareshape)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.squareshapeSquareshapeDotted)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.staroflifeShield)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.staroflifeShieldFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.steeringwheelAndLiquidWave)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.steeringwheelArrowtriangleLeft)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.steeringwheelArrowtriangleRight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.steeringwheelBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.steeringwheelCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.steeringwheelCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sterlingsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.storefront)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.storefrontCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.storefrontCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.storefrontFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunHorizon)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunHorizonCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunHorizonCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunHorizonFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunRain)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunRainCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunRainCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunRainFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunSnow)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunSnowCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunSnowCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunSnowFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunglasses)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.sunglassesFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.surfboard)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.surfboardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideHillDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideHillDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideHillUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideHillUpFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideLock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideLockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideLockOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.suvSideLockOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swedishkronasign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swedishkronasignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swedishkronasignCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swedishkronasignCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swedishkronasignSquare)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swedishkronasignSquareFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swiftdata)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swirlCircleRighthalfFilled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.swirlCircleRighthalfFilledInverse)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tengesignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.textformat12Km)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.textformat12My)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.thermometerVariableAndFigure)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.thermometerVariableAndFigureCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.thermometerVariableAndFigureCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tirepressure)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tortoiseCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tortoiseCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tractionControlTirepressure)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tractionControlTirepressureExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tractionControlTirepressureSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.triangleshape)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.triangleshapeFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckBox)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckBoxBadgeClock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckBoxBadgeClockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckBoxBadgeClockFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckBoxBadgeClockRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckBoxFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSide)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideAirCirculate)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideAirCirculateFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideAirFresh)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideAirFreshFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideAndExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideAndExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideArrowtriangleDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideArrowtriangleDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideArrowtriangleUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideArrowtriangleUpArrowtriangleDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideArrowtriangleUpArrowtriangleDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideArrowtriangleUpFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideFrontOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideFrontOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideHillDown)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideHillDownFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideHillUp)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideHillUpFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideLock)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideLockFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideLockOpen)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.truckPickupSideLockOpenFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tshirtCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tshirtCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tugriksignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.turkishlirasignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tvBadgeWifi)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tvBadgeWifiFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tvSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.tvSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoBadgeWaveform)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoBadgeWaveformFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoBubble)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoBubbleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoBubbleFillRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoBubbleRtl)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoSlashCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.videoSlashCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.viewfinderRectangular)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.viewfinderTrianglebadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionpro)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproAndArrowForward)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproAndArrowForwardFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproBadgeExclamationmark)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproBadgeExclamationmarkFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproBadgePlay)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproBadgePlayFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproSlash)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproSlashCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproSlashCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.visionproSlashFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.voiceover)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.warninglight)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.warninglightFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.washerCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.washerCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.watchAnalog)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.waterbottle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.waterbottleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.waveformAndPersonFilled)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.waveformBadgeMagnifyingglass)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.waveformBadgeMic)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.wifiExclamationmarkCircle)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.wifiExclamationmarkCircleFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.wonsignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.xserveRaid)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.yensignArrowCirclepath)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.yieldsign)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.yieldsignFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.zlButtonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.zlButtonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.zrButtonRoundedtopHorizontal)
            }

            if #available(iOS 17.0, macOS 14.0, tvOS 17.0, visionOS 1.0, watchOS 10.0, *) {
                allCases.append(Self.zrButtonRoundedtopHorizontalFill)
            }

            if #available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *) {
                allCases.append(Self.chevronCompactBackward)
            }

            if #available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *) {
                allCases.append(Self.chevronCompactForward)
            }

            if #available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *) {
                allCases.append(Self.personCropSquareBadgeCamera)
            }

            if #available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *) {
                allCases.append(Self.personCropSquareBadgeCameraFill)
            }

            if #available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *) {
                allCases.append(Self.personCropSquareBadgeVideo)
            }

            if #available(iOS 17.1, macOS 14.1, tvOS 17.1, visionOS 1.0, watchOS 10.1, *) {
                allCases.append(Self.personCropSquareBadgeVideoFill)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._0CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._0CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._0SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._0SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._00SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._01SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._02SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._03SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._04SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._05SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._06SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._07SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._08SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._09SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._1CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._1CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._1SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._1SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._10SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._11SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._12SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._13SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._14SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._15SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._16SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._17SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._18SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._19SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._2CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._2CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._2SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._2SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._20SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._21SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._22SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._23SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._24SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._25SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._26SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._27SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._28SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._29SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._3CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._3CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._3SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._3SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._30SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._31SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._32SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._33SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._34SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._35SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._36SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._37SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._38SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._39SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._4CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._4CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._4SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._4SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._40SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._41SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._42SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._43SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._44SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._45SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._46SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._47SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._48SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._49SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._5CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._5CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._5SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._5SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50CircleAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50CircleFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50SquareAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50SquareFillAr)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._50SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._6CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._6CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._6SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._6SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._7CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._7CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._7SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._7SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._8CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._8CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._8SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._8SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._9CircleFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._9CircleHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._9SquareFillHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self._9SquareHi)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self.squareAndArrowUpBadgeClock)
            }

            if #available(iOS 17.2, macOS 14.2, tvOS 17.2, visionOS 1.1, watchOS 10.2, *) {
                allCases.append(Self.squareAndArrowUpBadgeClockFill)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.appleMeditate)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.appleMeditateSquareStack)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.appleMeditateSquareStackFill)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.appleTerminalCircle)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.appleTerminalCircleFill)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.arrowDownAppDashed)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.arrowDownAppDashedTrianglebadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.audioJackMono)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.audioJackStereo)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.ipadBadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.ipadGen1BadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.ipadGen1LandscapeBadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.ipadGen2BadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.ipadGen2LandscapeBadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.ipadLandscapeBadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.iphoneBadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.iphoneGen1BadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.iphoneGen2BadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.iphoneGen3BadgeExclamationmark)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.medalStar)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.medalStarFill)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.plusCircleDashed)
            }

            if #available(iOS 17.4, macOS 14.4, tvOS 17.4, visionOS 1.1, watchOS 10.4, *) {
                allCases.append(Self.translate)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsPill)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsPillFill)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsSolobuds)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsSolobudsChargingcase)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsSolobudsChargingcaseFill)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsSolobudsLeft)
            }

            if #available(iOS 17.6, macOS 14.6, tvOS 17.6, visionOS 1.3, watchOS 10.6, *) {
                allCases.append(Self.beatsSolobudsRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._10ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._10ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._10ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._10ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._10ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._10ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._15ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._15ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._15ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._15ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._15ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._15ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._30ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._30ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._30ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._30ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._30ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._30ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._45ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._45ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._45ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._45ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._45ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._45ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._5ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._5ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._5ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._5ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._5ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._5ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._60ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._60ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._60ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._60ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._60ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._60ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._75ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._75ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._75ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._75ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._75ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._75ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._90ArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._90ArrowTriangleheadClockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._90ArrowTriangleheadClockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._90ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._90ArrowTriangleheadCounterclockwiseAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self._90ArrowTriangleheadCounterclockwiseHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airCarSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airCarSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airConvertibleSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airConvertibleSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airPickupSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airPickupSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airSuvSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airSuvSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayAudio)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayAudioBadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayAudioCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayAudioCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayVideo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayVideoBadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayVideoCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airplayVideoCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsMax)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsPro)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsProChargingcaseWireless)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsProChargingcaseWirelessFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsProChargingcaseWirelessRadiowavesLeftAndRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsProChargingcaseWirelessRadiowavesLeftAndRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsProLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.airpodsProRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootball)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballProfessional)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballProfessionalCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballProfessionalCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.americanFootballProfessionalFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.antennaRadiowavesLeftAndRightSlashCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.antennaRadiowavesLeftAndRightSlashCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appBadgeClock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appBadgeClockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appendPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appendPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appendPageFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appendPageRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleHapticsAndExclamationmarkTriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleHapticsAndMusicNote)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleHapticsAndMusicNoteSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleImagePlayground)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleImagePlaygroundFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleIntelligence)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleMeditateCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.appleMeditateCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.applepencilDoubletap)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.applepencilHover)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.applepencilSqueeze)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.applewatchCaseSizes)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arcadeStickAndArrowLeftAndArrowRightOutward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowBackwardCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForwardRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownBackwardAndArrowUpForwardRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownBackwardCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownDocument)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownDocumentFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackwardRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownForwardAndArrowUpBackwardRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownForwardCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownLeftAndArrowUpRightRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownLeftCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeftRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownRightAndArrowUpLeftRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowDownRightCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowForwardCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowLeftCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowRightCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowRightFilledFilterArrowRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowRightPageOnClipboard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2Clockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90Camera)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90CameraFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90Circle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90CircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90Icloud)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90IcloudFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2ClockwiseRotate90PageOnClipboard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2Counterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTrianglehead2CounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadBottomleftCapsulepathClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadBranch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadClockwiseHeart)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadClockwiseHeartFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadClockwiseIcloud)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadClockwiseIcloudFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadClockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadCounterclockwiseIcloud)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadCounterclockwiseIcloudFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadLeftAndRightRighttriangleLeftRighttriangleRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadLeftAndRightRighttriangleLeftRighttriangleRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadMerge)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadPull)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadRectanglepath)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadSwap)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadToprightCapsulepathClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadTurnUpRightCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadTurnUpRightCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadTurnUpRightDiamond)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadTurnUpRightDiamondFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadUpAndDownRighttriangleUpRighttriangleDown)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowTriangleheadUpAndDownRighttriangleUpRighttriangleDownFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForwardRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpBackwardAndArrowDownForwardRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpBackwardCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpDocument)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpDocumentFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackwardRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpForwardAndArrowDownBackwardRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpForwardCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpLeftAndArrowDownRightRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpLeftCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpPageOnClipboard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.arrowUpRightCircleDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australianFootball)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australianFootballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australianFootballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australianFootballFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australiandollarsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.australsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bahtsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.baseUnit)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.baseballDiamondBasesOutsIndicator)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.batteryblockStack)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.batteryblockStackBadgeSnowflake)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.batteryblockStackBadgeSnowflakeFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.batteryblockStackFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.batteryblockStackTrianglebadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.batteryblockStackTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsPowerbeatsPro)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsPowerbeatsProChargingcase)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsPowerbeatsProChargingcaseFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsPowerbeatsProLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsPowerbeatsProRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsPlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsPlusChargingcase)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsPlusChargingcaseFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsPlusLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsPlusRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beatsStudiobudsRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.beziercurve)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bitcoinsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.brazilianrealsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bubbleAndPencil)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.bubbleAndPencilRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.calendarAndPerson)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cameraMacroSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cameraMacroSlashCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cameraMacroSlashCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.capsuleOnCapsule)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.capsuleOnCapsuleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.capsuleOnRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.capsuleOnRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carBadgeGearshape)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carBadgeGearshapeFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carFrontWavesLeftAndRightAndUp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carFrontWavesLeftAndRightAndUpFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearAndTireMarksOff)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearHazardsign)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearHazardsignFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance1)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance1AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance2AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance3)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance3AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance4)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance4AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance5)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneDistance5AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneOff)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearRoadLaneWaveUp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carRearTiltRoadLanesCurvedRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideFrontOpenCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideFrontOpenCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideHillDescentControl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideHillDescentControlFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearAndExclamationmarkAndCarSideFrontOff)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearCropTrunkPartition)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearCropTrunkPartitionFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearOpenCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearOpenCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearTowHitch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRearTowHitchFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRoofCargoCarrier)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRoofCargoCarrierFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRoofCargoCarrierSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carSideRoofCargoCarrierSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleFrontLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleFrontLeftFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleFrontRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleFrontRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleRearLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleRearLeftFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleRearRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopArrowtriangleRearRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopFrontRadiowavesFrontLeftAndFrontAndFrontRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopFrontRadiowavesFrontLeftAndFrontAndFrontRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopRadiowavesRearLeftCarTopFront)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopRadiowavesRearLeftCarTopFrontFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopRadiowavesRearRightCarTopFront)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopRadiowavesRearRightCarTopFrontFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopRearRadiowavesRearLeftAndRearAndRearRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopRearRadiowavesRearLeftAndRearAndRearRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopVideoRearLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopVideoRearLeftFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopVideoRearRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.carTopVideoRearRightFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cartBadgeClock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cartBadgeClockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cartBadgeClockFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cartBadgeClockRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cedisignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.centsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterBn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleFillZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterCircleZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterGu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterKn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterMl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterMni)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterMr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterOr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterPa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSat)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareFillZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterSquareZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterTa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.characterTe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.charactersLowercase)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.charactersLowercaseEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.charactersLowercaseRu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.charactersUppercase)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.charactersUppercaseEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.charactersUppercaseRu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chartBarHorizontalPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chartBarHorizontalPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chartBarYaxis)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chartLineTextClipboard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chartLineTextClipboardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.checkmarkArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.checkmarkSealTextPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.checkmarkSealTextPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.checkmarkSealTextPageFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.checkmarkSealTextPageRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronBackwardChevronBackwardDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronCompactLeftChevronCompactRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronCompactUpChevronCompactDown)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronCompactUpChevronCompactRightChevronCompactDownChevronCompactLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronDown2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronDownDotted2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronDownForward2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronDownForwardDotted2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronDownRight2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronDownRightDotted2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronForwardDottedChevronForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronLeftChevronLeftDotted)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronLeftChevronRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronRightDottedChevronRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUp2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpChevronDownSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpChevronDownSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpChevronRightChevronDownChevronLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpDotted2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpForward2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpForwardDotted2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpRight2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chevronUpRightDotted2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.chineseyuanrenminbisignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.circleBottomrighthalfPatternCheckered)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.clockArrowTrianglehead2CounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.clockArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cloudRainbowCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cloudRainbowCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coat)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coatFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.coloncurrencysignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideAirCirculate)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideAirCirculateFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideAirFresh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideAirFreshFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideAndExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideAndExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowTriangleheadBackward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowTriangleheadBackwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowTriangleheadForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowTriangleheadForwardAndBackward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowTriangleheadForwardAndBackwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowTriangleheadForwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowtriangleDown)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowtriangleDownFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowtriangleUp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowtriangleUpArrowtriangleDown)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowtriangleUpArrowtriangleDownFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideArrowtriangleUpFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideFrontOpen)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideFrontOpenCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideFrontOpenCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideFrontOpenFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideHillDescentControl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideHillDescentControlFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideHillDown)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideHillDownFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideHillUp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideHillUpFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideLock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideLockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideLockOpen)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.convertibleSideLockOpenFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cruzeirosignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cupAndHeatWaves)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.cupAndHeatWavesFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.danishkronesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.degreesignCelsius)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.degreesignFahrenheit)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.desktopcomputerAndMacbook)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.distributeHorizontal)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.distributeHorizontalFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.distributeVertical)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.distributeVerticalFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.document)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeArrowUp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeArrowUpFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeClock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeClockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeEllipsis)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeEllipsisFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeGearshape)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgeGearshapeFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentOnClipboard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentOnClipboardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentOnDocument)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentOnDocumentFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentViewfinder)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.documentViewfinderFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dollarsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.dongsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.drone)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.droneFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.duffleBag)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.duffleBagFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ecgTextPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ecgTextPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ecgTextPageFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ecgTextPageRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.engineEmissionAndExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.engineEmissionAndFilter)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.envelopeAndArrowTriangleheadBranch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.envelopeAndArrowTriangleheadBranchFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.envelopeFront)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.envelopeFrontFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.envelopeFrontFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.envelopeFrontRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurosignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.eurozonesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.exclamationmarkArrowTrianglehead2ClockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.exclamationmarkArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figure2LeftHoldinghands)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figure2RightHoldinghands)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureAmericanFootballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureAmericanFootballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureArcheryCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureArcheryCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureAustralianFootballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureAustralianFootballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBadmintonCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBadmintonCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBarreCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBarreCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBaseballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBaseballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBasketballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBasketballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBowlingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBowlingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBoxingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureBoxingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureClimbingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureClimbingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCooldownCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCooldownCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCoreTrainingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCoreTrainingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCricketCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCricketCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCrossTrainingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCrossTrainingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCurlingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureCurlingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureDanceCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureDanceCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureDiscSportsCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureDiscSportsCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureEllipticalCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureEllipticalCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureEquestrianSportsCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureEquestrianSportsCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFencingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFencingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFieldHockey)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFieldHockeyCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFieldHockeyCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFishingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFishingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFlexibilityCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureFlexibilityCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureGolfCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureGolfCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureGymnasticsCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureGymnasticsCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHandCyclingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHandCyclingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHandballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHandballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHighintensityIntervaltrainingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHighintensityIntervaltrainingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHikingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHikingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHockeyCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHockeyCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHuntingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureHuntingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIceHockey)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIceHockeyCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIceHockeyCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIceSkating)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIceSkatingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIceSkatingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorCycleCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorCycleCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorRowing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorRowingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorRowingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorSoccer)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorSoccerCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureIndoorSoccerCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureJumpropeCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureJumpropeCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureKickboxingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureKickboxingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureLacrosseCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureLacrosseCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureMartialArtsCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureMartialArtsCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureMindAndBodyCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureMindAndBodyCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureMixedCardioCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureMixedCardioCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOpenWaterSwimCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOpenWaterSwimCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorCycleCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorCycleCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorRowing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorRowingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorRowingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorSoccer)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorSoccerCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureOutdoorSoccerCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePickleballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePickleballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePilatesCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePilatesCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePlayCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePlayCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePoolSwimCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figurePoolSwimCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRacquetballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRacquetballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRollCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRollCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRollRunningpaceCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRollRunningpaceCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRollingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRollingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRugbyCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRugbyCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRunTreadmill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRunTreadmillCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureRunTreadmillCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSailingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSailingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats1)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats11)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats11Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats12)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats12Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats1Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats22)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats222)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats222Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats223)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats223Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats22Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats23)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats232)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats232Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats233)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats233Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats23Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats2Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats3)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats33)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats333)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats333Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats33Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSeatbeltLeftDriveSeats3Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionMiddleAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionMiddleAndLowerAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionUpper)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionUpperAngledAndLowerAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionUpperAngledAndMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionUpperAngledAndMiddleAndLowerAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirbagOff)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirbagOff2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirbagOn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAirbagOn2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftAutomatic)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftFan)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftSteeringwheel)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWaves)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpper)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionMiddleAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionMiddleAndLowerAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionUpper)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionUpperAngledAndLowerAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionUpperAngledAndMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionUpperAngledAndMiddleAndLowerAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirbagOff)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirbagOff2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirbagOn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAirbagOn2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightAutomatic)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightFan)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightSteeringwheel)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWaves)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpper)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkateboarding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkateboardingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkateboardingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkiingCrosscountryCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkiingCrosscountryCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkiingDownhillCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSkiingDownhillCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSnowboardingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSnowboardingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSocialdanceCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSocialdanceCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSoftballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSoftballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSquashCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSquashCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStairStepperCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStairStepperCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStairsCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStairsCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStandDress)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStandDressLineVerticalFigure)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStepTrainingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStepTrainingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStrengthtrainingFunctionalCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStrengthtrainingFunctionalCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStrengthtrainingTraditionalCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureStrengthtrainingTraditionalCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSurfingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureSurfingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTableTennisCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTableTennisCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTaichiCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTaichiCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTennisCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTennisCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTrackAndFieldCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureTrackAndFieldCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureVolleyballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureVolleyballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWalkTreadmill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWalkTreadmillCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWalkTreadmillCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWalkTriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWalkTriangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWaterFitnessCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWaterFitnessCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWaterpoloCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWaterpoloCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWrestlingCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureWrestlingCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureYogaCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.figureYogaCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.fireExtinguisher)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.fireExtinguisherFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.flagPatternCheckered)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.flagPatternCheckered2Crossed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.flagPatternCheckeredCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.flagPatternCheckeredCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.florinsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.fluidBatteryblock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.fluidCoolant)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.formfittingGamecontroller)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.formfittingGamecontrollerFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.francsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.fuelpumpAndFilter)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.gamecontrollerCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.gamecontrollerCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.gaugeOpenWithLinesNeedle33percentAndArrowTriangleheadFrom0percentTo50percent)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.gearshapeArrowTrianglehead2ClockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.greaterthanorequalto)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.greaterthanorequaltoCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.greaterthanorequaltoCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.greaterthanorequaltoSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.greaterthanorequaltoSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.guaranisignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handDrawBadgeEllipsis)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handDrawBadgeEllipsisFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handPalmFacing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handPalmFacingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handPinch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handPinchFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handPointUpBrailleBadgeEllipsis)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handPointUpBrailleBadgeEllipsisFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handRaisedPalmFacing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handRaisedPalmFacingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handRays)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.handRaysFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hatCap)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hatCapFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hatWidebrim)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hatWidebrimFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.headProfileArrowForwardAndVisionPro)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.headphonesSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.headset)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.headsetCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.headsetCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.heartTextClipboard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.heartTextClipboardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.heatWavesAndFan)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.helmet)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.helmetFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeaker2BadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeaker2BadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeaker2BadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeaker2BadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodBadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodBadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodMini)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodMiniBadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodMiniBadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodMiniBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodMiniBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerAndHomepodMiniFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerArrowForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerArrowForwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerBadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerBadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hifispeakerBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepod2BadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepod2BadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepod2BadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepod2BadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodAndHomepodMini)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodAndHomepodMiniBadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodAndHomepodMiniBadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodAndHomepodMiniBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodAndHomepodMiniBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodAndHomepodMiniFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodArrowForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodArrowForwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodBadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodBadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini2BadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini2BadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini2BadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini2BadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMini2Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniArrowForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniArrowForwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniBadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniBadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.homepodMiniFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hourglassBadgeEye)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.houseBadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.houseBadgeExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.houseBadgeWifi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.houseBadgeWifiFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.houseSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.houseSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.hryvniasignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.indianrupeesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.inhaler)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.inhalerFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledApplewatchCase)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomhalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomhalfRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomhalfTophalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomleadingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomleadingRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomleftRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomleftRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomrightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomrightRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomthirdRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomthirdRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomthirdSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomtrailingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledBottomtrailingRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCapsule)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCapsulePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCenterRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCenterRectangleBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCenterRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledCircleDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledDiamond)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadinghalfArrowLeadingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadinghalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadinghalfRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadinghalfToptrailingBottomtrailingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadinghalfTrailinghalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadingthirdRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadingthirdRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeadingthirdSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLefthalfArrowLeftRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLefthalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLefthalfRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLefthalfRighthalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLefthalfToprightBottomrightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeftthirdRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeftthirdRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledLeftthirdSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledOval)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledOvalPortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRectangleAndCursorarrow)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRectangleAndPersonFilled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRectangleBadgeRecord)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRectangleOnRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRighthalfArrowRightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRighthalfLefthalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRighthalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRighthalfRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRightthirdRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRightthirdRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledRightthirdSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledSquareDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTophalfBottomhalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTophalfBottomleftBottomrightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTophalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTophalfRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleadingBottomleadingTrailinghalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleadingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleadingRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleftBottomleftRighthalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleftRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleftRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleftToprightBottomhalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopleftToprightBottomleftBottomrightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledToprightRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledToprightRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopthirdRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopthirdRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTopthirdSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledToptrailingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledToptrailingRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailinghalfArrowTrailingRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailinghalfLeadinghalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailinghalfRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailinghalfRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailingthirdRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailingthirdRectanglePortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTrailingthirdSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTriangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.insetFilledTv)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadBadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen1BadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen1LandscapeBadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen1LandscapeSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen1Slash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen2BadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen2LandscapeBadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen2LandscapeSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadGen2Slash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadLandscapeAndIphone)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadLandscapeAndIphoneSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipadLandscapeBadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneAndArrowForwardInward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneAndArrowForwardOutward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneAndArrowLeftAndArrowRightInward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneAndArrowRightInward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneAndArrowRightOutward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneAppSwitcher)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneBadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneCropCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneDockMotorizedViewfinder)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen1AndArrowLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen1BadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen1CropCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen1LandscapeSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen1Motion)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen2AndArrowLeftAndArrowRightInward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen2BadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen2CropCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen2LandscapeSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen2Motion)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen3AndArrowLeftAndArrowRightInward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen3BadgeLocation)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen3CropCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen3LandscapeSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneGen3Motion)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.iphoneMotion)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodShuffleGen1)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodShuffleGen2)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodShuffleGen3)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodShuffleGen4)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodTouch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodTouchLandscape)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ipodTouchSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.jacket)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.jacketFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.key2OnRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.key2OnRingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.keyCarRadiowavesForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.keyCarRadiowavesForwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.keyCarRadiowavesForwardFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.keyCarRadiowavesForwardRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.keyCard)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.keyCardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.kipsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ladybugSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ladybugSlashCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ladybugSlashCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.ladybugSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.larisignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.leafArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lessthanorequalto)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lessthanorequaltoCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lessthanorequaltoCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lessthanorequaltoSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lessthanorequaltoSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lirasignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.locationApp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.locationAppFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lockDocument)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lockDocumentFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.lockRectangleOnRectangleDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.macbookAndApplewatch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.macbookAndVisionPro)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.macbookSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsign)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.malaysianringgitsignSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.manatsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.matterLogo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.mecca)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphone)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneAndSignalMeter)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneAndSignalMeterFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneBadgeEllipsis)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneBadgeEllipsisFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneBadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneBadgeXmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneBadgeXmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneSlashCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneSlashCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.microphoneSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.millsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.minusArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.moonRoadLanes)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.moped)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.mopedFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.motorcycle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.motorcycleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.musicMicrophone)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.musicMicrophoneCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.musicMicrophoneCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.nairasignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.norwegiankronesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.notequal)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.notequalCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.notequalCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.notequalSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.notequalSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbers)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersRectangle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersRectangleAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersRectangleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersRectangleFillAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersRectangleFillHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.numbersRectangleHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.oar2CrossedCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.oar2CrossedCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.oilcanAndThermometer)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.oilcanAndThermometerFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.parkingsignRadiowavesDownRightOff)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.parkingsignRadiowavesLeftAndRightSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.parkingsignSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.parkingsignSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.person2ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.person2BadgeMinus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.person2BadgeMinusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.person2BadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.person2BadgePlusFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personAndArrowLeftAndArrowRightOutward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personBadgeShieldExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personBadgeShieldExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personCropBadgeMagnifyingglass)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personCropBadgeMagnifyingglassFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personCropSquareOnSquareAngled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personCropSquareOnSquareAngledFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personFillAndArrowLeftAndArrowRightOutward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.personalhotspotSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessign)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.peruviansolessignSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesetasignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pesosignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.phoneBadgeClock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.phoneBadgeClockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.photoBadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.photoBadgeExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.photoOnRectangleAngledFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.plusArrowTriangleheadClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointBottomleftForwardToArrowTriangleScurvepath)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointBottomleftForwardToArrowTriangleScurvepathFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointBottomleftForwardToArrowTriangleUturnScurvepath)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointBottomleftForwardToArrowTriangleUturnScurvepathFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointToprightArrowTriangleBackwardToPointBottomleftFilledScurvepath)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointToprightArrowTriangleBackwardToPointBottomleftScurvepath)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointToprightArrowTriangleBackwardToPointBottomleftScurvepathFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.pointToprightFilledArrowTriangleBackwardToPointBottomleftScurvepath)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.polishzlotysignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.powermeter)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.powerplugPortrait)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.powerplugPortraitFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.printerDotmatrixFilledAndPaperInverse)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.printerDotmatrixInverse)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.printerFilledAndPaperInverse)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.printerInverse)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.progressIndicator)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkCircleDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkCircleDashedAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkTextPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkTextPageAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkTextPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkTextPageFillAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkTextPageFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.questionmarkTextPageRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rectangleExpandDiagonal)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rectangleGrid3x3)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rectangleGrid3x3Fill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rectangleOnRectangleDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rectanglePatternCheckered)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageFillZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.richtextPageZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.roboticVacuum)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.roboticVacuumFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rublesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rugbyball)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rugbyballCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rugbyballCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rugbyballFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.rupeesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sharedwithyou)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sharedwithyouCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sharedwithyouCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sharedwithyouSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shekelsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.shieldPatternCheckered)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsign)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.singaporedollarsignSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sliderHorizontal2ArrowTriangleheadCounterclockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sliderHorizontal2RectangleAndArrowTrianglehead2ClockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.speakerWave1ArrowtrianglesUpRightDownLeft)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.squareAndArrowDownBadgeClock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.squareAndArrowDownBadgeClockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.squareAndArrowUpTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.squareGrid3x3SquareBadgeEllipsis)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.squareroot)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.steeringwheelAndHands)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.steeringwheelArrowTriangleheadCounterclockwiseAndClockwise)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sterlingsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sunLefthalfFilled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.sunRighthalfFilled)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suspensionShock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideFrontOpenCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideFrontOpenCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideHillDescentControl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideHillDescentControlFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideRearOpenCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideRearOpenCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideRoofCargoCarrier)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideRoofCargoCarrierFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideRoofCargoCarrierSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.suvSideRoofCargoCarrierSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.swedishkronasignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tachometer)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tengesignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textBubbleBadgeClock)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textBubbleBadgeClockFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textBubbleBadgeClockFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textBubbleBadgeClockRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textDocument)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textDocumentFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textLineMagnify)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPageBadgeMagnifyingglass)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPageSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPageSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPageSlashFillRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textPageSlashRtl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textRectanglePage)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textRectanglePageFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAltZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharacters)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRight)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightRu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderline)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineRu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersDottedunderlineZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersRu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatCharactersZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatEl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatHe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatJa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatKo)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbers)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersAr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersBn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersGu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersHi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersKm)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersKn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersMl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersMni)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersMy)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersOr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersPa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersSat)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatNumbersTe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeBn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeGu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeKn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerBn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerGu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerKn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerMl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerMni)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerMr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerOr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerPa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerSat)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerSi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerTa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeLargerTe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeMl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeMni)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeMr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeOr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizePa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSat)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerBn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerGu)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerKn)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerMl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerMni)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerMr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerOr)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerPa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerSat)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerSi)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerTa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeSmallerTe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeTa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatSizeTe)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatTh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.textformatZh)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.thermometerAndLiquidWavesSnowflake)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.thermometerAndLiquidWavesTrianglebadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.thermometerVariable)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tire)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tireBadgeSnowflake)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.towHitch)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.towHitchExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.towHitchExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.towHitchFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckPickupSideFrontOpenCrop)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckPickupSideFrontOpenCropFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckSideHillDescentControl)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckSideHillDescentControlFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckSideRoofCargoCarrier)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckSideRoofCargoCarrierFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckSideRoofCargoCarrierSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.truckSideRoofCargoCarrierSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tsa)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tsaCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tsaCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tsaSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.tugriksignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.turkishlirasignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionPro)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProAndArrowForward)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProAndArrowForwardFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProBadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProBadgeExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProBadgePlay)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProBadgePlayFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProSlash)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProSlashCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProSlashCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProSlashFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProTrianglebadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.visionProTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.walletBifold)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.walletBifoldFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wandAndSparkles)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wandAndSparklesInverse)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.waterWavesAndArrowTriangleheadDown)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.waterWavesAndArrowTriangleheadDownTrianglebadgeExclamationmark)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.waterWavesAndArrowTriangleheadUp)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3Down)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownCarSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownCarSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownConvertibleSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownConvertibleSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownPickupSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownPickupSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownSuvSide)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3DownSuvSideFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3Up)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3UpCircle)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wave3UpCircleFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.waveformBadgeMicrophone)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wheelchair)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetExtralarge)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetExtralargeBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetLarge)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetLargeBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetMedium)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetMediumBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetSmall)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.widgetSmallBadgePlus)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.wonsignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.xmarkTriangleCircleSquare)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.xmarkTriangleCircleSquareFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignArrowTriangleheadCounterclockwiseRotate90)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignBankBuilding)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignBankBuildingFill)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignGaugeChartLefthalfRighthalf)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignGaugeChartLeftthirdTopthirdRightthird)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignRing)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.yensignRingDashed)
            }

            if #available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *) {
                allCases.append(Self.zipperPage)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.boltHouse)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.boltHouseFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.cableConnectorVideo)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.carTopRadiowaves2FrontLeftFrontFrontRight)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.carTopRadiowaves2FrontLeftFrontFrontRightFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.carTopRadiowaves2RearLeftRearRearRight)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.carTopRadiowaves2RearLeftRearRearRightFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleBn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillBn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillGu)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillKn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillMl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillMni)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillMr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillOr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillPa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillSat)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillSi)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillTa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleFillTe)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleGu)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleKn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleMl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleMni)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleMr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleOr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCirclePa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleSat)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleSi)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleTa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterCircleTe)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareBn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillBn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillGu)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillKn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillMl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillMni)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillMr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillOr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillPa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillSat)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillSi)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillTa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareFillTe)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareGu)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareKn)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareMl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareMni)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareMr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareOr)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquarePa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareSat)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareSi)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareTa)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.characterSquareTe)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.dotCarTopRadiowaves2RearLeftRearRearRight)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.dotCarTopRadiowaves2RearLeftRearRearRightFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.envelopeStack)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.envelopeStackFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.exclamationmarkMessage)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.exclamationmarkMessageFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.handThumbsdownSlash)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.handThumbsdownSlashFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.handThumbsupSlash)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.handThumbsupSlashFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.laurelLeadingLaurelTrailing)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.memoriesBadgeCheckmark)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.memoriesBadgeXmark)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.photoBadgeMagnifyingglass)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.photoBadgeMagnifyingglassFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.questionmarkMessage)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.questionmarkMessageFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.rectangleGrid3x1)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.rectangleGrid3x1Fill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.squareAndArrowDownBadgeCheckmark)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.squareAndArrowDownBadgeCheckmarkFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.squareAndArrowDownBadgeXmark)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.squareAndArrowDownBadgeXmarkFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformBadgeCheckmark)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformBadgeXmark)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgMagnifyingglass)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgText)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextClipboard)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextClipboardFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextClipboardFillRtl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextClipboardRtl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextPage)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextPageFill)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextPageFillRtl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextPageRtl)
            }

            if #available(iOS 18.1, macOS 15.1, tvOS 18.1, visionOS 2.1, watchOS 11.1, *) {
                allCases.append(Self.waveformPathEcgTextRtl)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.airpodsGen4)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.airpodsGen4ChargingcaseWireless)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.airpodsGen4ChargingcaseWirelessFill)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.airpodsGen4Left)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.airpodsGen4Right)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.appleWritingTools)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.exclamationmarkTriangleTextPage)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.exclamationmarkTriangleTextPageFill)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.exclamationmarkTriangleTextPageFillRtl)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.exclamationmarkTriangleTextPageRtl)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.figureSeatedSideLeftAirDistributionUpperAndMiddleAndLower)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.figureSeatedSideRightAirDistributionUpperAndMiddleAndLower)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.headphonesDots)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.infoTriangle)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.infoTriangleFill)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.insetFilledRectangleAndPersonFilledCircle)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.insetFilledRectangleAndPersonFilledCircleFill)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.questionmarkMessageAr)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.questionmarkMessageFillAr)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.receipt)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.receiptFill)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.wandAndOutline)
            }

            if #available(iOS 18.2, macOS 15.2, tvOS 18.2, visionOS 2.2, watchOS 11.2, *) {
                allCases.append(Self.wandAndOutlineInverse)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.arrowBackwardToLineCompact)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.arrowForwardToLineCompact)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carSideArrowLeftAndRight)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carSideArrowLeftAndRightFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carSideRearAndCollisionAndCarSideFrontAndArrowForward)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carSideRearAndCollisionAndCarSideFrontAndSteeringwheel)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carTopLaneDashedDepartureLeftSlash)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carTopLaneDashedDepartureLeftSlashFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carTopLaneDashedDepartureRightSlash)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.carTopLaneDashedDepartureRightSlashFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterCursorIbeamTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifySat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifySi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterMagnifyTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparkles)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesAr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesHe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesHi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesJa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesKo)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesTh)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBadgeSparklesZh)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.characterTextboxTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.convertibleSideArrowLeftAndRight)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.convertibleSideArrowLeftAndRightFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.convertibleSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.convertibleSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.cursorarrowResizeNorthEastSouthEast)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollection)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollectionRectangle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollectionRectangleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollectionRectangleSlash)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollectionRectangleSlashFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollectionRectangleTrianglebadgeExclamationmark)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.electronicTollCollectionRectangleTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.engineEmissionAndDrop2WaterWaveBelow)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.envelopeAndArrow3Down)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.envelopeAndArrow3DownFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.flagPatternCheckeredLc)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.fuelFilterWater)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.functionAr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.hydrogen)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.hydrogenCircle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.hydrogenCircleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.hydrogenSquare)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.hydrogenSquareFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.infoCircleTextPage)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.infoCircleTextPageFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.infoCircleTextPageFillRtl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.infoCircleTextPageRtl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keyCarSide)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keyCarSideFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keyConvertibleSide)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keyConvertibleSideFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keySuvSide)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keySuvSideFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keyTruckPickupSide)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.keyTruckPickupSideFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.longTextPageAndPencil)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.longTextPageAndPencilFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.macminiGen2)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.macminiGen2Fill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.macminiGen3)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.macminiGen3Fill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.memoriesSlash)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.minusPlusBatteryblockStackArrowtriangleLeft)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.minusPlusBatteryblockStackArrowtriangleLeftFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.minusPlusBatteryblockStackArrowtriangleRight)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.minusPlusBatteryblockStackArrowtriangleRightAndArrowtriangleLeft)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.minusPlusBatteryblockStackArrowtriangleRightAndArrowtriangleLeftFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.minusPlusBatteryblockStackArrowtriangleRightFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.nosignBadgeClock)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.personCheckmarkAndXmark)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.personCheckmarkAndXmarkRtl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.personFillCheckmarkAndXmark)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.personFillCheckmarkAndXmarkRtl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.photoBadgeShieldExclamationmark)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.photoBadgeShieldExclamationmarkFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.photoTrianglebadgeExclamationmark)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.photoTrianglebadgeExclamationmarkFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.pi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.piCircle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.piCircleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.piSquare)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.piSquareFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.plusMinusCapsule)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.plusMinusCapsuleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.repeatBadgeXmarkCircleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.roadLaneArrowtriangle2Outward)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.roboticVacuumAndArrowtriangleUp)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.roboticVacuumAndArrowtriangleUpFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.roboticVacuumAndEllipsis)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.roboticVacuumAndEllipsisFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.spoonServing)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.squareAndArrowUpBadgeCheckmark)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.squareAndArrowUpBadgeCheckmarkFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.squareshapeSplit2x2DottedInside)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.squareshapeSplit2x2DottedInsideAndOutside)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.squareshapeSplit2x2DottedOutside)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.starHexagon)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.starHexagonFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.suvSideArrowLeftAndRight)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.suvSideArrowLeftAndRightFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.suvSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.suvSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatAltTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersArrowLeftAndRightTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlinePa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersDottedunderlineTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatCharactersTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSubscriptTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptBn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptGu)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptKn)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptMl)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptMni)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptMr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptOr)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptPa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptSat)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptSi)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatSuperscriptTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatTa)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.textformatTe)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.truckPickupSideArrowLeftAndRight)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.truckPickupSideArrowLeftAndRightFill)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.truckPickupSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangle)
            }

            if #available(iOS 18.4, macOS 15.4, tvOS 18.4, visionOS 2.4, watchOS 11.4, *) {
                allCases.append(Self.truckPickupSideHillDownAndGaugeOpenWithLinesNeedle25percentAndArrowtriangleFill)
            }

            if #available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *) {
                allCases.append(Self.appleIntelligenceBadgeXmark)
            }

            if #available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *) {
                allCases.append(Self.beatsPowerbeatsPro2)
            }

            if #available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *) {
                allCases.append(Self.beatsPowerbeatsPro2Chargingcase)
            }

            if #available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *) {
                allCases.append(Self.beatsPowerbeatsPro2ChargingcaseFill)
            }

            if #available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *) {
                allCases.append(Self.beatsPowerbeatsPro2Left)
            }

            if #available(iOS 18.5, macOS 15.5, tvOS 18.5, visionOS 2.5, watchOS 11.5, *) {
                allCases.append(Self.beatsPowerbeatsPro2Right)
            }

            return allCases
        }
    }
}
